[{"title":"人脸识别智慧支付系统","date":"2024-07-16T00:36:20.000Z","path":"2024/07/16/人脸识别智慧支付系统/","text":"登录注册前端界面login.html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;登录&lt;/title&gt; &lt;style&gt; body &#123; background-image: url(https://api.vvhan.com/api/wallpaper/views); background-repeat: no-repeat; background-position: center 0; background-size: cover; &#125; #login, #register &#123; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border: none; padding: 20px; width: 250px; border-radius: 20px; box-shadow: 5px 5px 10px black; text-align: center; color: white; background-color: rgba(0, 0, 0, 0.3); backdrop-filter: blur(2px); &#125; .text &#123; display: block; margin: 14px auto; width: 180px; padding: 10px 15px; text-align: center; border: 2px solid orange; border-radius: 10px; outline: none; transition: .5s; height: 20px; background: none; color: white; &#125; .text:focus &#123; width: 220px; height: 30px; &#125; .text::placeholder &#123; color: white; &#125; .btn &#123; font-size: 16px; padding: 5px 18px; background-color: purple; color: white; border: none; border-radius: 10px; cursor: pointer; box-shadow: 0px 0px 10px white; transition: .5s; margin: 0px 8px; &#125; .btn:hover &#123; box-shadow: 0px 0px 20px white; transform: rotate(360deg); &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;login&quot;&gt; &lt;h1 id=&quot;login_msg&quot;&gt;登录&lt;/h1&gt; &lt;input class=&quot;text&quot; name=&quot;username&quot; id=&quot;login_username&quot; type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt; &lt;input class=&quot;text&quot; name=&quot;password&quot; id=&quot;login_password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;login_server()&quot; value=&quot;登录&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;login_register()&quot; value=&quot;注册&quot;&gt; &lt;/div&gt; &lt;div id=&quot;register&quot; style=&quot;display: none;&quot;&gt; &lt;h1 id=&quot;register_msg&quot;&gt;注册&lt;/h1&gt; &lt;input class=&quot;text&quot; id=&quot;register_username&quot;type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt; &lt;input class=&quot;text&quot; id=&quot;register_password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;input class=&quot;text&quot; id=&quot;register_password2&quot; type=&quot;password&quot; placeholder=&quot;确认密码&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;register_server()&quot; value=&quot;注册&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;register_login()&quot; value=&quot;登录&quot;&gt; &lt;/div&gt; &lt;script&gt; var log = document.querySelector(&quot;#login&quot;); var reg = document.querySelector(&quot;#register&quot;); function login_register() &#123; log.style.display = &quot;none&quot;; reg.style.display = &quot;&quot;; &#125; function register_login() &#123; log.style.display = &quot;&quot;; reg.style.display = &quot;none&quot;; &#125; function check_username()&#123; var login_username = document.querySelector(&quot;#login_username&quot;).value; var register_username = document.querySelector(&quot;#register_username&quot;).value; if (login_username.trim().length)&#123; username = login_username; &#125;else&#123; username = register_username; &#125; var formData = new FormData(); formData.append(&#x27;username&#x27;, username); fetch(&#x27;/checkusername&#x27;,&#123; method: &#x27;POST&#x27;, body: formData &#125;) .then(response =&gt; response.json()) .then(data =&gt; &#123; if(data.code == 1)&#123; document.querySelector(&quot;#login_msg&quot;).innerHTML = &quot;登录&quot;; document.querySelector(&quot;#register_msg&quot;).innerHTML = &quot;用户名已存在&quot;; &#125;else &#123; // 现在 logi n时用户名不存在，也可以登录，待优化：后端不接受数据 document.querySelector(&quot;#login_msg&quot;).innerHTML = &quot;用户名不存在&quot;; document.querySelector(&quot;#register_msg&quot;).innerHTML = &quot;注册&quot;; &#125; &#125;); &#125; var username = document.querySelector(&quot;#login_username&quot;); username.addEventListener(&quot;input&quot;, check_username); var regusername = document.querySelector(&quot;#register_username&quot;); regusername.addEventListener(&quot;input&quot;, check_username); function login_server()&#123; var username = document.querySelector(&quot;#login_username&quot;).value; var password = document.querySelector(&quot;#login_password&quot;).value; if(!username.trim().length || !password.trim().length)&#123; alert(&quot;用户名或密码不能为空！&quot;); return; &#125; var formData = new FormData(); formData.append(&#x27;username&#x27;, username); formData.append(&#x27;password&#x27;, password); fetch(&#x27;/login&#x27;,&#123; method: &#x27;POST&#x27;, body: formData &#125;) .then(response =&gt; response.json()) .then(data =&gt; &#123; if(data.code == 1)&#123; alert(&quot;登录成功！&quot;); window.location.href=&quot;/playgame&quot;; &#125;else &#123; alert(data.msg); window.location.href=&quot;/login&quot;; &#125; &#125;); &#125; function register_server()&#123; var username = document.querySelector(&quot;#register_username&quot;).value; var password = document.querySelector(&quot;#register_password&quot;).value; var password2 = document.querySelector(&quot;#register_password2&quot;).value; if(!username.trim().length || !password.trim().length || !password2.trim().length)&#123; alert(&quot;用户名或密码不能为空！&quot;); return; &#125; if(password != password2)&#123; alert(&quot;两次密码不一样&quot;); return; &#125; var formData = new FormData(); formData.append(&#x27;username&#x27;, username); formData.append(&#x27;password&#x27;, password); fetch(&#x27;/register&#x27;,&#123; method: &#x27;POST&#x27;, body: formData &#125;) .then(response =&gt; response.json()) .then(data =&gt; &#123; if(data.code == 1)&#123; alert(&quot;注册成功！请登录&quot;); window.location.href=&quot;/login&quot;; &#125;else &#123; alert(data.msg); window.location.href=&quot;/login&quot;; &#125; &#125;); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 前后端与Flask 对接登录、注册功能 fetch 实现前后端分离 session、cookie app.py 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152from flask import Flask, request, render_template,session,redirectimport log_regimport jsonapp = Flask(__name__)app.secret_key = &quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;@app.route(&quot;/login&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def login(): log_reg.get_db() if request.method == &quot;POST&quot;: username = request.form.get(&quot;username&quot;) if log_reg.check_username(username) == 0: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;用户名不存在！&quot;&#125;) password = request.form.get(&quot;password&quot;) result = log_reg.login(username, password) if result[&quot;code&quot;] == 1: session[&quot;username&quot;] = username return json.dumps(result) return render_template(&quot;login.html&quot;)@app.route(&quot;/register&quot;, methods=[&quot;POST&quot;])def register(): log_reg.get_db() # 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法 username = request.form.get(&quot;username&quot;) if log_reg.check_username(username) == 1: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;用户名已存在！&quot;&#125;) password = request.form.get(&quot;password&quot;) return json.dumps(log_reg.register(username, password))@app.route(&quot;/checkusername&quot;, methods=[&quot;POST&quot;])def checkusername(): username = request.form.get(&quot;username&quot;) log_reg.get_db() if log_reg.check_username(username): return json.dumps(&#123;&quot;code&quot;: 1&#125;) return json.dumps(&#123;&quot;code&quot;: 0&#125;)@app.route(&quot;/playgame&quot;)def playgame(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot; username = session.get(&quot;username&quot;) return f&quot;&#123;username&#125;正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;@app.route(&quot;/logout&quot;)def logout(): session.clear() # 把服务器的清掉 return &quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5000) pymysql数据库常用指令show databases;– 查看数据库 create database student;– 创建数据库 use student– 使用数据库 drop database student;– 删除数据库 select database();– 查看当前在什么数据库中 show tables;– 查看表 create table user(id int primary key auto_increment,username varchar(200) unique key, # 不允许重复password varchar(200))default char set utf8;– 创建表 show create table user\\G– 查看表格的创建代码 desc user;– 查看表结构 alter table user add del int default 1;– 添加一列数据 update user set del&#x3D;0 where id&#x3D;3;– 实际生成中一般标记而非删除 insert into user(username, password) values(“admin”,”admin”),(“张三”,”123456”);– 插入数据 select * from user;– 查找数据 select username,id from user;– 指定列，查看数据 select * from user where username&#x3D;”admin”;– 带上条件的查询 select * from user where username&#x3D;”admin” and password&#x3D;”admin”;– 带上多个条件的查询 update user set password&#x3D;”123123” where username&#x3D;”admin”;– 修改数据，必须要带上一个条件 delete from user where id&#x3D;2;– 删除数据，带约束条件– 不建议删除 update user set del&#x3D;0 where id&#x3D;3;– 使用update代替delete做伪删除select * from user where del&#x3D;1;– 查找的时候带上del的状态 truncate user;– 清空指定数据表 drop table user;– 删除表 数据库版app.py 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798import hashlibfrom flask import Flask, request, render_template,session,redirectimport log_regimport jsonimport pymysqlapp = Flask(__name__)app.secret_key = &quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;@app.route(&quot;/hello&quot;)def hello(): return &quot;Hello&quot;@app.route(&quot;/test/&lt;int:id&gt;&quot;)def test(id): return f&quot;&lt;h1&gt;Hello &#123;str(id)&#125;&lt;/h1&gt;&quot;@app.route(&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;)def gender(gender): if gender == &quot;boy&quot;: return &quot;你好帅哥&quot; elif gender == &quot;girl&quot;: return &quot;你好美女&quot;def run_sql(): # 连接数据库 cursor = pymysql.connect( host=&#x27;localhost&#x27;, # 主机名 user=&#x27;root&#x27;, # 用户名 passwd=&#x27;usbw&#x27;, # 密码 database=&#x27;student&#x27;, # 自己创建的数据库 charset=&#x27;utf8mb4&#x27;, autocommit=True # 更改不会自动提交 ).cursor() # 获得游标 def inner(sql): # 闭包 cursor.execute(sql) return cursor return innerdb_query = run_sql() # 连接一次数据库 之后穿sql就行了# 用户名+密码+随机字符 md5def password_md5(username,password): res = hashlib.md5(f&quot;&#123;password&#125;ajlll&#123;password&#125;hhh&quot;.encode(&#x27;utf-8&#x27;)).hexdigest() return res@app.route(&quot;/login&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def login(): if request.method == &quot;POST&quot;: username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username,password) # 让数据库执行sql语句，而不用一次加载到内存中 sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27; and password = &#x27;&#123;password&#125;&#x27;&quot; res = db_query(sql).fetchall() # 从数据库查询结果集中获取所有行 if len(res) &gt; 0: session[&quot;username&quot;] = username return json.dumps(&#123;&quot;code&quot; : 1, &quot;msg&quot;: &quot;登录成功！&quot;&#125;) else: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;) return render_template(&quot;login.html&quot;)@app.route(&quot;/register&quot;, methods=[&quot;POST&quot;])def register(): # 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法 username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username,password) sql = f&quot;insert into user (username, password) values(&#x27;&#123;username&#125;&#x27;, &#x27;&#123;password&#125;&#x27;)&quot; try: # 数据库username唯一键约束 单纯的前端约束不靠谱 db_query(sql) except: return json.dumps(&#123;&quot;codde&quot;: 0, &quot;msg&quot;: &quot;注册失败！&quot;&#125;) return json.dumps(&#123;&quot;codde&quot;: 1, &quot;msg&quot;: &quot;注册成功！&quot;&#125;)@app.route(&quot;/checkusername&quot;, methods=[&quot;POST&quot;])def checkusername(): username = request.form.get(&quot;username&quot;) sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27;&quot; res = db_query(sql).fetchall() # 从数据库查询结果集中获取所有行 if len(res) &gt; 0: return json.dumps(&#123;&quot;code&quot;: 1&#125;) return json.dumps(&#123;&quot;code&quot;: 0&#125;)@app.route(&quot;/playgame&quot;)def playgame(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot; username = session.get(&quot;username&quot;) return f&quot;&#123;username&#125;正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;@app.route(&quot;/logout&quot;)def logout(): session.clear() # 把服务器的清掉 return &quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5000) 菜单+支付功能开发思路：先写前端，再逐渐增添功能：html ——&gt; css ——&gt; jsgoods.html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;今日菜单&lt;/title&gt; &lt;style&gt; * &#123; margin: 0; padding: 0; &#125; .table_text &#123; border: none; outline: none; text-align: center; background: none; &#125; .change, .change_logo &#123; position: fixed; text-align: center; width: 100%; height: 100vh; background: rgba(0, 0, 0, 0.8); padding-top: 100px; color: white; backdrop-filter: blur(2px); &#125; .change_input &#123; display: block; background: none; padding: 10px 20px; color: white; border: 1px solid yellow; border-radius: 10px; outline: none; margin: 20px auto; &#125; .change_input::placeholder &#123; color: white; &#125; .change_btn &#123; padding: 10px 20px; color: black; background-color: yellow; border: none; border-radius: 10px; cursor: pointer; &#125; .userinfo &#123; position: fixed; right: 10px; top: 10px; width: 150px; border: 1px solid black; border-radius: 20px; text-align: center; padding: 20px; &#125; a &#123; text-decoration: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;userinfo&quot;&gt; &lt;img width=&quot;50px&quot; src=&quot;&#123;&#123; logo &#125;&#125;&quot; alt=&quot;&quot;&gt; &lt;h3&gt;欢迎用户&#123;&#123; username &#125;&#125;&lt;/h3&gt; &lt;p onclick=&quot;change_logo(&#x27;&#123;&#123; userid &#125;&#125;&#x27;)&quot; style=&quot;cursor: pointer&quot;&gt;修改头像&lt;/p&gt; &lt;p onclick=&quot;window.location.href=&#x27;/logout&#x27;&quot; style=&quot;cursor: pointer&quot;&gt;退出登录&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;change&quot; style=&quot;display: none;&quot;&gt; &lt;h1&gt;修改内容&lt;/h1&gt; &lt;input type=&quot;hidden&quot; id=&quot;change_id&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;change_name&quot; class=&quot;change_input&quot; placeholder=&quot;输入菜名&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;change_price&quot; class=&quot;change_input&quot; placeholder=&quot;输入价格&quot;&gt; &lt;input type=&quot;submit&quot; class=&quot;change_btn&quot; onclick=&quot;off_change()&quot; value=&quot;提交修改&quot;&gt; &lt;/div&gt; &lt;div class=&quot;change_logo&quot; style=&quot;display: none;&quot;&gt; &lt;h1&gt;上传头像&lt;/h1&gt; &lt;form action=&quot;/changelogo&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;userid&quot; id=&quot;userid&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt; &lt;input type=&quot;submit&quot; class=&quot;change_btn&quot; value=&quot;提交修改&quot;&gt; &lt;/form&gt; &lt;/div&gt; &lt;center&gt; &lt;h1&gt;今日特价&lt;/h1&gt; &lt;table border=&quot;1px&quot; cellspacing=&quot;0px&quot; style=&quot;width: 630px;&quot;&gt; &lt;tr align=&quot;center&quot; bgcolor=&quot;#87cefa&quot;&gt; &lt;form action=&quot;&quot;&gt; &lt;td colspan=&quot;3&quot;&gt; &lt;input class=&quot;table_text&quot; value=&quot;&#123;&#123; keyword &#125;&#125;&quot; name=&quot;search&quot; type=&quot;text&quot; placeholder=&quot;输入菜名&quot;&gt; &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;submit&quot; value=&quot;搜索&quot;&gt; &lt;/td&gt; &lt;/form&gt; &lt;/tr&gt; &lt;tr align=&quot;center&quot;&gt; &lt;td width=&quot;80px&quot;&gt;序号&lt;/td&gt; &lt;td width=&quot;120px&quot;&gt;菜名&lt;/td&gt; &lt;td width=&quot;80px&quot;&gt;价格&lt;/td&gt; &lt;td width=&quot;120px&quot;&gt;操作&lt;/td&gt; &lt;/tr&gt; &#123;% for items in goods %&#125; &lt;tr align=&quot;center&quot;&gt; &lt;td&gt;&#123;&#123; items[0] &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; items[1] &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; items[2] &#125;&#125;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;?del=&#123;&#123; items[0] &#125;&#125;&quot;&gt;删除&lt;/a&gt; &lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;on_change(&#x27;&#123;&#123; items[0] &#125;&#125;&#x27;,&#x27;&#123;&#123; items[1] &#125;&#125;&#x27;,&#x27;&#123;&#123; items[2] &#125;&#125;&#x27;)&quot;&gt;修改&lt;/a&gt; &lt;a href=&quot;/pay?id=&#123;&#123; items[0] &#125;&#125;&quot;&gt;购买&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;tr align=&quot;center&quot; id=&quot;addrow&quot; style=&quot;display: none;&quot;&gt; &lt;td&gt; &lt;input class=&quot;table_text&quot; type=&quot;text&quot; value=&quot;自动生成&quot; disabled&gt; &lt;/td&gt; &lt;td&gt; &lt;input class=&quot;table_text&quot; id=&quot;addname&quot; type=&quot;text&quot; placeholder=&quot;输入菜名&quot;&gt; &lt;/td&gt; &lt;td&gt; &lt;input class=&quot;table_text&quot; id=&quot;addprice&quot; type=&quot;text&quot; placeholder=&quot;输入价格&quot;&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;additems()&quot;&gt;添加&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr align=&quot;center&quot; id=&quot;addbutton&quot;&gt; &lt;td colspan=&quot;4&quot;&gt; &lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;addgoods()&quot;&gt;[+]新增菜品&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/center&gt; &lt;script&gt; var addrow = document.querySelector(&quot;#addrow&quot;); var addbutton = document.querySelector(&quot;#addbutton&quot;); function addgoods() &#123; addrow.style.display = &quot;&quot;; addbutton.style.display = &quot;none&quot;; &#125; function additems() &#123; var addname = document.querySelector(&quot;#addname&quot;).value; var addprice = document.querySelector(&quot;#addprice&quot;).value; if (!addname.trim().length || !addprice.trim().length) &#123; alert(&quot;菜名和价格不能为空！&quot;); return; &#125; formData = new FormData(); formData.append(&#x27;name&#x27;, addname); formData.append(&#x27;price&#x27;, addprice); fetch(&quot;/goods&quot;, &#123; method: &quot;POST&quot;, body: formData &#125;).then(response =&gt; response.json()).then(data =&gt; &#123; console.log(data); if (data.code == 1) &#123; // alert(&quot;添加成功！&quot;); window.location.href = &#x27;/goods&#x27;; &#125; else &#123; alert(data.msg); window.location.href = &#x27;/goods&#x27;; &#125; &#125;) &#125; function on_change(id, name, price) &#123; var change = document.querySelector(&quot;.change&quot;); var change_name = document.querySelector(&quot;#change_name&quot;); var change_price = document.querySelector(&quot;#change_price&quot;); var change_id = document.querySelector(&quot;#change_id&quot;); change.style.display = &quot;&quot;; change_name.value = name; change_price.value = price; change_id.value = id; &#125; function off_change() &#123; var change = document.querySelector(&quot;.change&quot;); change.style.display = &quot;none&quot;; var name = document.querySelector(&quot;#change_name&quot;).value; var price = document.querySelector(&quot;#change_price&quot;).value; var id = document.querySelector(&quot;#change_id&quot;).value; if (!price.trim().length || !id.trim().length) &#123; alert(&quot;菜名和价格不能为空！&quot;); return; &#125; formData = new FormData(); formData.append(&#x27;id&#x27;, id); formData.append(&#x27;name&#x27;, name); formData.append(&#x27;price&#x27;, price); fetch(&quot;/changegoods&quot;, &#123; method: &quot;POST&quot;, body: formData &#125;).then(response =&gt; response.json()).then(data =&gt; &#123; console.log(data); if (data.code == 1) &#123; // alert(&quot;添加成功！&quot;); window.location.href = &#x27;/goods&#x27;; &#125; else &#123; alert(data.msg); window.location.href = &#x27;/goods&#x27;; &#125; &#125;) &#125; function change_logo(id) &#123; var change_logo = document.querySelector(&quot;.change_logo&quot;); change_logo.style.display = &quot;&quot;; var userid = document.querySelector(&quot;#userid&quot;); userid.value = id; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; app.py 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181import hashlibfrom flask import Flask, request, render_template,session,redirectimport log_regimport jsonimport pymysqlimport timeimport randomapp = Flask(__name__)app.secret_key = &quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;@app.route(&quot;/hello&quot;)def hello(): return &quot;Hello&quot;@app.route(&quot;/test/&lt;int:id&gt;&quot;)def test(id): return f&quot;&lt;h1&gt;Hello &#123;str(id)&#125;&lt;/h1&gt;&quot;@app.route(&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;)def gender(gender): if gender == &quot;boy&quot;: return &quot;你好帅哥&quot; elif gender == &quot;girl&quot;: return &quot;你好美女&quot;def run_sql(): # 连接数据库 cursor = pymysql.connect( host=&#x27;localhost&#x27;, # 主机名 user=&#x27;root&#x27;, # 用户名 passwd=&#x27;usbw&#x27;, # 密码 database=&#x27;student&#x27;, # 自己创建的数据库 charset=&#x27;utf8mb4&#x27;, autocommit=True # 更改不会自动提交 ).cursor() # 获得游标 def inner(sql): # 闭包 cursor.execute(sql) return cursor return innerdb_query = run_sql() # 连接一次数据库 之后穿sql就行了def pay_url(name, price): pay_info = &#123; &quot;pid&quot;: 1048, &quot;type&quot;: &quot;wxpay&quot;, # 时间+随机数 防止同时支付 &quot;out_trade_no&quot;: time.strftime(&quot;%Y%m%d%H%M%S&quot;) + str(random.randint(1000,9999)), &quot;notify_url&quot;: &quot;http://127.0.0.1&quot;, &quot;return_url&quot;: &quot;http://127.0.0.1:5000/checkpay&quot;, &quot;name&quot;: name, &quot;money&quot;: price, &quot;sign_type&quot;: &quot;MD5&quot; &#125; pay_info = &#123;k: v for k, v in pay_info.items() if v is not None and k != &#x27;sign&#x27; and k != &#x27;sign_type&#x27;&#125; sorted_params = sorted(pay_info.items()) pay_str = &quot;&amp;&quot;.join([f&quot;&#123;k&#125;=&#123;v&#125;&quot; for k, v in sorted_params]) hash_str = hashlib.md5((pay_str + &quot;RW288WWwRn2WgN4NEsaNiRWGeNQiwIEa&quot;).encode(&quot;utf-8&quot;)).hexdigest() url = &quot;https://pay.siyundata.com/submit.php?&quot; + pay_str + f&quot;&amp;sign=&#123;hash_str&#125;&quot; return url# 用户名+密码+随机字符 md5def password_md5(username,password): res = hashlib.md5(f&quot;&#123;password&#125;ajlll&#123;password&#125;hhh&quot;.encode(&#x27;utf-8&#x27;)).hexdigest() return res@app.route(&quot;/login&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def login(): if request.method == &quot;POST&quot;: username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username,password) # 让数据库执行sql语句，而不用一次加载到内存中 sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27; and password = &#x27;&#123;password&#125;&#x27;&quot; res = db_query(sql).fetchall() # 从数据库查询结果集中获取所有行 if len(res) &gt; 0: session[&quot;username&quot;] = username return json.dumps(&#123;&quot;code&quot; : 1, &quot;msg&quot;: &quot;登录成功！&quot;&#125;) else: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;) return render_template(&quot;login.html&quot;)@app.route(&quot;/register&quot;, methods=[&quot;POST&quot;])def register(): # 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法 username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username,password) sql = f&quot;insert into user (username, password) values(&#x27;&#123;username&#125;&#x27;, &#x27;&#123;password&#125;&#x27;)&quot; try: # 数据库username唯一键约束 单纯的前端约束不靠谱 db_query(sql) except: return json.dumps(&#123;&quot;codde&quot;: 0, &quot;msg&quot;: &quot;注册失败！&quot;&#125;) return json.dumps(&#123;&quot;codde&quot;: 1, &quot;msg&quot;: &quot;注册成功！&quot;&#125;)@app.route(&quot;/checkusername&quot;, methods=[&quot;POST&quot;])def checkusername(): username = request.form.get(&quot;username&quot;) sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27;&quot; res = db_query(sql).fetchall() # 从数据库查询结果集中获取所有行 if len(res) &gt; 0: return json.dumps(&#123;&quot;code&quot;: 1&#125;) return json.dumps(&#123;&quot;code&quot;: 0&#125;)@app.route(&quot;/playgame&quot;)def playgame(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot; username = session.get(&quot;username&quot;) return f&quot;&#123;username&#125;正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;@app.route(&quot;/logout&quot;)def logout(): session.clear() # 把服务器的清掉 return &quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;@app.route(&quot;/goods&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def goods(): sql = &quot;select * from goods where del=1&quot; goods = db_query(sql).fetchall() keyword = &quot;&quot; # 添加 if request.method == &quot;POST&quot;: name = request.form.get(&quot;name&quot;) price = request.form.get(&quot;price&quot;) sql = f&quot;insert into goods (name, price) values(&#x27;&#123;name&#125;&#x27;, &#x27;&#123;price&#125;&#x27;)&quot; try: db_query(sql).fetchall() # 键唯一 可能出现问题 try一下 except Exception as e: # 若报错 return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;菜品已存在&quot;&#125;) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;添加成功&quot;&#125;) # 删除功能 if request.args.get(&quot;del&quot;,0): id = request.args.get(&quot;del&quot;) sql = f&quot;update goods set del=0 where id=&#123;id&#125;&quot; db_query(sql) return &quot;&lt;script&gt;alert(&#x27;删除成功&#x27;);window.location.href=&#x27;/goods&#x27;&lt;/script&gt;&quot; # 搜索功能 elif request.args.get(&quot;search&quot;,0): keyword = request.args.get(&quot;search&quot;) sql = f&quot;select * from goods where name like &#x27;%&#123;keyword&#125;%&#x27; and del=1&quot; goods = db_query(sql).fetchall() if len(goods) == 0: goods = ((&quot;1&quot;, &quot;目前没有菜&quot;, &quot;0.0&quot;),) return render_template(&quot;goods.html&quot;, goods=goods, keyword=keyword)# 把 goods 作为一个模板传进来，在前端接收到后端传过来的模板，这样就可以在前端html文件里写一些后端处理的代码@app.route(&quot;/changegoods&quot;,methods=[&quot;POST&quot;])def changegoods(): name = request.form.get(&quot;name&quot;) price = request.form.get(&quot;price&quot;) id = request.form.get(&quot;id&quot;) sql = f&quot;update goods set name=&#x27;&#123;name&#125;&#x27;, price=&#x27;&#123;price&#125;&#x27; where id=&#123;id&#125;&quot; db_query(sql) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;修改成功&quot;&#125;)@app.route(&quot;/pay&quot;)def pay(): id = request.args.get(&quot;id&quot;) sql = f&quot;select * from goods where id=&#123;id&#125; and del=1&quot; goods = db_query(sql).fetchall() if len(goods) == 0: return &quot;&lt;script&gt;alert(&#x27;已售罄&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot; name = goods[0][1] price = goods[0][2] url = pay_url(name,price) return f&quot;&lt;script&gt;alert(&#x27;订单提交成功，请支付。&#x27;);window.location.href=&#x27;&#123;url&#125;&#x27;;&lt;/script&gt;&quot;@app.route(&quot;/checkpay&quot;)def checkpay(): return json.dumps(request.args)app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5000) 头像上传、修改功能goods.html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;登录&lt;/title&gt; &lt;style&gt; body &#123; background-image: url(https://api.vvhan.com/api/wallpaper/views); background-repeat: no-repeat; background-position: center 0; background-size: cover; &#125; #login, #register &#123; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border: none; padding: 20px; width: 250px; border-radius: 20px; box-shadow: 5px 5px 10px black; text-align: center; color: white; background-color: rgba(0, 0, 0, 0.3); backdrop-filter: blur(2px); &#125; .text &#123; display: block; margin: 14px auto; width: 180px; padding: 10px 15px; text-align: center; border: 2px solid orange; border-radius: 10px; outline: none; transition: .5s; height: 20px; background: none; color: white; &#125; .text:focus &#123; width: 220px; height: 30px; &#125; .text::placeholder &#123; color: white; &#125; .btn &#123; font-size: 16px; padding: 5px 18px; background-color: purple; color: white; border: none; border-radius: 10px; cursor: pointer; box-shadow: 0px 0px 10px white; transition: .5s; margin: 0px 8px; &#125; .btn:hover &#123; box-shadow: 0px 0px 20px white; transform: rotate(360deg); &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;login&quot;&gt; &lt;h1 id=&quot;login_msg&quot;&gt;登录&lt;/h1&gt; &lt;input class=&quot;text&quot; name=&quot;username&quot; id=&quot;login_username&quot; type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt; &lt;input class=&quot;text&quot; name=&quot;password&quot; id=&quot;login_password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;login_server()&quot; value=&quot;登录&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;login_register()&quot; value=&quot;注册&quot;&gt; &lt;/div&gt; &lt;div id=&quot;register&quot; style=&quot;display: none;&quot;&gt; &lt;h1 id=&quot;register_msg&quot;&gt;注册&lt;/h1&gt; &lt;input class=&quot;text&quot; id=&quot;register_username&quot;type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt; &lt;input class=&quot;text&quot; id=&quot;register_password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;input class=&quot;text&quot; id=&quot;register_password2&quot; type=&quot;password&quot; placeholder=&quot;确认密码&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;register_server()&quot; value=&quot;注册&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;register_login()&quot; value=&quot;登录&quot;&gt; &lt;/div&gt; &lt;script&gt; var log = document.querySelector(&quot;#login&quot;); var reg = document.querySelector(&quot;#register&quot;); function login_register() &#123; log.style.display = &quot;none&quot;; reg.style.display = &quot;&quot;; &#125; function register_login() &#123; log.style.display = &quot;&quot;; reg.style.display = &quot;none&quot;; &#125; function check_username()&#123; var login_username = document.querySelector(&quot;#login_username&quot;).value; var register_username = document.querySelector(&quot;#register_username&quot;).value; if (login_username.trim().length)&#123; username = login_username; &#125;else&#123; username = register_username; &#125; var formData = new FormData(); formData.append(&#x27;username&#x27;, username); fetch(&#x27;/checkusername&#x27;,&#123; method: &#x27;POST&#x27;, body: formData &#125;) .then(response =&gt; response.json()) .then(data =&gt; &#123; if(data.code == 1)&#123; document.querySelector(&quot;#login_msg&quot;).innerHTML = &quot;登录&quot;; document.querySelector(&quot;#register_msg&quot;).innerHTML = &quot;用户名已存在&quot;; &#125;else &#123; // 现在 logi n时用户名不存在，也可以登录，待优化：后端不接受数据 document.querySelector(&quot;#login_msg&quot;).innerHTML = &quot;用户名不存在&quot;; document.querySelector(&quot;#register_msg&quot;).innerHTML = &quot;注册&quot;; &#125; &#125;); &#125; var username = document.querySelector(&quot;#login_username&quot;); username.addEventListener(&quot;input&quot;, check_username); var regusername = document.querySelector(&quot;#register_username&quot;); regusername.addEventListener(&quot;input&quot;, check_username); function login_server()&#123; var username = document.querySelector(&quot;#login_username&quot;).value; var password = document.querySelector(&quot;#login_password&quot;).value; if(!username.trim().length || !password.trim().length)&#123; alert(&quot;用户名或密码不能为空！&quot;); return; &#125; var formData = new FormData(); formData.append(&#x27;username&#x27;, username); formData.append(&#x27;password&#x27;, password); fetch(&#x27;/login&#x27;,&#123; method: &#x27;POST&#x27;, body: formData &#125;) .then(response =&gt; response.json()) .then(data =&gt; &#123; if(data.code == 1)&#123; alert(&quot;登录成功！&quot;); window.location.href=&quot;/goods&quot;; // 跳转 &#125;else &#123; alert(data.msg); window.location.href=&quot;/login&quot;; &#125; &#125;); &#125; function register_server()&#123; var username = document.querySelector(&quot;#register_username&quot;).value; var password = document.querySelector(&quot;#register_password&quot;).value; var password2 = document.querySelector(&quot;#register_password2&quot;).value; if(!username.trim().length || !password.trim().length || !password2.trim().length)&#123; alert(&quot;用户名或密码不能为空！&quot;); return; &#125; if(password != password2)&#123; alert(&quot;两次密码不一样&quot;); return; &#125; var formData = new FormData(); formData.append(&#x27;username&#x27;, username); formData.append(&#x27;password&#x27;, password); fetch(&#x27;/register&#x27;,&#123; method: &#x27;POST&#x27;, body: formData &#125;) .then(response =&gt; response.json()) .then(data =&gt; &#123; if(data.code == 1)&#123; alert(&quot;注册成功！请登录&quot;); window.location.href=&quot;/login&quot;; &#125;else &#123; alert(data.msg); window.location.href=&quot;/login&quot;; &#125; &#125;); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; app.pyimport hashlibimport osfrom flask import Flask, request, render_template,session,redirectimport log_regimport jsonimport pymysqlimport timeimport randomapp = Flask(__name__, static_folder=&#x27;assets&#x27;) # 初始化静态问价夹app.secret_key = &quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;@app.route(&quot;/hello&quot;)def hello(): return &quot;Hello&quot;@app.route(&quot;/test/&lt;int:id&gt;&quot;)def test(id): return f&quot;&lt;h1&gt;Hello &#123;str(id)&#125;&lt;/h1&gt;&quot;@app.route(&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;)def gender(gender): if gender == &quot;boy&quot;: return &quot;你好帅哥&quot; elif gender == &quot;girl&quot;: return &quot;你好美女&quot;def run_sql(): # 连接数据库 cursor = pymysql.connect( host=&#x27;localhost&#x27;, # 主机名 user=&#x27;root&#x27;, # 用户名 passwd=&#x27;usbw&#x27;, # 密码 database=&#x27;student&#x27;, # 自己创建的数据库 charset=&#x27;utf8mb4&#x27;, autocommit=True # 更改不会自动提交 ).cursor() # 获得游标 def inner(sql): # 闭包 cursor.execute(sql) return cursor return innerdb_query = run_sql() # 连接一次数据库 之后穿sql就行了def pay_url(name, price): pay_info = &#123; &quot;pid&quot;: 1048, &quot;type&quot;: &quot;wxpay&quot;, # 时间+随机数 防止同时支付 &quot;out_trade_no&quot;: time.strftime(&quot;%Y%m%d%H%M%S&quot;) + str(random.randint(1000,9999)), &quot;notify_url&quot;: &quot;http://127.0.0.1&quot;, &quot;return_url&quot;: &quot;http://127.0.0.1:5000/checkpay&quot;, &quot;name&quot;: name, &quot;money&quot;: price, &quot;sign_type&quot;: &quot;MD5&quot; &#125; pay_info = &#123;k: v for k, v in pay_info.items() if v is not None and k != &#x27;sign&#x27; and k != &#x27;sign_type&#x27;&#125; sorted_params = sorted(pay_info.items()) pay_str = &quot;&amp;&quot;.join([f&quot;&#123;k&#125;=&#123;v&#125;&quot; for k, v in sorted_params]) hash_str = hashlib.md5((pay_str + &quot;RW288WWwRn2WgN4NEsaNiRWGeNQiwIEa&quot;).encode(&quot;utf-8&quot;)).hexdigest() url = &quot;https://pay.siyundata.com/submit.php?&quot; + pay_str + f&quot;&amp;sign=&#123;hash_str&#125;&quot; return url# 用户名+密码+随机字符 md5def password_md5(username,password): res = hashlib.md5(f&quot;&#123;password&#125;ajlll&#123;password&#125;hhh&quot;.encode(&#x27;utf-8&#x27;)).hexdigest() return res@app.route(&quot;/login&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def login(): if request.method == &quot;POST&quot;: username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username,password) # 让数据库执行sql语句，而不用一次加载到内存中 sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27; and password = &#x27;&#123;password&#125;&#x27;&quot; res = db_query(sql).fetchall() # 从数据库查询结果集中获取所有行 if len(res) &gt; 0: session[&quot;username&quot;] = username return json.dumps(&#123;&quot;code&quot; : 1, &quot;msg&quot;: &quot;登录成功！&quot;&#125;) else: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;) return render_template(&quot;login.html&quot;)@app.route(&quot;/register&quot;, methods=[&quot;POST&quot;])def register(): # 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法 username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username,password) sql = f&quot;insert into user (username, password) values(&#x27;&#123;username&#125;&#x27;, &#x27;&#123;password&#125;&#x27;)&quot; try: # 数据库username唯一键约束 单纯的前端约束不靠谱 db_query(sql) except: return json.dumps(&#123;&quot;codde&quot;: 0, &quot;msg&quot;: &quot;注册失败！&quot;&#125;) return json.dumps(&#123;&quot;codde&quot;: 1, &quot;msg&quot;: &quot;注册成功！&quot;&#125;)@app.route(&quot;/checkusername&quot;, methods=[&quot;POST&quot;])def checkusername(): username = request.form.get(&quot;username&quot;) sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27;&quot; res = db_query(sql).fetchall() # 从数据库查询结果集中获取所有行 if len(res) &gt; 0: return json.dumps(&#123;&quot;code&quot;: 1&#125;) return json.dumps(&#123;&quot;code&quot;: 0&#125;)@app.route(&quot;/playgame&quot;)def playgame(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot; username = session.get(&quot;username&quot;) return f&quot;&#123;username&#125;正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;@app.route(&quot;/logout&quot;)def logout(): session.clear() # 把服务器的清掉 return &quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;@app.route(&quot;/goods&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def goods(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;;&lt;/script&gt;&quot;; else: username = session.get(&quot;username&quot;) sql = f&quot;select * from user where username = &#x27;&#123;username&#125;&#x27;&quot; res = db_query(sql).fetchall() userid = res[0][0] logo = res[0][3] sql = &quot;select * from goods where del=1&quot; goods = db_query(sql).fetchall() keyword = &quot;&quot; # 添加 if request.method == &quot;POST&quot;: name = request.form.get(&quot;name&quot;) price = request.form.get(&quot;price&quot;) sql = f&quot;insert into goods (name, price) values(&#x27;&#123;name&#125;&#x27;, &#x27;&#123;price&#125;&#x27;)&quot; try: db_query(sql).fetchall() # 键唯一 可能出现问题 try一下 except Exception as e: # 若报错 return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;菜品已存在&quot;&#125;) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;添加成功&quot;&#125;) # 删除功能 if request.args.get(&quot;del&quot;,0): id = request.args.get(&quot;del&quot;) sql = f&quot;update goods set del=0 where id=&#123;id&#125;&quot; db_query(sql) return &quot;&lt;script&gt;alert(&#x27;删除成功&#x27;);window.location.href=&#x27;/goods&#x27;&lt;/script&gt;&quot; # 搜索功能 elif request.args.get(&quot;search&quot;,0): keyword = request.args.get(&quot;search&quot;) sql = f&quot;select * from goods where name like &#x27;%&#123;keyword&#125;%&#x27; and del=1&quot; goods = db_query(sql).fetchall() if len(goods) == 0: goods = ((&quot;1&quot;, &quot;目前没有菜&quot;, &quot;0.0&quot;),) return render_template(&quot;goods.html&quot;, userid=userid, goods=goods, keyword=keyword,username=username,logo=logo)# 把 goods 作为一个模板传进来，在前端接收到后端传过来的模板，这样就可以在前端html文件里写一些后端处理的代码@app.route(&quot;/changegoods&quot;,methods=[&quot;POST&quot;])def changegoods(): name = request.form.get(&quot;name&quot;) price = request.form.get(&quot;price&quot;) id = request.form.get(&quot;id&quot;) sql = f&quot;update goods set name=&#x27;&#123;name&#125;&#x27;, price=&#x27;&#123;price&#125;&#x27; where id=&#123;id&#125;&quot; db_query(sql) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;修改成功&quot;&#125;)@app.route(&quot;/pay&quot;)def pay(): id = request.args.get(&quot;id&quot;) sql = f&quot;select * from goods where id=&#123;id&#125; and del=1&quot; goods = db_query(sql).fetchall() if len(goods) == 0: return &quot;&lt;script&gt;alert(&#x27;已售罄&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot; name = goods[0][1] price = goods[0][2] url = pay_url(name,price) return f&quot;&lt;script&gt;alert(&#x27;订单提交成功，请支付。&#x27;);window.location.href=&#x27;&#123;url&#125;&#x27;;&lt;/script&gt;&quot;@app.route(&quot;/checkpay&quot;)def checkpay(): return json.dumps(request.args)@app.route(&quot;/changelogo&quot;,methods=[&quot;POST&quot;])def changelogo(): userid = request.form.get(&quot;userid&quot;) file = request.files[&#x27;file&#x27;] filename = file.filename if not filename.endswith(&quot;.jpg&quot;) and not filename.endswith(&quot;.png&quot;) and not filename.endswith(&quot;.gif&quot;): return &quot;&lt;script&gt;alert(&#x27;只允许jpg|gif|png格式图片上传&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot; imgext = filename.split(&quot;.&quot;)[-1] imgpath = f&quot;assets/upload/&#123;time.strftime(&#x27;%Y%m%d%H%M%S&#x27;) + str(random.randint(1000,9999))&#125;.&#123;imgext&#125;&quot; if file: with open(imgpath, &quot;wb&quot;) as f: f.write(file.read()) sql = f&quot;update user set logo=&#x27;&#123;imgpath&#125;&#x27; where id=&#123;userid&#125;&quot; db_query(sql) return &quot;&lt;script&gt;alert(&#x27;上传成功&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5000) 调用阿里云人脸识别接口即测试facebody.pyfacebody.py 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485# -*- coding: utf-8 -*-# This file is auto-generated, don&#x27;t edit it. Thanks.import base64import osimport sysfrom typing import Listfrom alibabacloud_facebody20191230.client import Client as facebody20191230Clientfrom alibabacloud_tea_openapi import models as open_api_modelsfrom alibabacloud_facebody20191230 import models as facebody_20191230_modelsfrom alibabacloud_tea_util import models as util_modelsfrom alibabacloud_tea_util.client import Client as UtilClientdef img_base64(file_path): with open(file_path, &#x27;rb&#x27;) as f: image_data = f.read() encoded_img = base64.b64encode(image_data).decode(&#x27;utf-8&#x27;) return encoded_imgclass Sample: def __init__(self): pass @staticmethod def create_client() -&gt; facebody20191230Client: &quot;&quot;&quot; 使用AK&amp;SK初始化账号Client @return: Client @throws Exception &quot;&quot;&quot; # 工程代码泄露可能会导致 AccessKey 泄露，并威胁账号下所有资源的安全性。以下代码示例仅供参考。 # 建议使用更安全的 STS 方式，更多鉴权访问方式请参见：https://help.aliyun.com/document_detail/378659.html。 config = open_api_models.Config( # 必填，请确保代码运行环境设置了环境变量 ALIBABA_CLOUD_ACCESS_KEY_ID。, access_key_id=os.environ[&#x27;ALIBABA_CLOUD_ACCESS_KEY_ID&#x27;], # 必填，请确保代码运行环境设置了环境变量 ALIBABA_CLOUD_ACCESS_KEY_SECRET。, access_key_secret=os.environ[&#x27;ALIBABA_CLOUD_ACCESS_KEY_SECRET&#x27;] ) # Endpoint 请参考 https://api.aliyun.com/product/facebody config.endpoint = f&#x27;facebody.cn-shanghai.aliyuncs.com&#x27; return facebody20191230Client(config) @staticmethod def main(image_urla, image_urlb): client = Sample.create_client() compare_face_request = facebody_20191230_models.CompareFaceRequest( image_urla, image_urlb ) runtime = util_models.RuntimeOptions() try: # 复制代码运行请自行打印 API 的返回值 result = client.compare_face_with_options(compare_face_request, runtime) return result.body.data.confidence except Exception as error: # 此处仅做打印展示，请谨慎对待异常处理，在工程项目中切勿直接忽略异常。 # 错误 message print(error.message) # 诊断地址 print(error.data.get(&quot;Recommend&quot;)) UtilClient.assert_as_string(error.message) @staticmethod async def main_async(image_urla, image_urlb): client = Sample.create_client() compare_face_request = facebody_20191230_models.CompareFaceRequest( image_urla, image_urlb ) runtime = util_models.RuntimeOptions() try: # 复制代码运行请自行打印 API 的返回值 await client.compare_face_with_options_async(compare_face_request, runtime) except Exception as error: # 此处仅做打印展示，请谨慎对待异常处理，在工程项目中切勿直接忽略异常。 # 错误 message print(error.message) # 诊断地址 print(error.data.get(&quot;Recommend&quot;)) UtilClient.assert_as_string(error.message)if __name__ == &#x27;__main__&#x27;: print(Sample.main(img_base64(&quot;img/test1.jpg&quot;),img_base64(&quot;img/test2.jpg&quot;))) 人脸识别ayy.pyimport base64import hashlibfrom flask import Flask, request, render_template, sessionimport log_regimport jsonimport pymysqlimport timeimport randomfrom facebody import Sample, img_base64app = Flask(__name__, static_folder=&quot;assets&quot;)app.secret_key = &quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;def run_sql(): cursor = pymysql.connect( host=&#x27;localhost&#x27;, user=&#x27;root&#x27;, password=&#x27;usbw&#x27;, database=&#x27;student&#x27;, charset=&#x27;utf8mb4&#x27;, autocommit=True ).cursor() def inner(sql): cursor.execute(sql) return cursor return innerdb_query = run_sql()def pay_url(name, price): pay_info = &#123; &quot;pid&quot;: 1048, &quot;type&quot;: &quot;wxpay&quot;, &quot;out_trade_no&quot;: time.strftime(&quot;%Y%m%d%H%M%S&quot;) + str(random.randint(1000,9999)), &quot;notify_url&quot;: &quot;http://127.0.0.1&quot;, &quot;return_url&quot;: &quot;http://127.0.0.1:5000/checkpay&quot;, &quot;name&quot;: name, &quot;money&quot;: price, &quot;sign_type&quot;: &quot;MD5&quot; &#125; pay_info = &#123;k: v for k, v in pay_info.items() if v is not None and k != &#x27;sign&#x27; and k != &#x27;sign_type&#x27;&#125; sorted_params = sorted(pay_info.items()) pay_str = &quot;&amp;&quot;.join([f&quot;&#123;k&#125;=&#123;v&#125;&quot; for k, v in sorted_params]) hash_str = hashlib.md5((pay_str + &quot;RW288WWwRn2WgN4NEsaNiRWGeNQiwIEa&quot;).encode(&quot;utf-8&quot;)).hexdigest() url = &quot;https://pay.siyundata.com/submit.php?&quot; + pay_str + f&quot;&amp;sign=&#123;hash_str&#125;&quot; return urldef password_md5(username, password): result = hashlib.md5(f&quot;&#123;username&#125;xlsyyds&#123;password&#125;hahaha&quot;.encode(&quot;utf-8&quot;)).hexdigest() return result@app.route(&quot;/hello&quot;)def hello(): return &quot;Hello&quot;@app.route(&quot;/test/&lt;int:id&gt;&quot;)def test(id): return f&quot;&lt;h1&gt;Hello &#123;str(id)&#125;&lt;/h1&gt;&quot;@app.route(&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;)def gender(gender): if gender == &quot;boy&quot;: return &quot;你好帅哥&quot; elif gender == &quot;girl&quot;: return &quot;你好美女&quot;@app.route(&quot;/login&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])def login(): if request.method == &quot;POST&quot;: username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username, password) sql = f&quot;select * from user where username=&#x27;&#123;username&#125;&#x27; and password=&#x27;&#123;password&#125;&#x27;&quot; result = db_query(sql).fetchall() if len(result) &gt; 0: session[&quot;username&quot;] = username image_data_a = img_base64(result[0][4]) image_data_b = request.form.get(&quot;image&quot;) if Sample.main(image_data_a, image_data_b) &gt; 61: return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;登录成功！&quot;&#125;) else: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;人脸比对未通过！&quot;&#125;) else: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;用户名或密码错误！&quot;&#125;) return render_template(&quot;login.html&quot;)@app.route(&quot;/register&quot;, methods=[&quot;POST&quot;])def register(): username = request.form.get(&quot;username&quot;) password = request.form.get(&quot;password&quot;) password = password_md5(username, password) imgpath = f&quot;facebody/&#123;time.strftime(&#x27;%Y%m%d%H%M%S&#x27;) + str(random.randint(1000,9999))&#125;.png&quot; with open(imgpath, &quot;wb&quot;) as f: data = base64.b64decode(request.form.get(&quot;image&quot;)) f.write(data) sql = f&quot;insert into user(username,password,face) values(&#x27;&#123;username&#125;&#x27;,&#x27;&#123;password&#125;&#x27;,&#x27;&#123;imgpath&#125;&#x27;)&quot; try: db_query(sql) except: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;注册失败！&quot;&#125;) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;注册成功！&quot;&#125;)@app.route(&quot;/checkusername&quot;, methods=[&quot;POST&quot;])def checkusername(): username = request.form.get(&quot;username&quot;) sql = f&quot;select * from user where username=&#x27;&#123;username&#125;&#x27;&quot; result = db_query(sql).fetchall() if len(result) &gt; 0: return json.dumps(&#123;&quot;code&quot;: 1&#125;) return json.dumps(&#123;&quot;code&quot;: 0&#125;)@app.route(&quot;/playgame&quot;)def playgame(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot; username = session.get(&quot;username&quot;) return f&quot;&#123;username&#125;正在开心玩游戏&lt;br&gt;&lt;a href=&#x27;/logout&#x27;&gt;退出登录&lt;/a&gt;&quot;@app.route(&quot;/logout&quot;)def logout(): session.clear() return &quot;&lt;script&gt;alert(&#x27;退出成功！请重新登陆！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;@app.route(&quot;/goods&quot;, methods=[&quot;POST&quot;, &quot;GET&quot;])def goods(): if session.get(&quot;username&quot;) is None: return &quot;&lt;script&gt;alert(&#x27;请登录！&#x27;);window.location.href=&#x27;/login&#x27;;&lt;/script&gt;&quot;; else: username = session.get(&quot;username&quot;) sql = f&quot;select * from user where username=&#x27;&#123;username&#125;&#x27;&quot; result = db_query(sql).fetchall() userid = result[0][0] logo = result[0][3] sql = &quot;select * from goods where del=1&quot;; goods = db_query(sql).fetchall() keyword = &quot;&quot; if request.method == &quot;POST&quot;: name = request.form.get(&quot;name&quot;) price = request.form.get(&quot;price&quot;) sql = f&quot;insert into goods(name, price) values(&#x27;&#123;name&#125;&#x27;,&#x27;&#123;price&#125;&#x27;)&quot; print(sql) try: db_query(sql).fetchall() except Exception as e: return json.dumps(&#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;菜品已存在！&quot;&#125;) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;添加成功！&quot;&#125;) if request.args.get(&quot;del&quot;, 0): id = request.args.get(&quot;del&quot;) sql = f&quot;update goods set del=0 where id=&#123;id&#125;&quot; db_query(sql) return &quot;&lt;script&gt;alert(&#x27;删除成功！&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;; elif request.args.get(&quot;search&quot;, 0): keyword = request.args.get(&quot;search&quot;) sql = f&quot;select * from goods where name like &#x27;%&#123;keyword&#125;%&#x27; and del=1&quot; goods = db_query(sql).fetchall() if len(goods) == 0: goods = ((&quot;1&quot;,&quot;目前没有菜品&quot;,&quot;0.0&quot;),) return render_template(&quot;goods.html&quot;,userid=userid, goods=goods, keyword=keyword, username=username, logo=logo)@app.route(&quot;/changegoods&quot;, methods=[&quot;POST&quot;])def changegoods(): name = request.form.get(&quot;name&quot;) price = request.form.get(&quot;price&quot;) id = request.form.get(&quot;id&quot;) sql = f&quot;update goods set name=&#x27;&#123;name&#125;&#x27;,price=&#x27;&#123;price&#125;&#x27; where id=&#123;id&#125;&quot; db_query(sql) return json.dumps(&#123;&quot;code&quot;: 1, &quot;msg&quot;: &quot;修改成功！&quot;&#125;)@app.route(&quot;/pay&quot;)def pay(): id = request.args.get(&quot;id&quot;) sql = f&quot;select * from goods where id=&#123;id&#125; and del=1&quot; goods = db_query(sql).fetchall() if len(goods) == 0: return &quot;&lt;script&gt;alert(&#x27;已售罄&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot; name = goods[0][1] price = goods[0][2] url = pay_url(name, price) return f&quot;&lt;script&gt;alert(&#x27;订单提交成功，请支付！&#x27;);window.location.href=&#x27;&#123;url&#125;&#x27;;&lt;/script&gt;&quot;@app.route(&quot;/checkpay&quot;)def checkpay(): return json.dumps(request.args)@app.route(&quot;/changelogo&quot;, methods=[&quot;POST&quot;])def changelogo(): userid = request.form.get(&quot;userid&quot;) file = request.files[&#x27;file&#x27;] filename = file.filename if not filename.endswith(&quot;.jpg&quot;) and not filename.endswith(&quot;.gif&quot;) and not filename.endswith(&quot;.png&quot;): return &quot;&lt;script&gt;alert(&#x27;只允许jpg|gif|png格式图片上传&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot; imgext = filename.split(&quot;.&quot;)[-1] imgpath = f&quot;assets/uploads/&#123;time.strftime(&#x27;%Y%m%d%H%M%S&#x27;) + str(random.randint(1000,9999))&#125;.&#123;imgext&#125;&quot; if file: # 这里可以加文件类型判断逻辑 with open(imgpath, &quot;wb&quot;) as f: f.write(file.read()) sql = f&quot;update user set logo=&#x27;&#123;imgpath&#125;&#x27; where id=&#123;userid&#125;&quot; db_query(sql) return &quot;&lt;script&gt;alert(&#x27;上传成功！&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5001) login.html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;登录&lt;/title&gt; &lt;style&gt; body &#123; background-image: url(https://api.vvhan.com/api/wallpaper/views); background-repeat: no-repeat; background-position: center 0; background-size: cover; &#125; #login, #register &#123; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border: none; padding: 20px; width: 250px; border-radius: 20px; box-shadow: 5px 5px 10px black; text-align: center; color: white; background-color: rgba(0, 0, 0, 0.3); backdrop-filter: blur(2px); &#125; .text &#123; display: block; margin: 14px auto; width: 180px; padding: 10px 15px; text-align: center; border: 2px solid orange; border-radius: 10px; outline: none; transition: .5s; height: 20px; background: none; color: white; &#125; .text:focus &#123; width: 220px; height: 30px; &#125; .text::placeholder &#123; color: white; &#125; .btn &#123; font-size: 16px; padding: 5px 18px; background-color: purple; color: white; border: none; border-radius: 10px; cursor: pointer; box-shadow: 0px 0px 10px white; transition: .5s; margin: 0px 8px; &#125; .btn:hover &#123; box-shadow: 0px 0px 20px white; transform: rotate(360deg); &#125; video &#123; border-radius: 20px; border: 5px solid white; width: 200px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;login&quot;&gt; &lt;h1 id=&quot;login_msg&quot;&gt;登录&lt;/h1&gt; &lt;div&gt; &lt;video id=&quot;logvideo&quot; autoplay&gt;&lt;/video&gt; &lt;/div&gt; &lt;input class=&quot;text&quot; name=&quot;username&quot; id=&quot;login_username&quot; type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt; &lt;input class=&quot;text&quot; name=&quot;password&quot; id=&quot;login_password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; id=&quot;logButton&quot; value=&quot;登录&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;login_register()&quot; value=&quot;注册&quot;&gt; &lt;/div&gt; &lt;div id=&quot;register&quot; style=&quot;display: none;&quot;&gt; &lt;h1 id=&quot;register_msg&quot;&gt;注册&lt;/h1&gt; &lt;div&gt; &lt;video id=&quot;regvideo&quot; autoplay&gt;&lt;/video&gt; &lt;canvas id=&quot;canvas&quot; style=&quot;display: none;&quot;&gt;&lt;/canvas&gt; &lt;/div&gt; &lt;input class=&quot;text&quot; id=&quot;register_username&quot; type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt; &lt;input class=&quot;text&quot; id=&quot;register_password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;input class=&quot;text&quot; id=&quot;register_password2&quot; type=&quot;password&quot; placeholder=&quot;确认密码&quot;&gt; &lt;input class=&quot;btn&quot; id=&quot;regButton&quot; type=&quot;submit&quot; value=&quot;注册&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;submit&quot; onclick=&quot;register_login()&quot; value=&quot;登录&quot;&gt; &lt;/div&gt; &lt;script src=&quot;assets/js/login.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","content":"<h2 id=\"登录注册前端界面\"><a href=\"#登录注册前端界面\" class=\"headerlink\" title=\"登录注册前端界面\"></a>登录注册前端界面</h2><p>login.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://api.vvhan.com/api/wallpaper/views</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-repeat</span>: no-repeat;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-position</span>: center <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-size</span>: cover;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#login</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#register</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">10px</span> black;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            backdrop-<span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">2px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">14px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">180px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid orange;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: .<span class=\"number\">5s</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span><span class=\"selector-pseudo\">:focus</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">220px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span><span class=\"selector-pseudo\">::placeholder</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: purple;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">10px</span> white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: .<span class=\"number\">5s</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">8px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">20px</span> white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_msg&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_username&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;login_server()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;login_register()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;注册&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_msg&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_username&quot;</span><span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_password2&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;确认密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register_server()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;注册&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register_login()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> log = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> reg = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">login_register</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            log.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            reg.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">register_login</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            log.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            reg.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">check_username</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> login_username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> register_username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (login_username.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                username = login_username;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                username = register_username;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;username&#x27;</span>, username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/checkusername&#x27;</span>,&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span> == <span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;登录&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;用户名已存在&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">// 现在 logi n时用户名不存在，也可以登录，待优化：后端不接受数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;用户名不存在&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;注册&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_username&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        username.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;input&quot;</span>, check_username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> regusername = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_username&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        regusername.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;input&quot;</span>, check_username);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">login_server</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> password = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_password&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(!username.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !password.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;用户名或密码不能为空！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;username&#x27;</span>, username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;password&#x27;</span>, password);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/login&#x27;</span>,&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span> == <span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;登录成功！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/playgame&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(data.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/login&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">register_server</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> password = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_password&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> password2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_password2&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(!username.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !password.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !password2.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;用户名或密码不能为空！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(password != password2)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;两次密码不一样&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;username&#x27;</span>, username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;password&#x27;</span>, password);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/register&#x27;</span>,&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span> == <span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;注册成功！请登录&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/login&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(data.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/login&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<h2 id=\"前后端与Flask\"><a href=\"#前后端与Flask\" class=\"headerlink\" title=\"前后端与Flask\"></a>前后端与Flask</h2><ul>\n<li>对接登录、注册功能</li>\n<li>fetch 实现前后端分离</li>\n<li>session、cookie</li>\n</ul>\n<p>app.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template,session,redirect</span><br><span class=\"line\"><span class=\"keyword\">import</span> log_reg</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">&quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    log_reg.get_db()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> log_reg.check_username(username) == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名不存在！&quot;</span>&#125;)</span><br><span class=\"line\">        password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        result = log_reg.login(username, password)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> result[<span class=\"string\">&quot;code&quot;</span>] == <span class=\"number\">1</span>:</span><br><span class=\"line\">            session[<span class=\"string\">&quot;username&quot;</span>] = username</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(result)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;login.html&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/register&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    log_reg.get_db()</span><br><span class=\"line\">    <span class=\"comment\"># 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法</span></span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> log_reg.check_username(username) == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名已存在！&quot;</span>&#125;)</span><br><span class=\"line\">    password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(log_reg.register(username, password))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkusername&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkusername</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    log_reg.get_db()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> log_reg.check_username(username):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/playgame&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">playgame</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;<span class=\"subst\">&#123;username&#125;</span>正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/logout&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear() <span class=\"comment\"># 把服务器的清掉</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"pymysql\"><a href=\"#pymysql\" class=\"headerlink\" title=\"pymysql\"></a>pymysql</h2><h3 id=\"数据库常用指令\"><a href=\"#数据库常用指令\" class=\"headerlink\" title=\"数据库常用指令\"></a>数据库常用指令</h3><p>show databases;<br>– 查看数据库</p>\n<p>create database student;<br>– 创建数据库</p>\n<p>use student<br>– 使用数据库</p>\n<p>drop database student;<br>– 删除数据库</p>\n<p>select database();<br>– 查看当前在什么数据库中</p>\n<p>show tables;<br>– 查看表</p>\n<p>create table user(<br>id int primary key auto_increment,<br>username varchar(200) unique key, # 不允许重复<br>password varchar(200)<br>)default char set utf8;<br>– 创建表</p>\n<p>show create table user\\G<br>– 查看表格的创建代码</p>\n<p>desc user;<br>– 查看表结构</p>\n<p>alter table user add del int default 1;<br>– 添加一列数据</p>\n<p>update user set del&#x3D;0 where id&#x3D;3;<br>– 实际生成中一般标记而非删除</p>\n<p>insert into user(username, password) values<br>(“admin”,”admin”),<br>(“张三”,”123456”);<br>– 插入数据</p>\n<p>select * from user;<br>– 查找数据</p>\n<p>select username,id from user;<br>– 指定列，查看数据</p>\n<p>select * from user where username&#x3D;”admin”;<br>– 带上条件的查询</p>\n<p>select * from user where username&#x3D;”admin” and password&#x3D;”admin”;<br>– 带上多个条件的查询</p>\n<p>update user set password&#x3D;”123123” where username&#x3D;”admin”;<br>– 修改数据，必须要带上一个条件</p>\n<p>delete from user where id&#x3D;2;<br>– 删除数据，带约束条件<br>– 不建议删除</p>\n<p>update user set del&#x3D;0 where id&#x3D;3;<br>– 使用update代替delete做伪删除<br>select * from user where del&#x3D;1;<br>– 查找的时候带上del的状态</p>\n<p>truncate user;<br>– 清空指定数据表</p>\n<p>drop table user;<br>– 删除表</p>\n<h3 id=\"数据库版\"><a href=\"#数据库版\" class=\"headerlink\" title=\"数据库版\"></a>数据库版</h3><p>app.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template,session,redirect</span><br><span class=\"line\"><span class=\"keyword\">import</span> log_reg</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">&quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/hello&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/test/&lt;int:id&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\"><span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;h1&gt;Hello <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(<span class=\"built_in\">id</span>)&#125;</span>&lt;/h1&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gender</span>(<span class=\"params\">gender</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> gender == <span class=\"string\">&quot;boy&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好帅哥&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> gender == <span class=\"string\">&quot;girl&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好美女&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run_sql</span>(): <span class=\"comment\"># 连接数据库</span></span><br><span class=\"line\">    cursor = pymysql.connect(</span><br><span class=\"line\">        host=<span class=\"string\">&#x27;localhost&#x27;</span>,  <span class=\"comment\"># 主机名</span></span><br><span class=\"line\">        user=<span class=\"string\">&#x27;root&#x27;</span>,  <span class=\"comment\"># 用户名</span></span><br><span class=\"line\">        passwd=<span class=\"string\">&#x27;usbw&#x27;</span>,  <span class=\"comment\"># 密码</span></span><br><span class=\"line\">        database=<span class=\"string\">&#x27;student&#x27;</span>,  <span class=\"comment\"># 自己创建的数据库</span></span><br><span class=\"line\">        charset=<span class=\"string\">&#x27;utf8mb4&#x27;</span>,</span><br><span class=\"line\">        autocommit=<span class=\"literal\">True</span>  <span class=\"comment\"># 更改不会自动提交</span></span><br><span class=\"line\">    ).cursor()  <span class=\"comment\"># 获得游标</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">sql</span>):  <span class=\"comment\"># 闭包</span></span><br><span class=\"line\">        cursor.execute(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cursor</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  inner</span><br><span class=\"line\"></span><br><span class=\"line\">db_query = run_sql() <span class=\"comment\"># 连接一次数据库 之后穿sql就行了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户名+密码+随机字符 md5</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">password_md5</span>(<span class=\"params\">username,password</span>):</span><br><span class=\"line\">    res = hashlib.md5(<span class=\"string\">f&quot;<span class=\"subst\">&#123;password&#125;</span>ajlll<span class=\"subst\">&#123;password&#125;</span>hhh&quot;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        password = password_md5(username,password)</span><br><span class=\"line\">        <span class=\"comment\"># 让数据库执行sql语句，而不用一次加载到内存中</span></span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27; and password = &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">        res = db_query(sql).fetchall() <span class=\"comment\"># 从数据库查询结果集中获取所有行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(res) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            session[<span class=\"string\">&quot;username&quot;</span>] = username</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span> : <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;登录成功！&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名或密码错误&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;login.html&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/register&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法</span></span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">    password = password_md5(username,password)</span><br><span class=\"line\">    sql =  <span class=\"string\">f&quot;insert into user (username, password) values(&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;, &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>: <span class=\"comment\"># 数据库username唯一键约束 单纯的前端约束不靠谱</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;codde&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册失败！&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;codde&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册成功！&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkusername&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkusername</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">    res = db_query(sql).fetchall() <span class=\"comment\"># 从数据库查询结果集中获取所有行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(res) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/playgame&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">playgame</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;<span class=\"subst\">&#123;username&#125;</span>正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/logout&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear() <span class=\"comment\"># 把服务器的清掉</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"菜单-支付功能\"><a href=\"#菜单-支付功能\" class=\"headerlink\" title=\"菜单+支付功能\"></a>菜单+支付功能</h2><p>开发思路：<br>先写前端，再逐渐增添功能：html ——&gt; css ——&gt; js<br>goods.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>今日菜单<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.table_text</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.change</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.change_logo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100vh</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.8</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding-top</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            backdrop-<span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">2px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.change_input</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.change_input</span><span class=\"selector-pseudo\">::placeholder</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.change_btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.userinfo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;userinfo&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;50px&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&#123;&#123; logo &#125;&#125;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>欢迎用户&#123;&#123; username &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;change_logo(&#x27;&#123;&#123; userid &#125;&#125;&#x27;)&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;cursor: pointer&quot;</span>&gt;</span>修改头像<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;window.location.href=&#x27;/logout&#x27;&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;cursor: pointer&quot;</span>&gt;</span>退出登录<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;change&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>修改内容<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;change_id&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;change_name&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;change_input&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;输入菜名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;change_price&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;change_input&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;输入价格&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;change_btn&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;off_change()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交修改&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;change_logo&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>上传头像<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;/changelogo&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userid&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userid&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;file&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;change_btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交修改&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>今日特价<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;1px&quot;</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0px&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 630px;&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">&quot;#87cefa&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table_text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&#123;&#123; keyword &#125;&#125;&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;search&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;输入菜名&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;搜索&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span>序号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;120px&quot;</span>&gt;</span>菜名<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span>价格<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;120px&quot;</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            &#123;% for items in goods %&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; items[0] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; items[1] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; items[2] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;?del=&#123;&#123; items[0] &#125;&#125;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;on_change(&#x27;&#123;&#123; items[0] &#125;&#125;&#x27;,&#x27;&#123;&#123; items[1] &#125;&#125;&#x27;,&#x27;&#123;&#123; items[2] &#125;&#125;&#x27;)&quot;</span>&gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/pay?id=&#123;&#123; items[0] &#125;&#125;&quot;</span>&gt;</span>购买<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            &#123;% endfor %&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;addrow&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table_text&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;自动生成&quot;</span> <span class=\"attr\">disabled</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table_text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;addname&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;输入菜名&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table_text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;addprice&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;输入价格&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;additems()&quot;</span>&gt;</span>添加<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;addbutton&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;addgoods()&quot;</span>&gt;</span>[+]新增菜品<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> addrow = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#addrow&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> addbutton = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#addbutton&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">addgoods</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            addrow.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            addbutton.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">additems</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> addname = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#addname&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> addprice = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#addprice&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (!addname.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !addprice.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;菜名和价格不能为空！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;name&#x27;</span>, addname);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;price&#x27;</span>, addprice);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&quot;/goods&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>()).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (data.<span class=\"property\">code</span> == <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// alert(&quot;添加成功！&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&#x27;/goods&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(data.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&#x27;/goods&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">on_change</span>(<span class=\"params\">id, name, price</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> change = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.change&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> change_name = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#change_name&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> change_price = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#change_price&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> change_id = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#change_id&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            change.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            change_name.<span class=\"property\">value</span> = name;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            change_price.<span class=\"property\">value</span> = price;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            change_id.<span class=\"property\">value</span> = id;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">off_change</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> change = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.change&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            change.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> name = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#change_name&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> price = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#change_price&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> id = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#change_id&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (!price.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !id.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;菜名和价格不能为空！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;id&#x27;</span>, id);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;name&#x27;</span>, name);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;price&#x27;</span>, price);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&quot;/changegoods&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>()).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (data.<span class=\"property\">code</span> == <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// alert(&quot;添加成功！&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&#x27;/goods&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(data.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&#x27;/goods&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">change_logo</span>(<span class=\"params\">id</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> change_logo = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.change_logo&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            change_logo.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> userid = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#userid&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            userid.<span class=\"property\">value</span> = id;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>app.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template,session,redirect</span><br><span class=\"line\"><span class=\"keyword\">import</span> log_reg</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">&quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/hello&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/test/&lt;int:id&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\"><span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;h1&gt;Hello <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(<span class=\"built_in\">id</span>)&#125;</span>&lt;/h1&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gender</span>(<span class=\"params\">gender</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> gender == <span class=\"string\">&quot;boy&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好帅哥&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> gender == <span class=\"string\">&quot;girl&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好美女&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run_sql</span>(): <span class=\"comment\"># 连接数据库</span></span><br><span class=\"line\">    cursor = pymysql.connect(</span><br><span class=\"line\">        host=<span class=\"string\">&#x27;localhost&#x27;</span>,  <span class=\"comment\"># 主机名</span></span><br><span class=\"line\">        user=<span class=\"string\">&#x27;root&#x27;</span>,  <span class=\"comment\"># 用户名</span></span><br><span class=\"line\">        passwd=<span class=\"string\">&#x27;usbw&#x27;</span>,  <span class=\"comment\"># 密码</span></span><br><span class=\"line\">        database=<span class=\"string\">&#x27;student&#x27;</span>,  <span class=\"comment\"># 自己创建的数据库</span></span><br><span class=\"line\">        charset=<span class=\"string\">&#x27;utf8mb4&#x27;</span>,</span><br><span class=\"line\">        autocommit=<span class=\"literal\">True</span>  <span class=\"comment\"># 更改不会自动提交</span></span><br><span class=\"line\">    ).cursor()  <span class=\"comment\"># 获得游标</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">sql</span>):  <span class=\"comment\"># 闭包</span></span><br><span class=\"line\">        cursor.execute(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cursor</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  inner</span><br><span class=\"line\"></span><br><span class=\"line\">db_query = run_sql() <span class=\"comment\"># 连接一次数据库 之后穿sql就行了</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pay_url</span>(<span class=\"params\">name, price</span>):</span><br><span class=\"line\">    pay_info = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;pid&quot;</span>: <span class=\"number\">1048</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;wxpay&quot;</span>,</span><br><span class=\"line\">        <span class=\"comment\"># 时间+随机数 防止同时支付</span></span><br><span class=\"line\">        <span class=\"string\">&quot;out_trade_no&quot;</span>: time.strftime(<span class=\"string\">&quot;%Y%m%d%H%M%S&quot;</span>) + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>)),</span><br><span class=\"line\">        <span class=\"string\">&quot;notify_url&quot;</span>: <span class=\"string\">&quot;http://127.0.0.1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;return_url&quot;</span>: <span class=\"string\">&quot;http://127.0.0.1:5000/checkpay&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: name,</span><br><span class=\"line\">        <span class=\"string\">&quot;money&quot;</span>: price,</span><br><span class=\"line\">        <span class=\"string\">&quot;sign_type&quot;</span>: <span class=\"string\">&quot;MD5&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pay_info = &#123;k: v <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> pay_info.items() <span class=\"keyword\">if</span> v <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">and</span> k != <span class=\"string\">&#x27;sign&#x27;</span> <span class=\"keyword\">and</span> k != <span class=\"string\">&#x27;sign_type&#x27;</span>&#125;</span><br><span class=\"line\">    sorted_params = <span class=\"built_in\">sorted</span>(pay_info.items())</span><br><span class=\"line\">    pay_str = <span class=\"string\">&quot;&amp;&quot;</span>.join([<span class=\"string\">f&quot;<span class=\"subst\">&#123;k&#125;</span>=<span class=\"subst\">&#123;v&#125;</span>&quot;</span> <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> sorted_params])</span><br><span class=\"line\">    hash_str = hashlib.md5((pay_str + <span class=\"string\">&quot;RW288WWwRn2WgN4NEsaNiRWGeNQiwIEa&quot;</span>).encode(<span class=\"string\">&quot;utf-8&quot;</span>)).hexdigest()</span><br><span class=\"line\">    url = <span class=\"string\">&quot;https://pay.siyundata.com/submit.php?&quot;</span> + pay_str + <span class=\"string\">f&quot;&amp;sign=<span class=\"subst\">&#123;hash_str&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户名+密码+随机字符 md5</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">password_md5</span>(<span class=\"params\">username,password</span>):</span><br><span class=\"line\">    res = hashlib.md5(<span class=\"string\">f&quot;<span class=\"subst\">&#123;password&#125;</span>ajlll<span class=\"subst\">&#123;password&#125;</span>hhh&quot;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        password = password_md5(username,password)</span><br><span class=\"line\">        <span class=\"comment\"># 让数据库执行sql语句，而不用一次加载到内存中</span></span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27; and password = &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">        res = db_query(sql).fetchall() <span class=\"comment\"># 从数据库查询结果集中获取所有行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(res) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            session[<span class=\"string\">&quot;username&quot;</span>] = username</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span> : <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;登录成功！&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名或密码错误&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;login.html&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/register&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法</span></span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">    password = password_md5(username,password)</span><br><span class=\"line\">    sql =  <span class=\"string\">f&quot;insert into user (username, password) values(&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;, &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>: <span class=\"comment\"># 数据库username唯一键约束 单纯的前端约束不靠谱</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;codde&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册失败！&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;codde&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册成功！&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkusername&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkusername</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">    res = db_query(sql).fetchall() <span class=\"comment\"># 从数据库查询结果集中获取所有行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(res) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/playgame&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">playgame</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;<span class=\"subst\">&#123;username&#125;</span>正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/logout&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear() <span class=\"comment\"># 把服务器的清掉</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/goods&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">goods</span>():</span><br><span class=\"line\">    sql = <span class=\"string\">&quot;select * from goods where del=1&quot;</span></span><br><span class=\"line\">    goods = db_query(sql).fetchall()</span><br><span class=\"line\">    keyword = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 添加</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        name = request.form.get(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\">        price = request.form.get(<span class=\"string\">&quot;price&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;insert into goods (name, price) values(&#x27;<span class=\"subst\">&#123;name&#125;</span>&#x27;, &#x27;<span class=\"subst\">&#123;price&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            db_query(sql).fetchall() <span class=\"comment\"># 键唯一 可能出现问题 try一下</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e: <span class=\"comment\"># 若报错</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;菜品已存在&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;添加成功&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 删除功能</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.args.get(<span class=\"string\">&quot;del&quot;</span>,<span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">id</span> = request.args.get(<span class=\"string\">&quot;del&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;update goods set del=0 where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>&quot;</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;删除成功&#x27;);window.location.href=&#x27;/goods&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 搜索功能</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> request.args.get(<span class=\"string\">&quot;search&quot;</span>,<span class=\"number\">0</span>):</span><br><span class=\"line\">        keyword = request.args.get(<span class=\"string\">&quot;search&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from goods where name like &#x27;%<span class=\"subst\">&#123;keyword&#125;</span>%&#x27; and del=1&quot;</span></span><br><span class=\"line\">        goods = db_query(sql).fetchall()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(goods) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        goods = ((<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;目前没有菜&quot;</span>, <span class=\"string\">&quot;0.0&quot;</span>),)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;goods.html&quot;</span>, goods=goods, keyword=keyword)</span><br><span class=\"line\"><span class=\"comment\"># 把 goods 作为一个模板传进来，在前端接收到后端传过来的模板，这样就可以在前端html文件里写一些后端处理的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/changegoods&quot;</span>,methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">changegoods</span>():</span><br><span class=\"line\">    name = request.form.get(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\">    price = request.form.get(<span class=\"string\">&quot;price&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = request.form.get(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;update goods set name=&#x27;<span class=\"subst\">&#123;name&#125;</span>&#x27;, price=&#x27;<span class=\"subst\">&#123;price&#125;</span>&#x27; where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>&quot;</span></span><br><span class=\"line\">    db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;修改成功&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/pay&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pay</span>():</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = request.args.get(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from goods where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span> and del=1&quot;</span></span><br><span class=\"line\">    goods = db_query(sql).fetchall()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(goods) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;已售罄&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    name = goods[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">    price = goods[<span class=\"number\">0</span>][<span class=\"number\">2</span>]</span><br><span class=\"line\">    url = pay_url(name,price)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;script&gt;alert(&#x27;订单提交成功，请支付。&#x27;);window.location.href=&#x27;<span class=\"subst\">&#123;url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkpay&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkpay</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(request.args)</span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"头像上传、修改功能\"><a href=\"#头像上传、修改功能\" class=\"headerlink\" title=\"头像上传、修改功能\"></a>头像上传、修改功能</h2><p>goods.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://api.vvhan.com/api/wallpaper/views</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-repeat</span>: no-repeat;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-position</span>: center <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-size</span>: cover;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#login</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#register</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">10px</span> black;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            backdrop-<span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">2px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">14px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">180px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid orange;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: .<span class=\"number\">5s</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span><span class=\"selector-pseudo\">:focus</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">220px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span><span class=\"selector-pseudo\">::placeholder</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: purple;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">10px</span> white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: .<span class=\"number\">5s</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">8px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">20px</span> white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_msg&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_username&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;login_server()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;login_register()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;注册&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_msg&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_username&quot;</span><span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_password2&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;确认密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register_server()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;注册&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register_login()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> log = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> reg = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">login_register</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            log.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            reg.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">register_login</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            log.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            reg.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">check_username</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> login_username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> register_username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (login_username.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                username = login_username;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                username = register_username;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;username&#x27;</span>, username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/checkusername&#x27;</span>,&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span> == <span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;登录&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;用户名已存在&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">// 现在 logi n时用户名不存在，也可以登录，待优化：后端不接受数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;用户名不存在&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_msg&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;注册&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_username&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        username.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;input&quot;</span>, check_username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> regusername = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_username&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        regusername.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;input&quot;</span>, check_username);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">login_server</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> password = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#login_password&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(!username.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !password.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;用户名或密码不能为空！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;username&#x27;</span>, username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;password&#x27;</span>, password);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/login&#x27;</span>,&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span> == <span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;登录成功！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/goods&quot;</span>; <span class=\"comment\">// 跳转</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(data.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/login&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">register_server</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> username = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_username&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> password = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_password&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> password2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#register_password2&quot;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(!username.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !password.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span> || !password2.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;用户名或密码不能为空！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(password != password2)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;两次密码不一样&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;username&#x27;</span>, username);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            formData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;password&#x27;</span>, password);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/register&#x27;</span>,&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">body</span>: formData</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span> == <span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;注册成功！请登录&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/login&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(data.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;/login&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>app.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template,session,redirect</span><br><span class=\"line\"><span class=\"keyword\">import</span> log_reg</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__, static_folder=<span class=\"string\">&#x27;assets&#x27;</span>) <span class=\"comment\"># 初始化静态问价夹</span></span><br><span class=\"line\">app.secret_key = <span class=\"string\">&quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/hello&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/test/&lt;int:id&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\"><span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;h1&gt;Hello <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(<span class=\"built_in\">id</span>)&#125;</span>&lt;/h1&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gender</span>(<span class=\"params\">gender</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> gender == <span class=\"string\">&quot;boy&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好帅哥&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> gender == <span class=\"string\">&quot;girl&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好美女&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run_sql</span>(): <span class=\"comment\"># 连接数据库</span></span><br><span class=\"line\">    cursor = pymysql.connect(</span><br><span class=\"line\">        host=<span class=\"string\">&#x27;localhost&#x27;</span>,  <span class=\"comment\"># 主机名</span></span><br><span class=\"line\">        user=<span class=\"string\">&#x27;root&#x27;</span>,  <span class=\"comment\"># 用户名</span></span><br><span class=\"line\">        passwd=<span class=\"string\">&#x27;usbw&#x27;</span>,  <span class=\"comment\"># 密码</span></span><br><span class=\"line\">        database=<span class=\"string\">&#x27;student&#x27;</span>,  <span class=\"comment\"># 自己创建的数据库</span></span><br><span class=\"line\">        charset=<span class=\"string\">&#x27;utf8mb4&#x27;</span>,</span><br><span class=\"line\">        autocommit=<span class=\"literal\">True</span>  <span class=\"comment\"># 更改不会自动提交</span></span><br><span class=\"line\">    ).cursor()  <span class=\"comment\"># 获得游标</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">sql</span>):  <span class=\"comment\"># 闭包</span></span><br><span class=\"line\">        cursor.execute(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cursor</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  inner</span><br><span class=\"line\"></span><br><span class=\"line\">db_query = run_sql() <span class=\"comment\"># 连接一次数据库 之后穿sql就行了</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pay_url</span>(<span class=\"params\">name, price</span>):</span><br><span class=\"line\">    pay_info = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;pid&quot;</span>: <span class=\"number\">1048</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;wxpay&quot;</span>,</span><br><span class=\"line\">        <span class=\"comment\"># 时间+随机数 防止同时支付</span></span><br><span class=\"line\">        <span class=\"string\">&quot;out_trade_no&quot;</span>: time.strftime(<span class=\"string\">&quot;%Y%m%d%H%M%S&quot;</span>) + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>)),</span><br><span class=\"line\">        <span class=\"string\">&quot;notify_url&quot;</span>: <span class=\"string\">&quot;http://127.0.0.1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;return_url&quot;</span>: <span class=\"string\">&quot;http://127.0.0.1:5000/checkpay&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: name,</span><br><span class=\"line\">        <span class=\"string\">&quot;money&quot;</span>: price,</span><br><span class=\"line\">        <span class=\"string\">&quot;sign_type&quot;</span>: <span class=\"string\">&quot;MD5&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pay_info = &#123;k: v <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> pay_info.items() <span class=\"keyword\">if</span> v <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">and</span> k != <span class=\"string\">&#x27;sign&#x27;</span> <span class=\"keyword\">and</span> k != <span class=\"string\">&#x27;sign_type&#x27;</span>&#125;</span><br><span class=\"line\">    sorted_params = <span class=\"built_in\">sorted</span>(pay_info.items())</span><br><span class=\"line\">    pay_str = <span class=\"string\">&quot;&amp;&quot;</span>.join([<span class=\"string\">f&quot;<span class=\"subst\">&#123;k&#125;</span>=<span class=\"subst\">&#123;v&#125;</span>&quot;</span> <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> sorted_params])</span><br><span class=\"line\">    hash_str = hashlib.md5((pay_str + <span class=\"string\">&quot;RW288WWwRn2WgN4NEsaNiRWGeNQiwIEa&quot;</span>).encode(<span class=\"string\">&quot;utf-8&quot;</span>)).hexdigest()</span><br><span class=\"line\">    url = <span class=\"string\">&quot;https://pay.siyundata.com/submit.php?&quot;</span> + pay_str + <span class=\"string\">f&quot;&amp;sign=<span class=\"subst\">&#123;hash_str&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户名+密码+随机字符 md5</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">password_md5</span>(<span class=\"params\">username,password</span>):</span><br><span class=\"line\">    res = hashlib.md5(<span class=\"string\">f&quot;<span class=\"subst\">&#123;password&#125;</span>ajlll<span class=\"subst\">&#123;password&#125;</span>hhh&quot;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        password = password_md5(username,password)</span><br><span class=\"line\">        <span class=\"comment\"># 让数据库执行sql语句，而不用一次加载到内存中</span></span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27; and password = &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">        res = db_query(sql).fetchall() <span class=\"comment\"># 从数据库查询结果集中获取所有行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(res) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            session[<span class=\"string\">&quot;username&quot;</span>] = username</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span> : <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;登录成功！&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名或密码错误&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;login.html&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/register&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 不用写 if request.method == &quot;POST&quot;: 因为只有&quot;POST&quot;方法</span></span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">    password = password_md5(username,password)</span><br><span class=\"line\">    sql =  <span class=\"string\">f&quot;insert into user (username, password) values(&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;, &#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>: <span class=\"comment\"># 数据库username唯一键约束 单纯的前端约束不靠谱</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;codde&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册失败！&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;codde&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册成功！&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkusername&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkusername</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">    res = db_query(sql).fetchall() <span class=\"comment\"># 从数据库查询结果集中获取所有行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(res) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/playgame&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">playgame</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;<span class=\"subst\">&#123;username&#125;</span>正在玩儿游戏&lt;br&gt;&lt;a href=&#x27;logout&#x27;&gt;退出登录&lt;/a&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/logout&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear() <span class=\"comment\"># 把服务器的清掉</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;退出成功！请重新登录！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/goods&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">goods</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from user where username = &#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">        res = db_query(sql).fetchall()</span><br><span class=\"line\">        userid = res[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">        logo = res[<span class=\"number\">0</span>][<span class=\"number\">3</span>]</span><br><span class=\"line\">    sql = <span class=\"string\">&quot;select * from goods where del=1&quot;</span></span><br><span class=\"line\">    goods = db_query(sql).fetchall()</span><br><span class=\"line\">    keyword = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 添加</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        name = request.form.get(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\">        price = request.form.get(<span class=\"string\">&quot;price&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;insert into goods (name, price) values(&#x27;<span class=\"subst\">&#123;name&#125;</span>&#x27;, &#x27;<span class=\"subst\">&#123;price&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            db_query(sql).fetchall() <span class=\"comment\"># 键唯一 可能出现问题 try一下</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e: <span class=\"comment\"># 若报错</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;菜品已存在&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;添加成功&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 删除功能</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.args.get(<span class=\"string\">&quot;del&quot;</span>,<span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">id</span> = request.args.get(<span class=\"string\">&quot;del&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;update goods set del=0 where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>&quot;</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;删除成功&#x27;);window.location.href=&#x27;/goods&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 搜索功能</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> request.args.get(<span class=\"string\">&quot;search&quot;</span>,<span class=\"number\">0</span>):</span><br><span class=\"line\">        keyword = request.args.get(<span class=\"string\">&quot;search&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from goods where name like &#x27;%<span class=\"subst\">&#123;keyword&#125;</span>%&#x27; and del=1&quot;</span></span><br><span class=\"line\">        goods = db_query(sql).fetchall()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(goods) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        goods = ((<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;目前没有菜&quot;</span>, <span class=\"string\">&quot;0.0&quot;</span>),)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;goods.html&quot;</span>, userid=userid, goods=goods, keyword=keyword,username=username,logo=logo)</span><br><span class=\"line\"><span class=\"comment\"># 把 goods 作为一个模板传进来，在前端接收到后端传过来的模板，这样就可以在前端html文件里写一些后端处理的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/changegoods&quot;</span>,methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">changegoods</span>():</span><br><span class=\"line\">    name = request.form.get(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\">    price = request.form.get(<span class=\"string\">&quot;price&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = request.form.get(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;update goods set name=&#x27;<span class=\"subst\">&#123;name&#125;</span>&#x27;, price=&#x27;<span class=\"subst\">&#123;price&#125;</span>&#x27; where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>&quot;</span></span><br><span class=\"line\">    db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;修改成功&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/pay&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pay</span>():</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = request.args.get(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from goods where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span> and del=1&quot;</span></span><br><span class=\"line\">    goods = db_query(sql).fetchall()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(goods) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;已售罄&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    name = goods[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">    price = goods[<span class=\"number\">0</span>][<span class=\"number\">2</span>]</span><br><span class=\"line\">    url = pay_url(name,price)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;script&gt;alert(&#x27;订单提交成功，请支付。&#x27;);window.location.href=&#x27;<span class=\"subst\">&#123;url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkpay&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkpay</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(request.args)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/changelogo&quot;</span>,methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">changelogo</span>():</span><br><span class=\"line\">    userid = request.form.get(<span class=\"string\">&quot;userid&quot;</span>)</span><br><span class=\"line\">    file = request.files[<span class=\"string\">&#x27;file&#x27;</span>]</span><br><span class=\"line\">    filename = file.filename</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> filename.endswith(<span class=\"string\">&quot;.jpg&quot;</span>) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> filename.endswith(<span class=\"string\">&quot;.png&quot;</span>) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> filename.endswith(<span class=\"string\">&quot;.gif&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;只允许jpg|gif|png格式图片上传&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    imgext = filename.split(<span class=\"string\">&quot;.&quot;</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    imgpath = <span class=\"string\">f&quot;assets/upload/<span class=\"subst\">&#123;time.strftime(<span class=\"string\">&#x27;%Y%m%d%H%M%S&#x27;</span>) + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>))&#125;</span>.<span class=\"subst\">&#123;imgext&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> file:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(imgpath, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(file.read())</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;update user set logo=&#x27;<span class=\"subst\">&#123;imgpath&#125;</span>&#x27; where id=<span class=\"subst\">&#123;userid&#125;</span>&quot;</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;上传成功&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"调用阿里云人脸识别接口即测试\"><a href=\"#调用阿里云人脸识别接口即测试\" class=\"headerlink\" title=\"调用阿里云人脸识别接口即测试\"></a>调用阿里云人脸识别接口即测试</h2><p>facebody.py<br>facebody.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># This file is auto-generated, don&#x27;t edit it. Thanks.</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> typing <span class=\"keyword\">import</span> <span class=\"type\">List</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> alibabacloud_facebody20191230.client <span class=\"keyword\">import</span> Client <span class=\"keyword\">as</span> facebody20191230Client</span><br><span class=\"line\"><span class=\"keyword\">from</span> alibabacloud_tea_openapi <span class=\"keyword\">import</span> models <span class=\"keyword\">as</span> open_api_models</span><br><span class=\"line\"><span class=\"keyword\">from</span> alibabacloud_facebody20191230 <span class=\"keyword\">import</span> models <span class=\"keyword\">as</span> facebody_20191230_models</span><br><span class=\"line\"><span class=\"keyword\">from</span> alibabacloud_tea_util <span class=\"keyword\">import</span> models <span class=\"keyword\">as</span> util_models</span><br><span class=\"line\"><span class=\"keyword\">from</span> alibabacloud_tea_util.client <span class=\"keyword\">import</span> Client <span class=\"keyword\">as</span> UtilClient</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">img_base64</span>(<span class=\"params\">file_path</span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        image_data = f.read()</span><br><span class=\"line\">    encoded_img = base64.b64encode(image_data).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> encoded_img</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Sample</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">create_client</span>() -&gt; facebody20191230Client:</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        使用AK&amp;SK初始化账号Client</span></span><br><span class=\"line\"><span class=\"string\">        @return: Client</span></span><br><span class=\"line\"><span class=\"string\">        @throws Exception</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 工程代码泄露可能会导致 AccessKey 泄露，并威胁账号下所有资源的安全性。以下代码示例仅供参考。</span></span><br><span class=\"line\">        <span class=\"comment\"># 建议使用更安全的 STS 方式，更多鉴权访问方式请参见：https://help.aliyun.com/document_detail/378659.html。</span></span><br><span class=\"line\">        config = open_api_models.Config(</span><br><span class=\"line\">            <span class=\"comment\"># 必填，请确保代码运行环境设置了环境变量 ALIBABA_CLOUD_ACCESS_KEY_ID。,</span></span><br><span class=\"line\">            access_key_id=os.environ[<span class=\"string\">&#x27;ALIBABA_CLOUD_ACCESS_KEY_ID&#x27;</span>],</span><br><span class=\"line\">            <span class=\"comment\"># 必填，请确保代码运行环境设置了环境变量 ALIBABA_CLOUD_ACCESS_KEY_SECRET。,</span></span><br><span class=\"line\">            access_key_secret=os.environ[<span class=\"string\">&#x27;ALIBABA_CLOUD_ACCESS_KEY_SECRET&#x27;</span>]</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"comment\"># Endpoint 请参考 https://api.aliyun.com/product/facebody</span></span><br><span class=\"line\">        config.endpoint = <span class=\"string\">f&#x27;facebody.cn-shanghai.aliyuncs.com&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> facebody20191230Client(config)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">main</span>(<span class=\"params\">image_urla, image_urlb</span>):</span><br><span class=\"line\">        client = Sample.create_client()</span><br><span class=\"line\">        compare_face_request = facebody_20191230_models.CompareFaceRequest(</span><br><span class=\"line\">            image_urla,</span><br><span class=\"line\">            image_urlb</span><br><span class=\"line\">        )</span><br><span class=\"line\">        runtime = util_models.RuntimeOptions()</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 复制代码运行请自行打印 API 的返回值</span></span><br><span class=\"line\">            result = client.compare_face_with_options(compare_face_request, runtime)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result.body.data.confidence</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> error:</span><br><span class=\"line\">            <span class=\"comment\"># 此处仅做打印展示，请谨慎对待异常处理，在工程项目中切勿直接忽略异常。</span></span><br><span class=\"line\">            <span class=\"comment\"># 错误 message</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(error.message)</span><br><span class=\"line\">            <span class=\"comment\"># 诊断地址</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(error.data.get(<span class=\"string\">&quot;Recommend&quot;</span>))</span><br><span class=\"line\">            UtilClient.assert_as_string(error.message)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">main_async</span>(<span class=\"params\">image_urla, image_urlb</span>):</span><br><span class=\"line\">        client = Sample.create_client()</span><br><span class=\"line\">        compare_face_request = facebody_20191230_models.CompareFaceRequest(</span><br><span class=\"line\">            image_urla,</span><br><span class=\"line\">            image_urlb</span><br><span class=\"line\">        )</span><br><span class=\"line\">        runtime = util_models.RuntimeOptions()</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 复制代码运行请自行打印 API 的返回值</span></span><br><span class=\"line\">            <span class=\"keyword\">await</span> client.compare_face_with_options_async(compare_face_request, runtime)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> error:</span><br><span class=\"line\">            <span class=\"comment\"># 此处仅做打印展示，请谨慎对待异常处理，在工程项目中切勿直接忽略异常。</span></span><br><span class=\"line\">            <span class=\"comment\"># 错误 message</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(error.message)</span><br><span class=\"line\">            <span class=\"comment\"># 诊断地址</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(error.data.get(<span class=\"string\">&quot;Recommend&quot;</span>))</span><br><span class=\"line\">            UtilClient.assert_as_string(error.message)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(Sample.main(img_base64(<span class=\"string\">&quot;img/test1.jpg&quot;</span>),img_base64(<span class=\"string\">&quot;img/test2.jpg&quot;</span>)))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"人脸识别\"><a href=\"#人脸识别\" class=\"headerlink\" title=\"人脸识别\"></a>人脸识别</h2><p>ayy.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template, session</span><br><span class=\"line\"><span class=\"keyword\">import</span> log_reg</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> facebody <span class=\"keyword\">import</span> Sample, img_base64</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__, static_folder=<span class=\"string\">&quot;assets&quot;</span>)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">&quot;豫章故郡,洪都新府。星分翼轸,地接衡庐。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run_sql</span>():</span><br><span class=\"line\">    cursor = pymysql.connect(</span><br><span class=\"line\">        host=<span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">        user=<span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">        password=<span class=\"string\">&#x27;usbw&#x27;</span>,</span><br><span class=\"line\">        database=<span class=\"string\">&#x27;student&#x27;</span>,</span><br><span class=\"line\">        charset=<span class=\"string\">&#x27;utf8mb4&#x27;</span>,</span><br><span class=\"line\">        autocommit=<span class=\"literal\">True</span></span><br><span class=\"line\">    ).cursor()</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">sql</span>):</span><br><span class=\"line\">        cursor.execute(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cursor</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\">db_query = run_sql()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pay_url</span>(<span class=\"params\">name, price</span>):</span><br><span class=\"line\">    pay_info = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;pid&quot;</span>: <span class=\"number\">1048</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;wxpay&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;out_trade_no&quot;</span>: time.strftime(<span class=\"string\">&quot;%Y%m%d%H%M%S&quot;</span>) + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>)),</span><br><span class=\"line\">        <span class=\"string\">&quot;notify_url&quot;</span>: <span class=\"string\">&quot;http://127.0.0.1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;return_url&quot;</span>: <span class=\"string\">&quot;http://127.0.0.1:5000/checkpay&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: name,</span><br><span class=\"line\">        <span class=\"string\">&quot;money&quot;</span>: price,</span><br><span class=\"line\">        <span class=\"string\">&quot;sign_type&quot;</span>: <span class=\"string\">&quot;MD5&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pay_info = &#123;k: v <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> pay_info.items() <span class=\"keyword\">if</span> v <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">and</span> k != <span class=\"string\">&#x27;sign&#x27;</span> <span class=\"keyword\">and</span> k != <span class=\"string\">&#x27;sign_type&#x27;</span>&#125;</span><br><span class=\"line\">    sorted_params = <span class=\"built_in\">sorted</span>(pay_info.items())</span><br><span class=\"line\">    pay_str = <span class=\"string\">&quot;&amp;&quot;</span>.join([<span class=\"string\">f&quot;<span class=\"subst\">&#123;k&#125;</span>=<span class=\"subst\">&#123;v&#125;</span>&quot;</span> <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> sorted_params])</span><br><span class=\"line\">    hash_str = hashlib.md5((pay_str + <span class=\"string\">&quot;RW288WWwRn2WgN4NEsaNiRWGeNQiwIEa&quot;</span>).encode(<span class=\"string\">&quot;utf-8&quot;</span>)).hexdigest()</span><br><span class=\"line\">    url = <span class=\"string\">&quot;https://pay.siyundata.com/submit.php?&quot;</span> + pay_str + <span class=\"string\">f&quot;&amp;sign=<span class=\"subst\">&#123;hash_str&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">password_md5</span>(<span class=\"params\">username, password</span>):</span><br><span class=\"line\">    result = hashlib.md5(<span class=\"string\">f&quot;<span class=\"subst\">&#123;username&#125;</span>xlsyyds<span class=\"subst\">&#123;password&#125;</span>hahaha&quot;</span>.encode(<span class=\"string\">&quot;utf-8&quot;</span>)).hexdigest()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/hello&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/test/&lt;int:id&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\"><span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;h1&gt;Hello <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(<span class=\"built_in\">id</span>)&#125;</span>&lt;/h1&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/gender/&lt;any(boy,girl):gender&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gender</span>(<span class=\"params\">gender</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> gender == <span class=\"string\">&quot;boy&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好帅哥&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> gender == <span class=\"string\">&quot;girl&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;你好美女&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        password = password_md5(username, password)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from user where username=&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27; and password=&#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">        result = db_query(sql).fetchall()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(result) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            session[<span class=\"string\">&quot;username&quot;</span>] = username</span><br><span class=\"line\">            image_data_a = img_base64(result[<span class=\"number\">0</span>][<span class=\"number\">4</span>])</span><br><span class=\"line\">            image_data_b = request.form.get(<span class=\"string\">&quot;image&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> Sample.main(image_data_a, image_data_b) &gt; <span class=\"number\">61</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;登录成功！&quot;</span>&#125;)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;人脸比对未通过！&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名或密码错误！&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;login.html&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/register&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    password = request.form.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">    password = password_md5(username, password)</span><br><span class=\"line\">    imgpath = <span class=\"string\">f&quot;facebody/<span class=\"subst\">&#123;time.strftime(<span class=\"string\">&#x27;%Y%m%d%H%M%S&#x27;</span>) + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>))&#125;</span>.png&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(imgpath, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        data = base64.b64decode(request.form.get(<span class=\"string\">&quot;image&quot;</span>))</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;insert into user(username,password,face) values(&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;,&#x27;<span class=\"subst\">&#123;password&#125;</span>&#x27;,&#x27;<span class=\"subst\">&#123;imgpath&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册失败！&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;注册成功！&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkusername&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkusername</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from user where username=&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">    result = db_query(sql).fetchall()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(result) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/playgame&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">playgame</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;<span class=\"subst\">&#123;username&#125;</span>正在开心玩游戏&lt;br&gt;&lt;a href=&#x27;/logout&#x27;&gt;退出登录&lt;/a&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/logout&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;退出成功！请重新登陆！&#x27;);window.location.href=&#x27;/login&#x27;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/goods&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>, <span class=\"string\">&quot;GET&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">goods</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session.get(<span class=\"string\">&quot;username&quot;</span>) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;请登录！&#x27;);window.location.href=&#x27;/login&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        username = session.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from user where username=&#x27;<span class=\"subst\">&#123;username&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">        result = db_query(sql).fetchall()</span><br><span class=\"line\">        userid = result[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">        logo = result[<span class=\"number\">0</span>][<span class=\"number\">3</span>]</span><br><span class=\"line\">    sql = <span class=\"string\">&quot;select * from goods where del=1&quot;</span>;</span><br><span class=\"line\">    goods = db_query(sql).fetchall()</span><br><span class=\"line\">    keyword = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        name = request.form.get(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\">        price = request.form.get(<span class=\"string\">&quot;price&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;insert into goods(name, price) values(&#x27;<span class=\"subst\">&#123;name&#125;</span>&#x27;,&#x27;<span class=\"subst\">&#123;price&#125;</span>&#x27;)&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(sql)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            db_query(sql).fetchall()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;菜品已存在！&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;添加成功！&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.args.get(<span class=\"string\">&quot;del&quot;</span>, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">id</span> = request.args.get(<span class=\"string\">&quot;del&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;update goods set del=0 where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>&quot;</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;删除成功！&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> request.args.get(<span class=\"string\">&quot;search&quot;</span>, <span class=\"number\">0</span>):</span><br><span class=\"line\">        keyword = request.args.get(<span class=\"string\">&quot;search&quot;</span>)</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;select * from goods where name like &#x27;%<span class=\"subst\">&#123;keyword&#125;</span>%&#x27; and del=1&quot;</span></span><br><span class=\"line\">        goods = db_query(sql).fetchall()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(goods) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        goods = ((<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;目前没有菜品&quot;</span>,<span class=\"string\">&quot;0.0&quot;</span>),)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;goods.html&quot;</span>,userid=userid, goods=goods, keyword=keyword, username=username, logo=logo)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/changegoods&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">changegoods</span>():</span><br><span class=\"line\">    name = request.form.get(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\">    price = request.form.get(<span class=\"string\">&quot;price&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = request.form.get(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;update goods set name=&#x27;<span class=\"subst\">&#123;name&#125;</span>&#x27;,price=&#x27;<span class=\"subst\">&#123;price&#125;</span>&#x27; where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>&quot;</span></span><br><span class=\"line\">    db_query(sql)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(&#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;修改成功！&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/pay&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pay</span>():</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = request.args.get(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">    sql = <span class=\"string\">f&quot;select * from goods where id=<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span> and del=1&quot;</span></span><br><span class=\"line\">    goods = db_query(sql).fetchall()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(goods) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;已售罄&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    name = goods[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">    price = goods[<span class=\"number\">0</span>][<span class=\"number\">2</span>]</span><br><span class=\"line\">    url = pay_url(name, price)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;script&gt;alert(&#x27;订单提交成功，请支付！&#x27;);window.location.href=&#x27;<span class=\"subst\">&#123;url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/checkpay&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">checkpay</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(request.args)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/changelogo&quot;</span>, methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">changelogo</span>():</span><br><span class=\"line\">    userid = request.form.get(<span class=\"string\">&quot;userid&quot;</span>)</span><br><span class=\"line\">    file = request.files[<span class=\"string\">&#x27;file&#x27;</span>]</span><br><span class=\"line\">    filename = file.filename</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> filename.endswith(<span class=\"string\">&quot;.jpg&quot;</span>) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> filename.endswith(<span class=\"string\">&quot;.gif&quot;</span>) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> filename.endswith(<span class=\"string\">&quot;.png&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;只允许jpg|gif|png格式图片上传&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\">    imgext = filename.split(<span class=\"string\">&quot;.&quot;</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    imgpath = <span class=\"string\">f&quot;assets/uploads/<span class=\"subst\">&#123;time.strftime(<span class=\"string\">&#x27;%Y%m%d%H%M%S&#x27;</span>) + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>))&#125;</span>.<span class=\"subst\">&#123;imgext&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> file:  <span class=\"comment\"># 这里可以加文件类型判断逻辑</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(imgpath, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(file.read())</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;update user set logo=&#x27;<span class=\"subst\">&#123;imgpath&#125;</span>&#x27; where id=<span class=\"subst\">&#123;userid&#125;</span>&quot;</span></span><br><span class=\"line\">        db_query(sql)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;上传成功！&#x27;);window.location.href=&#x27;/goods&#x27;;&lt;/script&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5001</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>login.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://api.vvhan.com/api/wallpaper/views</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-repeat</span>: no-repeat;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-position</span>: center <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-size</span>: cover;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#login</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#register</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">10px</span> black;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            backdrop-<span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">2px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">14px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">180px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid orange;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: .<span class=\"number\">5s</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span><span class=\"selector-pseudo\">:focus</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">220px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.text</span><span class=\"selector-pseudo\">::placeholder</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: purple;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">10px</span> white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: .<span class=\"number\">5s</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">8px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">20px</span> white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">video</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_msg&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;logvideo&quot;</span> <span class=\"attr\">autoplay</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_username&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;login_password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;logButton&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;login_register()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;注册&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_msg&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;regvideo&quot;</span> <span class=\"attr\">autoplay</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;canvas&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_username&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;register_password2&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;确认密码&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;regButton&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;注册&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register_login()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;assets/js/login.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","categories":[],"tags":[{"name":"项目","slug":"项目","permalink":"http://example.com/tags/%E9%A1%B9%E7%9B%AE/"}]},{"title":"Python","date":"2024-07-11T08:39:41.000Z","path":"2024/07/11/Python/","text":"基础知识一、注释单行注释：# 被注释内容多行注释：’’’ 被注释内容 ‘’’，或者 “”” 被注释内容 “””范围快捷注释：Ctrl + &#x2F; 二、格式化输出12345678910name = input(&quot;姓名：&quot;)age = input(&quot;年龄：&quot;)job = input(&quot;工作：&quot;)info = &#x27;&#x27;&#x27;----------- info of %s -----------姓名：%s年龄：%s工作：%s&#x27;&#x27;&#x27; % (name,name,age,job)print(info) 运行结果 1234567姓名：Aaron年龄：18工作：Teacher----------- info of Aaron -----------姓名：Aaron年龄：18工作：Teacher 占位符： s，获取传入对象的str方法的返回值，并将其格式化到指定位置 d，将整数、浮点数转换成 十 进制表示，并将其格式化到指定位置 r，获取传入对象的repr方法的返回值，并将其格式化到指定位置 o，将整数转换成 八 进制表示，并将其格式化到指定位置 x，将整数转换成十六进制表示，并将其格式化到指定位置 e，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（小写e） E，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（大写E） f， 将整数、浮点数转换成浮点数表示，并将其格式化到指定位置（默认保留小数点后6位） F，同上 g，自动调整将整数、浮点数转换成 浮点型或科学计数法表示（超过6位数用科学计数法），并将其格式化到指定位置（如果是科学计数则是e；） G，自动调整将整数、浮点数转换成 浮点型或科学计数法表示（超过6位数用科学计数法），并将其格式化到指定位置（如果是科学计数则是E；） %，当字符串中存在格式化标志时，需要用 %%表示一个百分号 三、基础数据类型（1）整数型(int) 整数 在 32 位机器上，整数的位数为 32 位，取值范围为 -2**31～2**31-1，即 -2147483648～2147483647 在 64 位系统上，整数的位数为 64 位，取值范围为 -2**63～2**63-1，即 -9223372036854775808～9223372036854775807 小数可能有误差 （2）布尔型(bool)False：0, “” ,[], () {}True： （3）字符串(str) 加了引号的字符都被认为是字符串 python””和’’的区别 在Python中，单引号(‘)和双引号(“)都可以用来定义字符串。它们之间几乎没有区别，大多数情况下可以根据个人偏好来选择使用。在某些情况下，Python语法规则可能要求使用一种引号而不是另一种。例如， 在定义包含变量或表达式的字符串时，通常使用双引号来定义格式化字符（f-string）：name &#x3D; “Alice”f”Hello, {name}!” 双引号内只能为单引号 字符串拼接： 123a = &#x27;a &#x27;b = &#x27;welcome &#x27;print(b + a,&#x27;*&#x27; * 3,a * 3) 运行结果 1welcome a *** a a a 字符串索引[0, size-1]、切片 12345678910a = &#x27;ABCDE&#x27;print(a[0], a[-1])a = &#x27;ABCDEFGHIJK&#x27;print(a[0:3])print(a[0:]) #默认到最后print(a[0:-1]) # -1 是列表中最后一个元素的索引，但是要满足[左闭右开)的原则，所以取不到K元素print(a[0:5:2]) #加步长print(a[5:0:-2]) #反向加步长 运行结果 123456A EABCABCDEFGHIJKABCDEFGHIJACEFDB 字符串常用方法 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596words = &quot;I am a string&quot;print(words.capitalize()) #首字母大写 print(words.swapcase()) #大小写翻转 print(words.title()) #每个单词的首字母大写 &quot;&quot;&quot;I am a stringi AM A STRINGI Am A String&quot;&quot;&quot;# 内容居中，总长度，空白处填充a = &quot;test&quot;ret = a.center(20,&quot;*&quot;)print(ret)# ********test********# 统计字符串中的元素出现的个数words = &quot;I am a string&quot;ret = words.count(&quot;a&quot;,0,30)print(ret)# 2# startswith 判断是否以...开头# endswith 判断是否以...结尾a = &quot;aisdjioadoiqwd12313assdj&quot;print(a.startswith(&quot;a&quot;))print(a.endswith(&quot;j&quot;))print(a.startswith(&#x27;sdj&#x27;,2,5))print(a.endswith(&#x27;ado&#x27;,7,10))&quot;&quot;&quot;TrueTrueTrueTrue&quot;&quot;&quot;# 寻找字符串中的元素是否存在print(a.find(&#x27;sdj&#x27;,1,10)) # 返回的找到的元素的索引，如果找不到返回-1print(a.index(&#x27;sdj&#x27;,1,10)) # 返回的找到的元素的索引，找不到报错。&quot;&quot;&quot;22&quot;&quot;&quot;# split 以什么分割，最终形成一个列表。此列表不含有这个分割的元素。ret = words.split(&#x27; &#x27;)print(ret)ret = words.rsplit(&#x27; &#x27;,2) # 加数字指定分割次数print(ret)&quot;&quot;[&#x27;I&#x27;, &#x27;am&#x27;, &#x27;a&#x27;, &#x27;string&#x27;][&#x27;I am&#x27;, &#x27;a&#x27;, &#x27;string&#x27;]&quot;&quot;# format的三种玩法 格式化输出print(&#x27;&#123;&#125; &#123;&#125; &#123;&#125;&#x27;.format(&#x27;aaron&#x27;,18,&#x27;teacher&#x27;))print(&#x27;&#123;1&#125; &#123;0&#125; &#123;1&#125;&#x27;.format(&#x27;aaron&#x27;,18,&#x27;teacher&#x27;))print(&#x27;&#123;name&#125; &#123;age&#125; &#123;job&#125;&#x27;.format(job=&#x27;teacher&#x27;,name=&#x27;aaron&#x27;,age=18))&quot;&quot;&quot;aaron 18 teacher18 aaron 18aaron 18 teacher&quot;&quot;&quot;# strip## 移除字符串两端的空格string = &quot; Hello, World! &quot;print(string.strip()) # 输出 &#x27;Hello, World!&#x27;## 移除字符串两端的指定字符string = &quot;***SPAM***&quot;print(string.strip(&#x27;*&#x27;)) # 输出 &#x27;SPAM&#x27;## 移除字符串左端的指定字符print(string.lstrip(&#x27;*&#x27;)) # 输出 &#x27;SPAM***&#x27;## 移除字符串右端的指定字符print(string.rstrip(&#x27;*&#x27;)) # 输出 &#x27;***SPAM&#x27;## 如果chars参数为空或None，则默认移除空白字符string = &quot; \\n\\tHello, World!\\n\\t &quot;print(string.strip()) # 输出 &#x27;Hello, World!&#x27;## 如果字符串中没有要移除的字符，则返回原字符串string = &quot;Hello, World!&quot;print(string.strip(&#x27;!&#x27;)) # 输出 &#x27;Hello, World!&#x27;，因为字符串两端没有&#x27;!&#x27;# replacewords = &quot;beautiful is better than ugly.&quot;print(words.replace(&#x27;e&#x27;,&#x27;a&#x27;,2)) # 字符串从左向右开始，把e替换成a，一共替换两次# 判断只由什么组成print(words.isalnum()) #字符串由字母或数字组成print(words.isalpha()) #字符串只由字母组成print(words.isdigit()) #字符串只由数字组成&quot;&quot;&quot;I am a stringFalseFalseFalse&quot;&quot;&quot; 四、基础运算符（1）算数运算&#x2F;：相除&#x2F;&#x2F;：取整**：幂次方 （2）赋值运算无自增++ 自减– （3）逻辑运算&amp;&amp;：and||：or!：not （4）成员运算123456789# 程序print(&#x27;a&#x27; in &#x27;abcd&#x27;)print(&#x27;y&#x27; not in &#x27;xyzasd&#x27;)# 运行结果&quot;&quot;&quot;TrueFalse&quot;&quot;&quot; 五、Python 数据类型（1）列表 list [] 可以储存不同的数据类型，而且可以储存大量数据；有序的，有索引值，可切片，方便取值。 增12345678910111213141516li = [&#x27;a&#x27;,2,&#x27;b&#x27;,3,]li.insert(0,1) # 按照索引去增加print(li)li.append(&#x27;c&#x27;) # append() 将一个元素添加到列表的末尾print(li)li.extend([&#x27;q,a,w&#x27;]) # extend() 将迭代器（如列表、元组、字符串等）中的所有元素依次添加到列表的末尾print(li)li.extend([&#x27;q&#x27;,&#x27;a&#x27;,&#x27;w&#x27;]) print(li)&quot;&quot;&quot;[1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3][1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;][1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;, &#x27;q,a,w&#x27;][1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;, &#x27;q,a,w&#x27;, &#x27;q&#x27;, &#x27;a&#x27;, &#x27;w&#x27;]&quot;&quot;&quot; 删12345678910111213141516li = [1,&#x27;a&#x27;,2,&#x27;b&#x27;,3,&#x27;c&#x27;]a = li.pop(1) # 按照位置去删除，有返回值print(a)del li[1:3] # 按照位置去删除，也可切片删除，没有返回值。print(li)li.remove(&#x27;c&#x27;) # 删除指定元素print(li)li.clear() # 清空列表print(li)&quot;&quot;&quot;a[1, 3, &#x27;c&#x27;][1, 3][]&quot;&quot;&quot; 改12345678910li = [1,&#x27;a&#x27;,2,&#x27;b&#x27;,3,&#x27;c&#x27;]li[1] = &#x27;aaa&#x27;print(li)li[2:4] = [4,&#x27;d&#x27;,5,&#x27;e&#x27;]print (li)&quot;&quot;&quot;[1, &#x27;aaa&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;][1, &#x27;aaa&#x27;, 4, &#x27;d&#x27;, 5, &#x27;e&#x27;, 3, &#x27;c&#x27;]&quot;&quot;&quot; 查切片 或 循环 其他操作1234567891011121314li = [1,2,4,5,4,2,4]print (li.count(4)) # 统计某个元素在列表中出现的次数print (li.index(2)) # 用于从列表中找出某个值第一个匹配项的索引位置li.sort() # 用于在原位置对列表进行排序print (li)li.reverse() # 将列表中的元素反向存放print (li)&quot;&quot;&quot;31[1, 2, 2, 4, 4, 4, 5][5, 4, 4, 4, 2, 2, 1]&quot;&quot;&quot; （2）字典 dict {} 字典是 Python 中唯一的映射类型，采用键值对（key-value）的形式存储数据。python对key进行哈希函数运算，根据计算的结果决定value的存储地址，所以字典是无序存储的，且key必须是可哈希的。可哈希表示key必须是不可变类型，如：数字、字符串、元组。 从python3.6以后字典就是有顺序的了 按照元素插入的顺序 增12345678910111213dic = &#123;&quot;age&quot;:18, &quot;name&quot;:&quot;aj&quot;&#125;dic[&#x27;li&#x27;] = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]print(dic)dic.setdefault(&#x27;k&#x27;,&#x27;v&#x27;) # setdefault() 如果指定的键已经存在则不做任何操作,如果原字典中不存在指定的键值对，则会添加。print(dic)dic.setdefault(&#x27;k&#x27;,&#x27;v1&#x27;)print(dic)&quot;&quot;&quot;&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aj&#x27;, &#x27;li&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]&#125;&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aj&#x27;, &#x27;li&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], &#x27;k&#x27;: &#x27;v&#x27;&#125;&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aj&#x27;, &#x27;li&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], &#x27;k&#x27;: &#x27;v&#x27;&#125;&quot;&quot;&quot; 删12345678910111213141516171819202122dic = &#123;&quot;age&quot;:18, &quot;name&quot;:&quot;aaron&quot;&#125;dic_pop = dic.pop(&#x27;age&#x27;) # pop() 根据key删除键值对，并返回对应的值print(dic_pop)dic_pop = dic.pop(&#x27;sex&#x27;,&#x27;查无此项&#x27;) # 如果key不存在 则返回指定值print(dic_pop)del dic[&#x27;name&#x27;] # 根据key删除相应的键值对print(dic)dic[&#x27;name&#x27;] = &#x27;demo&#x27; # 增print(dic)dic_pop = dic.popitem() # 默认删除并返回字典中的最后一个插入的键值对，将删除的键值对以 元祖() 的形式返回print(dic_pop,dic)dic_clear = dic.clear() # 清空字典print(dic,dic_clear)&quot;&quot;&quot;18查无此项&#123;&#125;&#123;&#x27;name&#x27;: &#x27;demo&#x27;&#125;(&#x27;name&#x27;, &#x27;demo&#x27;) &#123;&#125;&#123;&#125; None&quot;&quot;&quot; 改1234567891011dic = &#123;&quot;age&quot;:18, &quot;name&quot;:&quot;aaron&quot;, &#x27;sex&#x27;:&#x27;male&#x27;&#125;dic2 = &#123;&quot;age&quot;:30, &quot;name&quot;:&#x27;demo&#x27;&#125;dic2.update(dic) # 将dic所有的键值对覆盖添加（相同的覆盖，没有的添加）到dic2中print(dic2)dic2[&#x27;age&#x27;] = 30print(dic2)&quot;&quot;&quot;&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aaron&#x27;, &#x27;sex&#x27;: &#x27;male&#x27;&#125;&#123;&#x27;age&#x27;: 30, &#x27;name&#x27;: &#x27;aaron&#x27;, &#x27;sex&#x27;: &#x27;male&#x27;&#125;&quot;&quot;&quot; 查12345678910dic = &#123;&quot;age&quot;:18, &quot;name&quot;:&quot;aaron&quot;, &#x27;sex&#x27;:&#x27;male&#x27;&#125;value = dic[&#x27;name&#x27;] # 没有相应Key 会报错print(value)value = dic.get(&#x27;abc&#x27;,&#x27;查无此项&#x27;) # 没有相应Key 返回指定值print(value)&quot;&quot;&quot;aaron查无此项&quot;&quot;&quot; 其他操作1234567891011121314151617181920212223dic = &#123;&quot;age&quot;:18, &quot;name&quot;:&quot;aaron&quot;, &#x27;sex&#x27;:&#x27;male&#x27;&#125;for i in dic.items(): # 将键和值作为元祖列出 print(i,end=&quot; &quot;)print()for key,value in dic.items(): print(key,value,end=&quot; &quot;)print()for i in dic: # 只是迭代键 print(i,end=&quot; &quot;)print()keys = dic.keys()print(keys,type(keys))value = dic.values()print(value,type(value))&quot;&quot;&quot;(&#x27;age&#x27;, 18) (&#x27;name&#x27;, &#x27;aaron&#x27;) (&#x27;sex&#x27;, &#x27;male&#x27;) age 18 name aaron sex male age name sex dict_keys([&#x27;age&#x27;, &#x27;name&#x27;, &#x27;sex&#x27;]) &lt;class &#x27;dict_keys&#x27;&gt;dict_values([18, &#x27;aaron&#x27;, &#x27;male&#x27;]) &lt;class &#x27;dict_values&#x27;&gt;&quot;&quot;&quot; （3）元组 tuple () 元组被称为只读列表，即数据可以被查询，但不能被修改。tuple其实不可变的是地址空间，如果地址空间里存的是可变的数据类型的话，比如列表就是可变的 演示123456789tuple = (1, 2, 3, [1, 4, 7])print(tuple)tuple[3][2] = 100print(tuple)&quot;&quot;&quot;(1, 2, 3, [1, 4, 7])(1, 2, 3, [1, 4, 100])&quot;&quot;&quot; （4）集合 set {} 集合是无序的，不重复，确定性的数据集合，它里面的元素是可哈希的(不可变类型)，但是集合本身是不可哈希（所以集合做不了字典的键）的。 以下是集合最重要的两点： 去重，把一个列表变成集合，就自动去重了。 关系测试，测试两组数据之前的交集、差集、并集等关系。 创建集合1234567set1 = set([2,2,&#x27;barry&#x27;])set2 = &#123;1,2,&#x27;barry&#x27;&#125;print(set1,set2)&quot;&quot;&quot;&#123;&#x27;barry&#x27;, 2&#125; &#123;&#x27;barry&#x27;, 1, 2&#125;&quot;&quot;&quot; 增1234567891011121314151617set1 = &#123;&#x27;abc&#x27;,&#x27;def&#x27;,123,&#x27;asdas&#x27;&#125;set1.add(&#x27;qwer&#x27;) # add()函数的参数只能接收 可哈希数据类型，即不可变数据类型，比如整型、浮点型、元组、字符串print(set1)# update() 将迭代器（如字符串、元组、列表、集合、字典）中的所有元素向集合中添加元素时，update接收的参数不能是整型、浮点型set1.update(&#x27;A&#x27;)print(set1)set1.update(&#x27;哈哈哈&#x27;)print(set1)set1.update([1,2,3])print(set1)&quot;&quot;&quot;&#123;&#x27;def&#x27;, &#x27;qwer&#x27;, &#x27;abc&#x27;, 123, &#x27;asdas&#x27;&#125;&#123;&#x27;def&#x27;, &#x27;A&#x27;, &#x27;qwer&#x27;, &#x27;abc&#x27;, 123, &#x27;asdas&#x27;&#125;&#123;&#x27;def&#x27;, &#x27;A&#x27;, &#x27;qwer&#x27;, &#x27;abc&#x27;, &#x27;哈&#x27;, 123, &#x27;asdas&#x27;&#125;&#123;&#x27;def&#x27;, 1, 2, &#x27;A&#x27;, &#x27;qwer&#x27;, 3, &#x27;abc&#x27;, &#x27;哈&#x27;, 123, &#x27;asdas&#x27;&#125;&quot;&quot;&quot; 删1234567891011121314set1 = &#123;&#x27;abc&#x27;,&#x27;def&#x27;,123,&#x27;asdas&#x27;&#125;set1.remove(&#x27;abc&#x27;) # 删除指定元素print(set1)set1.pop() # 随机删除一个元素print(set1)set1.clear() # 清空合集print(set1)del set1 # 删除合集&quot;&quot;&quot;&#123;123, &#x27;def&#x27;, &#x27;asdas&#x27;&#125;&#123;&#x27;def&#x27;, &#x27;asdas&#x27;&#125; # 每次运行结果不一定相同set()&quot;&quot;&quot; 其他操作交集（&amp; 或者 intersection）取出两个集合共有的元素 12345678910set1 = &#123;1,2,3,4,5&#125;set2 = &#123;3,4,5,6,7&#125;# 列出两个集合中共同拥有的项print(set1 &amp; set2)print(set1.intersection(set2))&quot;&quot;&quot;&#123;3, 4, 5&#125;&#123;3, 4, 5&#125;&quot;&quot;&quot; 并集（| 或者 union）合并两个集合的所有元素 12345678910set1 = &#123;1,2,3,4,5&#125;set2 = &#123;3,4,5,6,7&#125;# 列出两个集合中所有的项print(set1 | set2)print(set2.union(set1))&quot;&quot;&quot;&#123;1, 2, 3, 4, 5, 6, 7&#125;&#123;1, 2, 3, 4, 5, 6, 7&#125;&quot;&quot;&quot; 差集（- 或者 difference）第一个集合去除二者共有的元素 12345678910set1 = &#123;1,2,3,4,5&#125;set2 = &#123;3,4,5,6,7&#125;# 在set1中删除set2中有的项print(set1 - set2)print(set1.difference(set2))&quot;&quot;&quot;&#123;1, 2&#125;&#123;1, 2&#125;&quot;&quot;&quot; 反交集 （^ 或者 symmetric_difference）先合并，再去除共有元素 12345678910set1 = &#123;1,2,3,4,5&#125;set2 = &#123;3,4,5,6,7&#125;# 显示set1和set2不共存的项print(set1 ^ set2)print(set1.symmetric_difference(set2))&quot;&quot;&quot;&#123;1, 2, 6, 7&#125;&#123;1, 2, 6, 7&#125;&quot;&quot;&quot; 子集与超集当一共集合的所有元素都在另一个集合里，则称这个集合是另一个集合的子集，另一个集合是这个集合的超集 123456789101112131415set1 = &#123;1,2,3&#125;set2 = &#123;1,2,3,4,5,6&#125;# 说明set1是set2子集。print(set1 &lt; set2)print(set1.issubset(set2))# 说明set2是set1超集print(set2 &gt; set1)print(set2.issuperset(set1))&quot;&quot;&quot;TrueTrueTrueTrue&quot;&quot;&quot; frozenset不可变集合，让集合变成不可变类型12345678set1 = &#123;1,2,3,4,5,6&#125;s = frozenset(set1)print(s,type(s))s.add(7) # 不可以修改,会报错&quot;&quot;&quot;frozenset(&#123;1, 2, 3, 4, 5, 6&#125;) &lt;class &#x27;frozenset&#x27;&gt;AttributeError: &#x27;frozenset&#x27; object has no attribute &#x27;add&#x27;&quot;&quot;&quot; 六、流程控制顺序分支12345678910if 条件: 满足条件执行代码elif 条件: 上面的条件不满足就走这个elif 条件: 上面的条件不满足就走这个elif 条件: 上面的条件不满足就走这个 else: 上面所有的条件不满足就走这段 循环while12while 条件: 循环体 循环终止语句 break：退出循环 continue：从当前跳到下一次循环 其他（for，enumerate，range）for循环：用户按照顺序循环可迭代对象的内容。1234567891011121314151617s = &#x27;先帝创业未半而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。&#x27;for i in s: print(i,end=&quot; &quot;)print()li = [&#x27;甲&#x27;,&#x27;乙&#x27;,&#x27;丙&#x27;,&#x27;丁&#x27;]for i in li: print(i,end=&quot; &quot;)print()dic = &#123;&#x27;a&#x27;:1,&#x27;b&#x27;:2,&#x27;c&#x27;:3&#125;for k,v in dic.items(): print(k,v,end=&quot; &quot;)&quot;&quot;&quot;先 帝 创 业 未 半 而 中 道 崩 殂 ， 今 天 下 三 分 ， 益 州 疲 弊 ， 此 诚 危 急 存 亡 之 秋 也 。 甲 乙 丙 丁 a 1 b 2 c 3&quot;&quot;&quot; enumerate：枚举，对于一个可迭代的（iterable）&#x2F;可遍历的对象（如列表、字符串），enumerate将其组成一个索引序列，利用它可以同时获得索引和值。12345678910111213141516171819li = [&#x27;甲&#x27;,&#x27;乙&#x27;,&#x27;丙&#x27;,&#x27;丁&#x27;]for i in li: print(i,end=&quot; &quot;)print()for i in enumerate(li): print(i,end=&quot; &quot;)print()for index,value in enumerate(li): print(index,value,end=&quot; &quot;)print()for index,value in enumerate(li,100): # 从哪个数字开始索引（index从哪开始） print(index,value,end=&quot; &quot;) &quot;&quot;&quot;甲 乙 丙 丁 (0, &#x27;甲&#x27;) (1, &#x27;乙&#x27;) (2, &#x27;丙&#x27;) (3, &#x27;丁&#x27;) 0 甲 1 乙 2 丙 3 丁 100 甲 101 乙 102 丙 103 丁 &quot;&quot;&quot; range：指定范围，生成指定数字。1234567891011121314for i in range(1,10): print(i,end=&quot; &quot;)print()for i in range(1,10,2): # 步长 print(i,end=&quot; &quot;)print()for i in range(10,1,-2): # 反向步长 print(i,end=&quot; &quot;) &quot;&quot;&quot;1 2 3 4 5 6 7 8 9 1 3 5 7 9 10 8 6 4 2&quot;&quot;&quot; 案例—猜数字小游戏要求 生成一个随机数 猜错3次了以后，程序自动退出 参考 123456789101112131415161718192021222324252627import randomans = random.randint(1,100) # 包括两端点cnt = 3t = cntwhile cnt: if t == cnt: print(f&quot;1~100范围猜一个数，共有&#123;t&#125;次机会&quot;) guess = input(&quot;输入：&quot;) if guess.isdigit(): if int(guess) &gt; ans: print(&quot;大了&quot;,end=&quot; &quot;) cnt -= 1 elif int(guess) == ans: print(&quot;对了&quot; + &quot;\\n&quot; + &quot;Game over!&quot;) break else: print(&quot;小了&quot;, end=&quot; &quot;) cnt -= 1 if cnt: print(f&quot;还剩&#123;cnt&#125;次机会&quot;) else: print(&quot;\\n&quot;+&quot;Game over!&quot;) else: print(&quot;错误输入，请重新输入&quot;) 文件操作文件操作基本流程文本文件与二进制文件 文本文件：可以使用文本编辑器查看； 二进制文件：保存的内容不是直接给人查看的，而是使用专用软件查看的，例如图片文件、视频文件； 文件操作套路 打开文件； 读写文件； 读文件：将文件内容读入内存； 写文件：将内存内容写入文件； 关闭文件； 文件操作函数 open：负责打开文件，并且返回文件对象read&#x2F;write&#x2F;close：三个方法都需要通过 文件对象 来调用 open： 第一个参数是文件名（文件名区分大小写），第二个参数是打开方式； 如果文件存在返回文件操作对象； 如果文件不存在抛出异常 read：可以一次性读入并返回文件的所有内容； close：负责关闭文件； 文件打开方式 f &#x3D; open(“文件名”, “访问方式”) 访问方式 说明 r 只读 文件不存在报错 w 只写：文件存在则覆盖，文件不存在则创建 a 追加写入：文件存在则追加，文件不存在则创建 r+ 读写，且根据光标的位置和需要多少的空间覆盖，文件不存在报错； w+ 读写，文件存在则覆盖，不存在则报错 a+ 读写且追加，文件存在则追加，文件不存在则创建（比较好用） 对于二进制bytes类型操作的读写 a + b 或 w + b 或 a + b 对于非文本文件，我们只能使用b模式，”b”表示以字节的方式操作（而所有文件也都是以字节的形式存储的，使用这种模式无需考虑文本文件的字符编码、图片文件的jgp格式、视频文件的avi格式） 注： 以b方式打开时，读取到的内容是字节类型，写入时也需要提供字节类型，不能指定编码 频繁的移动文件指针，会影响文件的读写效率，开发中更多的时候会以 只读、只写 的方式来操作文件. 按行读取文件内容 read方法默认会把文件的所有内容一次性读取到内存 readline方法可以一次读取一行内容； 方法执行后，文件指针移动到下一行，准备再次读取； 123456789101112131415161718192021# 方式一、通过循环按行读取文件所有内容file1 = open(&quot;README.txt&quot;)i = 1while True: text1 = file1.readline().strip() if text1: print(&quot;这是第%s行内容&quot; % i) i += 1 print(text1) else: breakfile1.close()file2 = open(&quot;README.txt&quot;)# 通过for遍历按行读取文件所有内容for i in file2.readlines(): print(i.strip())file2.close() with 结构把上面按行读取文件内容的代码使用with重新组织一下 12345678910i = 1with open(&quot;README.txt&quot;) as file1: while True: text1 = file1.readline().strip() if text1: print(&quot;这是第%s行内容&quot; % i) i += 1 print(text1) else: break close()在操作完毕文件后，一定要记住f.close(),推荐操作方式：使用with关键字来帮我们管理上下文 123with open(&#x27;a.txt&#x27;,&#x27;r&#x27;) as read_f, open(&#x27;b.txt&#x27;,&#x27;w&#x27;) as write_f: data=read_f.read() write_f.write(data) 文件编码f&#x3D;open(…)是由操作系统打开文件，那么如果我们没有为open指定编码，那么打开文件的默认编码很明显是操作系统指定，操作系统会用自己的默认编码去打开文件，在windows下是gbk，在linux下是utf-8。 f&#x3D;open(‘a.txt’,’r’,encoding&#x3D;’utf-8’) 案例一——文件复制12345678910111213# 读取图片等二进制with open(&quot;a.png&quot;,&quot;rb&quot;) as f: data = f.read()# 复制二进制文件with open(&quot;aa.png&quot;,&quot;wb&quot;) as f: f.write(data)# 案例——暗度陈仓 图片内藏学习资料with open(&quot;resource.png&quot;,&quot;ab&quot;) as f: f.write(data) f.write(open(&quot;b.zip&quot;,&quot;rb&quot;).read())# 图片后缀改成 .zip 或许暗藏玄机 案例二——文件修改文件的数据是存放于硬盘上的，因而只存在覆盖、不存在修改这么一说，我们平时看到的修改文件，都是模拟出来的效果，具体的说有两种实现方式： 方式一：将硬盘存放的该文件的内容全部加载到内存，在内存中是可以修改的，修改完毕后，再由内存覆盖到硬盘（word，vim，nodpad++等编辑器） 12345678910import oswith open(&#x27;a.txt&#x27;) as read_f,open(&#x27;a.txt.new&#x27;,&#x27;w&#x27;) as write_f: data = read_f.read() data = data.replace(&#x27;Hello&#x27;,&#x27;nihao&#x27;) write_f.write(data)os.remove(&#x27;a.txt&#x27;)os.rename(&#x27;a.txt.new&#x27;,&#x27;a.txt&#x27;) 方式二：将硬盘存放的该文件的内容一行一行地读入内存，修改完毕就写入新文件，最后用新文件覆盖源文件 123456789import oswith open(&#x27;a.txt&#x27;) as read_f,open(&#x27;a.txt.new&#x27;,&#x27;w&#x27;) as write_f: for line in read_f: line = line.replace(&#x27;nihao&#x27;,&#x27;Hello&#x27;) write_f.write(line)os.remove(&#x27;a.txt&#x27;)os.rename(&#x27;a.txt.new&#x27;,&#x27;a.txt&#x27;) 案例三——计算总价文件a.txt内容：每一行内容分别为商品名字，价钱，个数。 apple 10 3 tesla 100000 1 mac 3000 2 lenovo 30000 3 chicken 10 3 通过代码，将其构建成这种数据类型：[{‘name’:’apple’,’price’:10,’amount’:3},{‘name’:’tesla’,’price’:1000000,’amount’:1}……] 并计算出总价钱。 123456789101112131415list = []with open(&#x27;a.txt&#x27;,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file: for line in file: list2 = line.strip().split() if list2: dic = &#123;&#x27;name&#x27;:list2[0],&#x27;price&#x27;:list2[1],&#x27;amount&#x27;:list2[2]&#125; list.append(dic) continueprint(list)price = 0for i in list: price += int(i[&#x27;price&#x27;]) * int(i[&#x27;amount&#x27;])print(price) 案例四——登录注册+ 连续输错3次密码封30s123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100import timedb = &#123;&#125;database = &quot;db.txt&quot;def menu(): print(&quot;菜单&quot;.center(30, &quot;=&quot;)) print(&quot;1.登录&quot;.center(30, &quot; &quot;)) print(&quot;2.注册&quot;.center(30, &quot; &quot;)) print(&quot;=&quot; * 32) # 根据用户输入执行功能 choice = input(&quot;请输入选项：&quot;) ## 1.登录 if choice == &quot;1&quot;: username = input(&quot;请输入用户名：&quot;) if check_username(username) == 0: return &quot;用户名不存在&quot; password = input(&quot;请输入密码：&quot;) res = login(username,password) if res[&quot;code&quot;] == 1: print(res[&quot;msg&quot;]) return play_game() elif res[&quot;code&quot;] == 0: return res[&quot;msg&quot;] ## 2.注册 elif choice == &quot;2&quot;: ### 安全写法 username = input(&quot;用户名：&quot;) if check_username(username) == 1: return &quot;用户已存在&quot; password = input(&quot;请输入密码：&quot;) res = register(username,password) return res[&quot;msg&quot;] else: print(&quot;错误输入，请重新输入&quot;)def check_username(username): # 存在返回1 不存在返回0 if username in db: return 1 else: return 0def play_game(): return &quot;玩儿游戏ing&quot;def login(username,password): # &#123;&quot;code&quot;:0, &quot;msg&quot;:&quot;...&quot;&#125; # &#123;&quot;code&quot;:1, &quot;msg&quot;:&quot;登录成功&quot;&#125; if int(db.get(username)[1]) &lt; time.time(): ### 记录的时间戳比当前时间小，说明还未被封号 if db.get(username)[2] != &quot;0&quot;: ### 且剩余尝试次数不为零 #### 登录成功 if db.get(username)[0] == password: db.get(username)[2] = &quot;3&quot; ##### 重置尝试次数 write_db() return &#123;&quot;code&quot;:1, &quot;msg&quot;:&quot;登录成功&quot;&#125; #### 登录失败 else: ##### 判断尝试次数是否剩余 if db.get(username)[2] == &quot;1&quot;: db.get(username)[2] = &quot;3&quot; ##### 重置尝试次数 db.get(username)[1] = str(int(time.time()) + 30) ### 更新账号的时间戳 write_db() return &#123;&quot;code&quot;: 0, &quot;msg&quot;: &quot;密码错误，尝试次数用完，30s后重新尝试&quot;&#125; else: db.get(username)[2] = str(int(db.get(username)[2]) - 1) ##### 更新尝试次数 write_db() return &#123;&quot;code&quot;: 0, &quot;msg&quot;: f&quot;密码错误，还剩&#123;db.get(username)[2]&#125;次尝试机会&quot;&#125; # else 剩余尝试次数为0 说明已被封禁 第一个if就处理了 ### 被封号 else: return &#123;&quot;code&quot;:0,&quot;msg&quot;:f&quot;你已被封号，还剩&#123;str(int(db.get(username)[1]) - int(time.time()))&#125;s解封&quot;&#125;def register(username,password): # &#123;&quot;code&quot;:0, &quot;msg&quot;:&quot;系统错误，注册失败&quot;&#125; # &#123;&quot;code&quot;:1, &quot;msg&quot;:&quot;注册成功&quot;&#125; db[username] = [password, str(int(time.time())), &quot;3&quot;] ### 注册时记录当前的时间戳信息，联合尝试次数，作为封禁依据 write_db() return &#123;&quot;code&quot;:1, &quot;msg&quot;:&quot;注册成功&quot;&#125;def get_db(): # 可变数据类型，支持全局修改，类比C++数组 with open(database, &quot;a+&quot;, encoding=&quot;utf-8&quot;) as f: f.seek(0) data = f.readlines() if len(data) &gt; 0: for line in data: tmp = line.strip().split(&quot;|&quot;) db[tmp[0]] = tmp[1:]def write_db(): with open(database, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: ### &quot;W&quot; 直接覆盖，不考虑哪部分变化了 for k, v in db.items(): f.write(f&quot;&#123;k&#125;|&#123;v[0]&#125;|&#123;v[1]&#125;|&#123;v[2]&#125;\\n&quot;)while True: # 读取数据db.txt，生成db字典 &#123;&#x27;张三&#x27;: [&#x27;123456&#x27;], &#x27;李四&#x27;: [&#x27;456789&#x27;], &#x27;王五&#x27;: [&#x27;123123&#x27;]&#125; 字典的键为用户名，值为列表 get_db() print(db) # 用于调试 print(menu()) 进阶函数 函数：函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。 函数的定义和调用定义 123def func(参数): pass return 调用 func() 函数的返回值 不写return的情况下，会默认返回一个None 一旦遇到return，结束整个函数。 返回多个值会被组织成元组被返回，也可以用多个值来接收 12345678def ret_demo(): return 1,2,&#x27;a&#x27;,[&#x27;hello&#x27;,&#x27;world&#x27;]ret = ret_demo()print(ret)&quot;&quot;&quot;(1, 2, &#x27;a&#x27;, [&#x27;hello&#x27;, &#x27;world&#x27;])&quot;&quot;&quot; 函数的参数 按位置传参 按关键字传参 位置、关键字混合传参（位置参数必须在关键字参数的前面 对于一个形参只能赋值一次） 12345678910111213def maxnumber(x,y): the_max = x if x &gt; y else y return the_maxres1 = maxnumber(10,20)res2 = maxnumber(y = 10,x = 20)res3 = maxnumber(10,y = 20)print(res1,end=&quot; &quot;)print(res2,end=&quot; &quot;)print(res3)&quot;&quot;&quot;20 20 20&quot;&quot;&quot; 默认参数（缺省值） 123456789def stu_info(name,age = 18): print(name,age)stu_info(&#x27;aaron&#x27;)stu_info(&#x27;song&#x27;,50)&quot;&quot;&quot;aaron 18song 50&quot;&quot;&quot; 默认参数是一个可变数据类型 12345678910def demo(a,l = []): l.append(a) print(l)demo(&#x27;abc&#x27;)demo(&#x27;123&#x27;)&quot;&quot;&quot;[&#x27;abc&#x27;][&#x27;abc&#x27;, &#x27;123&#x27;]&quot;&quot;&quot; 动态参数 12345678910def demo(*args,**kwargs): print(args,type(args)) print(kwargs,type(kwargs))#动态参数，不定长传参，用*args，**kwargs接收，args是元祖形式，接收除去键值对以外的所有参数，kwargs接收的只是键值对的参数，并保存在字典中。demo(&#x27;aaron&#x27;,1,3,[1,3,2,2],&#123;&#x27;a&#x27;:123,&#x27;b&#x27;:321&#125;,country=&#x27;china&#x27;,b=1)&quot;&quot;&quot;(&#x27;aaron&#x27;, 1, 3, [1, 3, 2, 2], &#123;&#x27;a&#x27;: 123, &#x27;b&#x27;: 321&#125;) &lt;class &#x27;tuple&#x27;&gt;&#123;&#x27;country&#x27;: &#x27;china&#x27;, &#x27;b&#x27;: 1&#125; &lt;class &#x27;dict&#x27;&gt;&quot;&quot;&quot; 函数命名空间分为三种 全局命名空间 局部命名空间 内置命名空间：由Python解释器在启动时自动创建的，并且始终可用，无需导入任何模块（如常量True，内置函数print()） 取值顺序 在局部调用：局部命名空间-&gt;全局命名空间-&gt;内置命名空间 在全局调用：全局命名空间-&gt;内置命名空间 globals和locals方法 12345678910111213a = 1b = 2def func(): a = 12 b = 20 print(globals()) print(locals())func()&quot;&quot;&quot;&#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None,......, &#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;func&#x27;: &lt;function func at 0x00000000010F37E0&gt;&#125;&#123;&#x27;a&#x27;: 12, &#x27;b&#x27;: 20&#125;&quot;&quot;&quot; global 关键字 声明一个全局变量。 在局部作用域想要对全局作用域的全局变量进行修改时，需要用到 global(限于字符串，数字)。 对可变数据类型（list，dict，set）可以直接引用不用通过global1234567891011a = 1print(a,end=&quot; &quot;)def func(): global a a = 3func()print(a)&quot;&quot;&quot;1 3&quot;&quot;&quot; nonlocal 关键字 不能修改全局变量。 在局部作用域中，对父级作用域（或者更外层作用域非全局作用域）的变量进行引用和修改，并且引用的哪层，从那层及以下此变量全部发生改变。 123456789101112131415161718192021def add_b(): b = 1 def do_global(): b = 10 print(b) def dd_nolocal(): nonlocal b # 应用了上一层的变量b b = b + 20 print(b) # 发生了改变 dd_nolocal() # 调用函数，导致do_global的命名空间b也改变了 print(b) do_global() print(b)add_b() # 最上面一层没有变化&quot;&quot;&quot;1030301&quot;&quot;&quot; 函数定义时并不被执行，只有func()调用时才执行 函数名的本质 函数名本质上就是函数的内存地址 可被引用 12345678910def func(): print(&#x27;in func&#x27;)f = funcprint(f)f()&quot;&quot;&quot;&lt;function func at 0x0000000000EF04A0&gt;in func&quot;&quot;&quot; 可以被当作容器类型的元素 12345678910111213141516def f1(): print(&#x27;f1&#x27;,end=&quot; &quot;)def f2(): print(&#x27;f2&#x27;,end=&quot; &quot;)def f3(): print(&#x27;f3&#x27;,end=&quot; &quot;)l = [f1,f2,f3]d = &#123;&#x27;f1&#x27;:f1,&#x27;f2&#x27;:f2,&#x27;f3&#x27;:f3&#125;#调用l[0]()d[&#x27;f2&#x27;]()&quot;&quot;&quot;f1 f2&quot;&quot;&quot; 可以当作函数的参数和返回值 123456789101112def f1(): print(&#x27;f1&#x27;)def func(argv): argv() return argvf = func(f1)f()&quot;&quot;&quot;f1f1&quot;&quot;&quot; 闭包（Closure）三大特性 1.函数嵌套函数2.函数内部可以引用外部的参数和变量3.参数和变量不会被垃圾回收机制回收 内部函数包含对外部作用域而非全剧作用域变量的引用，该内部函数称为 闭包函数 用途：可以提前在函数中封住一些预设的数据或者属性1234567891011def func(): name = &#x27;张三&#x27; def inner(): print(name) return innerf = func()f()&quot;&quot;&quot;张三&quot;&quot;&quot; 判断闭包函数的方法closure 123456789101112131415161718192021222324def func(): name = &#x27;aaron&#x27; def inner(): print(name) # 引用外部作用域 print(inner.__closure__) return innerf = func()f()name = &#x27;aaron&#x27;def func(): def inner(): print(name) # 引用全局作用域 print(inner.__closure__) return innerf = func()f()&quot;&quot;&quot;(&lt;cell at 0x0000000000F29390: str object at 0x0000000000F35670&gt;,) # 最后运行的结果里面有cell就是闭包aaronNone # 输出结果为None，说明不是闭包aaron&quot;&quot;&quot; 案例1 123456789101112131415def wrapper(): money = 1000 def func(): name = &#x27;apple&#x27; def inner(): print(name,money) return inner return funcf = wrapper()i = f()i()&quot;&quot;&quot;apple 1000&quot;&quot;&quot; 案例2 123456789101112def func(a,b): def inner(x): return a*x + b return innerfunc1 = func(4,5)func2 = func(7,8)print(func1(5),func2(6))&quot;&quot;&quot;25 50&quot;&quot;&quot; 案例3 12345678910111213141516from urllib.request import urlopendef get_ip(): content = urlopen(&#x27;http://myip.ipip.net&#x27;).read().decode(&#x27;utf-8&#x27;) # 预加载一次，后面就会很快 print(f&quot;IP预加载完成\\n&#123;content&#125;&quot;) def inner(): return content.split(&quot; &quot;)[1].split(&quot;：&quot;)[1] return innerget_ip = get_ip()print(f&quot;你的IP为：&#123;get_ip()&#125;&quot;)&quot;&quot;&quot;IP预加载完成当前 IP：106.110.89.102 来自于：中国 江苏 徐州 电信你的IP为：106.110.89.102&quot;&quot;&quot; 装饰器 让其他函数在不需要做任何代码变动的前提下，增加额外的功能，装饰器的返回值是一个函数对象。装饰器的应用场景：插入日志，性能测试，事务处理，缓存等场景。 案例切入1234567891011121314151617181920def func1(): print(&quot;in func1&quot;)#新的需求，要求在调用func1的时候输入以下内容，但是不能改变原本的func1的两行代码&quot;&quot;&quot;hello worldin func1hello python&quot;&quot;&quot;# 实现def func2(func): def inner(): print(&quot;hello world&quot;) func() print(&quot;hello python&quot;) return inner # 装饰器的返回值也是一个函数对象func1 = func2(func1) # 将函数本身做为参数传递进去func1() 装饰器形成过程1234567891011121314151617import timedef func1(): print(&#x27;in func1&#x27;)def timer(func): def inner(): start = time.time() func() print(time.time() - start) return innerfunc1 = timer(func1) # 将函数本身做为参数传递进去func1()&quot;&quot;&quot;in func10.0&quot;&quot;&quot; 但是如果要测试多个函数，得func &#x3D; timer(func)。且这些函数的函数名可能是不相同，有func1，func2,graph,等等，所以python提供了更简单的方法那就是语法糖。 12345678910111213141516171819import timedef timer(func): def inner(): start = time.time() func() print(time.time() - start) return inner@timer # 等价于func1 = timer(func1)def func1(): time.sleep(1) print(&#x27;in func1&#x27;) func1()&quot;&quot;&quot;in func11.0012409687042236&quot;&quot;&quot; 装饰一个带参数的函数1234567891011121314151617181920import timedef timer(func): def inner(a): start = time.time() func(a) print(time.time() - start) return inner@timer # 等效于 func1 = timer(func1)def func1(a): time.sleep(1) print(a)func1(&#x27;hello world&#x27;)&quot;&quot;&quot;hello world1.0030105113983154&quot;&quot;&quot; 装饰一个带多种参数的函数12345678910111213141516import timedef timer(func): def inner(*args, **kwargs): start = time.time()# 注意这里需要解包参数——将一个列表（或任何可迭代对象）或字典的元素作为独立的参数传递给一个函数，星号 * 运算符来解包列表或元组，使用两个星号 ** 运算符来解包字典 func(*args, **kwargs) print(time.time() - start) return inner@timer # 等效于 func1 = timer(func1(*args, **kwargs))def func1(*args, **kwargs): time.sleep(1) print(args, kwargs)func1(&#x27;hello world&#x27;, &#x27;abc&#x27;, 123, 432) wraps 装饰器wraps装饰器：确保装饰器不会改变被装饰函数的原始接口查看函数的相关信息，在加上装饰器后就失效了 123456789101112131415161718192021222324252627from functools import wrapsdef deco(func): @wraps(func) def inner(*args,**kwargs): return func(*args,**kwargs) return inner@decodef index(): # 等效于 index = deco(index()) &#x27;&#x27;&#x27;这是一条注释信息&#x27;&#x27;&#x27; print(&#x27;from index&#x27;)print(index.__doc__) # 查看函数注释print(index.__name__) # 查看函数名称# 加 @wraps(func)&quot;&quot;&quot;这是一条注释信息index&quot;&quot;&quot;# 不加 @wraps(func)&quot;&quot;&quot;Noneinner&quot;&quot;&quot; 多个装饰器修饰一个函数12345678910111213141516171819202122232425262728def wrapper1(func): def inner(): print(&#x27;第一个装饰器，在程序运行之前&#x27;) func() print(&#x27;第一个装饰器，在程序运行之后&#x27;) return innerdef wrapper2(func): def inner(): print(&#x27;第二个装饰器，在程序运行之前&#x27;) func() print(&#x27;第二个装饰器，在程序运行之后&#x27;) return inner@wrapper1 # 等效于 f = wrapper1(f)@wrapper2 # 等效于 f = wrapper2(f)def f(): print(&#x27;Hello&#x27;)f()&quot;&quot;&quot;第一个装饰器，在程序运行之前第二个装饰器，在程序运行之前Hello第二个装饰器，在程序运行之后第一个装饰器，在程序运行之后&quot;&quot;&quot; 开放封闭原则 软件实体应该是可扩展但是不可修改的。 对于扩展是开放的 对于修改是封闭的 装饰器完美的遵循了这个开放封闭原则 装饰器的主要功能和固定结构 12345678910111213141516171819def outer(func): def inner(*args,**kwargs): &#x27;&#x27;&#x27;执行函数之前要做的&#x27;&#x27;&#x27; re = func(*args,**kwargs) &#x27;&#x27;&#x27;执行函数之后要做的&#x27;&#x27;&#x27; return re return inner# 下面是加上wraps的固定结构from functools import wrapsdef outer(func): @wraps(func) def inner(*args,**kwargs) &#x27;&#x27;&#x27;执行函数之前要做的&#x27;&#x27;&#x27; re = func(*args,**kwargs) &#x27;&#x27;&#x27;执行函数之后要做的&#x27;&#x27;&#x27; return re return inner 迭代器和生成器迭代器 迭代是访问集合元素的一种方式。迭代器是一个可以记住遍历的位置的对象。迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。迭代器只能往前不会后退。 如何判断一个对象是否可以迭代123456789101112131415161718# 字符串、列表、元组、字典、集合都可以被for循环，说明他们都是可迭代的from collections.abc import Iterablestr = &quot;abc&quot;l = [1, 2, 3, 4] # 列表t = (1, 2, 3, 4) # 元组d = &#123;1: 2, 3: 4&#125; # 字典s = &#123;1, 2, 3, 4&#125; # 集合print(isinstance(str, Iterable),end=&quot; &quot;)print(isinstance(l, Iterable),end=&quot; &quot;)print(isinstance(t, Iterable),end=&quot; &quot;)print(isinstance(d, Iterable),end=&quot; &quot;)print(isinstance(s, Iterable),end=&quot; &quot;)&quot;&quot;&quot;True True True True True&quot;&quot;&quot; 可迭代对象的本质 可迭代对象：一个拥有 _iter_() 方法的对象该方法： 必须返回一个迭代器对象。 迭代器对象必须实现 _iter_() 方法，该方法在每次调用时返回序列中的下一个元素。 __iter__函数与__next__函数迭代器遵循迭代器协议：必须拥有iter方法和next方法。 list、tuple等都是可迭代对象，我们可以通过iter()函数获取这些可迭代对象的迭代器。然后我们可以对获取到的迭代器不断使用next()函数来获取下一条数据。iter()函数实际上就是调用了可迭代对象的__iter__方法。 123456789101112131415161718l = [1, 2, 3, 4]l_iter = l.__iter__()item = l_iter.__next__()print(item)item = l_iter.__next__()print(item)item = l_iter.__next__()print(item)item = l_iter.__next__()print(item)&quot;&quot;&quot;1234&quot;&quot;&quot; 可迭代对象与迭代器的区别 可迭代对象：是一个可以返回迭代器的对象。它本身不一定能够迭代，但它知道如何生成一个能够迭代其内容的迭代器。 迭代器：是一个可以迭代对象，它实现了 _next_() 方法，并在每次调用时返回序列中的下一个元素。 如何判断一个对象是否是迭代器可以使用 isinstance() 判断一个对象是否是 Iterator 对象： 123456789from collections.abc import Iteratorprint(isinstance([], Iterator),end=&quot; &quot;)print(isinstance(iter([]), Iterator),end=&quot; &quot;)print(isinstance(iter(&quot;abc&quot;), Iterator),end=&quot; &quot;)&quot;&quot;&quot;False True True&quot;&quot;&quot; for循环for循环就是基于迭代器协议提供了一个统一的可以遍历所有对象的方法，即在遍历之前，先调用对象的__iter__方法将其转换成一个迭代器，然后使用迭代器协议去实现循环访问，这样所有的对象就都可以通过for循环来遍历了 最重要的一点，转化成迭代器，在循环时，同一时刻在内存中只出现一条数据，极大限度的节省了内存 for item in Iterable 循环的本质就是先通过 iter() 函数获取可迭代对象Iterable的迭代器，然后对获取到的迭代器不断调用 next() 方法来获取下一个值并将其赋值给item，当遇到StopIteration的异常后循环结束。 生成器简述Python中提供的生成器 生成器函数：常规函数定义，但是，使用yield语句而不是return语句返回结果。yield语句一次返回一个结果，在每个结果中间，挂起函数的状态，以便下次从它离开的地方继续执行 生成器表达式：类似于列表推导，但是，生成器返回按需产生结果的一个对象，而不是一次构建一个结果列表 生成器Generator 本质：迭代器(所以自带了__iter__方法和__next__方法，不需要我们去实现) 特点：惰性运算,开发者自定义 生成器函数一个包含yield关键字的函数就是一个生成器函数。yield 可以为我们从函数中返回值，但是yield又不同于return，return的执行意味着程序的结束，调用生成器函数不会得到返回的具体的值，而是得到一个可迭代的对象。每一次获取这个可迭代对象的值，就能推动函数的执行，获取新的返回值。直到函数执行结束。 123456789101112131415161718192021def genrator_func1(): a = 1 print(&#x27;将a赋值&#x27;) yield a b = 2 print(&#x27;将b赋值&#x27;) yield bg1 = genrator_func1()print(g1,next(g1))print()print(next(g1))&quot;&quot;&quot;将a赋值&lt;generator object genrator_func1 at 0x0000000000EF8110&gt; 1将b赋值2&quot;&quot;&quot; 案例1234567891011121314151617181920212223def produce(): # 生产包子 for i in range(1,100): yield f&#x27;生产了第&#123;i&#125;个包子&#x27;produce_g = produce()print(produce_g.__next__())print(&quot;===============&quot;)# 来顾客了，需要一批包子num = 0for i in produce_g: print(i) num += 1 if num == 2: break &quot;&quot;&quot;生产了第1个包子===============生产了第2个包子生产了第3个包子&quot;&quot;&quot; 总结 使用了yield关键字的函数不再是函数，而是生成器。（使用了yield的函数就是生成器） yield关键字有两点作用： 保存当前运行状态（断点），然后暂停执行，即将生成器（函数）挂起 将yield关键字后面表达式的值作为返回值返回，此时可以理解为起到了return的作用 可以使用next()函数让生成器从断点处继续执行，即唤醒生成器（函数） send()send() 获取下一个值的效果和next基本一致，只是在获取下一个值的时候，给上一yield的位置传递一个数据 注意事项： 第一次使用生成器的时候，是用next获取下一个值 最后一个yield不能接受外部的值 可以断点看每步调用的结果 123456789101112131415161718192021def generator(): print(123) content = yield 1 print(&#x27;欢迎来到&#x27;,content) print(456) yield 2g = generator() # 调用生成器函数不会得到返回的具体的值，而是得到一个可迭代的对象ret = g.__next__() # 第一次使用生成器的时候 是用next获取下一个值 (1)print(&#x27;***&#x27;,ret) # (2)ret = g.send(&#x27;英格科技&#x27;) # (3) 将 &#x27;英格科技&#x27; 传给上一个yield的位置 1print(&#x27;***&#x27;,ret) # (4)&quot;&quot;&quot;123 # (1)*** 1 # (2)欢迎来到 英格科技 # (3)456 # (3)*** 2 # (4)&quot;&quot;&quot; 推导式列表表达式和生成器表达式1234567891011121314l = [i for i in range(10)]print(l)l1 = [&#x27;项目%s&#x27;%i for i in range(10)]print(l1)ret = sum(x for x in range(101))print(ret)&quot;&quot;&quot;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9][&#x27;项目0&#x27;, &#x27;项目1&#x27;, &#x27;项目2&#x27;, &#x27;项目3&#x27;, &#x27;项目4&#x27;, &#x27;项目5&#x27;, &#x27;项目6&#x27;, &#x27;项目7&#x27;, &#x27;项目8&#x27;, &#x27;项目9&#x27;]5050&quot;&quot;&quot; 把列表解析的[]换成()得到的就是生成器表达式 列表解析与生成器表达式都是一种便利的编程方式，只不过生成器表达式更节省内存 Python不但使用迭代器协议，让for循环变得更加通用。大部分内置函数，也是使用迭代器协议访问对象的。例如， sum函数是Python的内置函数，该函数使用迭代器协议访问对象，而生成器实现了迭代器协议，所以，我们可以直接这样计算一系列值的和 推导式详细格式把原本应该独立完成或者是通过函数封装的功能，写入到一个列表或者字典中进行推导。 12345678格式：variable = [out_exp_res for out_exp in input_list if out_exp == 2]注释： variable：变量名 out_exp_res：列表生成元素表达式，可以是有返回值的函数。 for out_exp in input_list：迭代input_list将out_exp传入out_exp_res表达式中。 if out_exp == 2：根据条件过滤哪些值可以。 列表推导式30及以内能被3整除的正整数 123456multipes = [i for i in range(31) if i % 3 == 0]print(multipes)&quot;&quot;&quot;[0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30]&quot;&quot;&quot; 30以内所有能被3整除的数的平方 123456789def squared(x): return x ** 2multiples = [squared(i) for i in range(31) if i % 3 == 0]print(multiples)&quot;&quot;&quot;[0, 9, 36, 81, 144, 225, 324, 441, 576, 729, 900]&quot;&quot;&quot; 找到嵌套列表中名字含有两个及以上‘a’的所有名字 123456789101112131415fruits = [[&#x27;peach&#x27;,&#x27;Lemon&#x27;,&#x27;Pear&#x27;,&#x27;avocado&#x27;,&#x27;cantaloupe&#x27;,&#x27;Banana&#x27;,&#x27;Grape&#x27;], [&#x27;raisins&#x27;,&#x27;plum&#x27;,&#x27;apricot&#x27;,&#x27;nectarine&#x27;,&#x27;orange&#x27;,&#x27;papaya&#x27;]]print([name for lst in fruits for name in lst if name.count(&#x27;a&#x27;) &gt;= 2])# 拆开for lst in fruits: for name in lst: if name.count(&#x27;a&#x27;) &gt;= 2: print(name,end=&quot; &quot;) &quot;&quot;&quot;[&#x27;avocado&#x27;, &#x27;cantaloupe&#x27;, &#x27;Banana&#x27;, &#x27;papaya&#x27;]avocado cantaloupe Banana papaya&quot;&quot;&quot; 字典推导式将一个字典的key和value对调 12345678dic1 = &#123;&#x27;a&#x27;:1,&#x27;b&#x27;:2&#125;dic2 = &#123;dic1[k]: k for k in dic1&#125;print(dic2)&quot;&quot;&quot;&#123;1: &#x27;a&#x27;, 2: &#x27;b&#x27;&#125;&quot;&quot;&quot; 合并大小写对应的value值，将k统一成小写 12345678dic1 = &#123;&#x27;a&#x27;:1,&#x27;b&#x27;:2,&#x27;y&#x27;:1, &#x27;A&#x27;:4,&#x27;Y&#x27;:9&#125;dic2 = &#123;k.lower():dic1.get(k.lower(),0) + dic1.get(k.upper(),0) for k in dic1.keys()&#125; # 大小写字母对应的值相加print(dic2)&quot;&quot;&quot;&#123;&#x27;a&#x27;: 5, &#x27;b&#x27;: 2, &#x27;y&#x27;: 10&#125;&quot;&quot;&quot; 集合推导式计算列表中每个值的平方，自带去重功能 12345678l = [1,2,3,4,1,-1,-2,3]squared = &#123;x**2 for x in l&#125;print(squared)&quot;&quot;&quot;&#123;16, 1, 4, 9&#125;&quot;&quot;&quot; 案例过滤掉长度小于3的字符串列表，并将剩下的转换成大写字母 12345678910# 过滤掉长度小于3的字符串列表，并将剩下的转换成大写字母list1 = [&quot;eagle&quot;, &quot;cisco&quot;, &quot;huawei&quot;, &quot;huasan&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;]# l = [str for str in list1 str.upper() if str.__len__() &lt; 3]print([i.upper() for i in list1 if len(i) &gt;=3])&quot;&quot;&quot;[&#x27;EAGLE&#x27;, &#x27;CISCO&#x27;, &#x27;HUAWEI&#x27;, &#x27;HUASAN&#x27;]&quot;&quot;&quot; 求(x,y)其中x是0-5之间的偶数，y是0-5之间的奇数组成的元祖列表 12345print([(x,y) for x in range(6) for y in range(6) if x % 2 == 0 if y % 2 == 1])&quot;&quot;&quot;[(0, 1), (0, 3), (0, 5), (2, 1), (2, 3), (2, 5), (4, 1), (4, 3), (4, 5)]&quot;&quot;&quot; 打印九九乘法表 12345678# 案例 一行代码打印 9*9 乘法表print(&#x27;\\n&#x27;.join([&#x27;\\t&#x27;.join([f&#x27;&#123;i&#125;x&#123;j&#125;=&#123;i * j&#125;&#x27; for i in range(1,j+1)]) for j in range(1, 10)]))# 拆解：从后往前 依次嵌套for i in range(1, 10): for j in range(1, i + 1): print(f&#x27;&#123;i&#125;x&#123;j&#125;=&#123;i * j&#125;&#x27;,end=&quot;\\t&quot;) print() Web 框架——Flask特点： 微框架、简洁、只做他需要做的，给开发者提供了很大的扩展性。 Flask和相应的插件写得很好，用起来很爽。 开发效率非常高，比如使用SQLAlchemy的ORM操作数据库可以节省开发者大量书写sql的时间。 Flask的灵活度非常之高，他不会帮你做太多的决策，一些你都可以按照自己的意愿进行更改。比如： 使用Flask开发数据库的时候，具体是使用SQLAlchemy还是MongoEngine，选择权完全掌握在你自己的手中。区别于Django，Django内置了非常完善和丰富的功能，并且如果你想替换成你自己想要的，要么不支持，要么非常麻烦。 把默认的Jinija2模板引擎替换成其他模板引擎都是非常容易的。 安装 FlaskPython控制台输入如下命令 pip install flask&#x3D;&#x3D;2.0.3 使用 Flask 框架编写简单Python Web应用程序123456789from flask import Flaskapp = Flask(__name__)@app.route(&#x27;/&#x27;)def hello(): return &quot;Hello World!&quot;app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5000) 注释： from flask import Flask：这行代码从Flask库中导入Flask类。Flask是一个轻量级的Web应用框架，用于快速开发Web应用程序。 app &#x3D; Flask(name)：创建一个Flask应用实例。__name__是一个特殊的变量，它表示当前Python模块的名称。在这里，它被用作Flask应用的主模块或包名。 @app.route(‘&#x2F;‘)：这是一个装饰器，用于将URL路由（在本例中是网站的根目录&#x2F;）绑定到下面的函数hello。 def hello():：定义一个名为hello的函数，它将在用户访问网站根目录时被调用。 return “Hello World!”：hello函数返回一个字符串”Hello World!”。当用户访问网站根目录时，这个字符串将显示在浏览器中。 app.run(debug&#x3D;True, host&#x3D;’0.0.0.0’, port&#x3D;5000)：启动Flask应用。以下是参数的说明： debug&#x3D;True：开启调试模式，这样在代码修改后，服务器会自动重新加载，并且在出现错误时提供调试信息。 host&#x3D;’0.0.0.0’：指定服务器监听的IP地址。0.0.0.0表示监听所有可用的网络接口，这样其他计算机也可以访问这个服务器。 port&#x3D;5000：指定服务器监听的端口号，本例中为5000。 URL 与 视图URL 与 函数映射 一个URL要与执行函数进行映射，使用的是@app.route装饰器。@app.route装饰器中，可以指定URL的规则来进行更加详细的映射， 1234567891011121314151617from flask import Flaskapp = Flask(__name__)@app.route(&#x27;/&#x27;)def hello(): return &quot;Hello World!&quot;@app.route(&#x27;/test1/&lt;id&gt;&#x27;) # 传参def test(id): return f&quot;&lt;h1&gt;hello &#123;id&#125;!&lt;/h1&gt;&quot;@app.route(&#x27;/test2/&lt;int:id&gt;&#x27;) # 指定参数的数据类型def test(id): return f&quot;&lt;h1&gt;hello &#123;str(id)&#125;!&lt;/h1&gt;&quot; # 整数拼接会报错，先转换成字符串app.run(debug=True, host=&#x27;0.0.0.0&#x27;, port=5000) 其中，尖括号是固定写法，语法为，variable默认的数据类型是字符串。如果需要指定类型，则要写成converter:variable，其中converter就是类型名称，可以有以下几种： string: 默认的数据类型，接受没有任何斜杠&#x2F;的字符串。 int: 整形 float: 浮点型。 path： 和string类似，但是可以传递斜杠&#x2F;。 uuid： uuid类型的字符串。 any：可以指定多种路径 注：如果指定类型为int，如果传入一个不是int类型的，就无法触发这个路由，就会返回404 any 类型 1234@app.route(&#x27;/user/&lt;any(article,blog):url_path&gt;&#x27;)# 在/user/后面只能是article和blog二选一，并且会被传递到url_path变量def url_path(url_path): return f&quot;你输入的是&#123;url_path&#125;,此处只能是article或者blog&quot; 构造 URL url_for 函数：Flask中的一个非常实用的函数，它用于根据视图函数的名称生成URL 基本用法 url_for(endpoint,**values) endpoint：视图函数的名称。 **values：关键字参数，对应于URL中的动态部分。 用途 当你需要在一个模板中创建指向其他页面的链接时。 当你的应用程序的路由规则发生变化时，使用 url_for 可以确保链接仍然有效，因为函数名不会改变。 优点 灵活性：即使你改变了路由规则，只要视图函数的名称保持不变，使用url_for生成的URL仍然是有效的。 安全性：url_for会自动转义URL参数，这有助于防止跨站脚本攻击（XSS）。 易于维护：在大型应用程序中，使用url_for意味着你不需要记住所有的URL结构，只需要记住视图函数的名称。 案例 1234567891011121314151617from flask import Flask, url_forapp = Flask(__name__)@app.route(&#x27;/&#x27;)def index(): # 生成指向profile视图的URL profile_url = url_for(&#x27;profile&#x27;, username=&#x27;alice&#x27;) return f&#x27;Go to profile: &lt;a href=&quot;&#123;profile_url&#125;&quot;&gt;&#123;profile_url&#125;&lt;/a&gt;&#x27;@app.route(&#x27;/user/&lt;username&gt;/&#x27;)def profile(username): return f&#x27;Hello, &#123;username&#125;!&#x27;if __name__ == &#x27;__main__&#x27;: app.run(debug=True) 当你访问主页（&#x2F;）时，你会看到一个链接，指向用户Alice的配置文件页面。即使你改变了profile路由的URL结构，主页上的链接仍然会工作，因为它是使用 url_for 生成的。 指定URL末尾的斜杠当访问一个结尾不带斜线的URL：&#x2F;article，会被重定向到带斜线的URL：&#x2F;article&#x2F;上去。但是当我们在定义article的url的时候，如果在末尾没有加上斜杠，但是在访问的时候又加上了斜杠，这时候就会抛出一个404错误页面了。 123@app.route(&#x27;/test&#x27;)def haha(): return &#x27;你好&#x27; 所以还是 URL 末尾还是加上斜杠 &#x2F; 比较好 指定HTTP方法在@app.route()中可以传入一个关键字参数 methods 来指定本方法支持的HTTP方法，默认情况下，只能使用GET请求，如果使用post提交就会触发错误 “Method Not Allowed”。 页面跳转和重定向重定向分为永久性重定向和暂时性重定向，在页面上体现的操作就是浏览器会从一个页面自动跳转到另外一个页面。比如用户访问了一个需要权限的页面，但是该用户当前并没有登录，因此我们应该给他重定向到登录页面。 永久性重定向：http的状态码是301，多用于旧网址被废弃了要转到一个新的网址确保用户的访问，最经典的就是京东网站，你输入 www.jingdong.com的时候，会被重定向到 www.jd.com，因为jingdong.com这个网址已经被废弃了，被改成 jd.com，所以这种情况下应该用永久重定向。 暂时性重定向：http的状态码是302，表示页面的暂时性跳转。比如访问一个需要权限的网址，如果当前用户没有登录，应该重定向到登录页面，这种情况下，应该用暂时性重定向。 在flask中，重定向是通过 flask.redirect(location,code&#x3D;302) 这个函数来实现的，location表示需要重定向到的URL，应该配合之前讲的url_for()函数来使用，code表示采用哪个重定向，默认是302也即暂时性重定向，可以修改成301来实现永久性重定向。 案例 123456789101112131415161718192021222324252627from flask import Flask, request, session, redirect, url_forapp = Flask(__name__)app.secret_key = &#x27;啦啦啦，我是买糕的小行家&#x27;# 使用session的话，需要配置一个secret_key，内容随意，最好别人想不到@app.route(&#x27;/login/&#x27;,methods=[&#x27;POST&#x27;,&#x27;GET&#x27;])def login(): if &#x27;username&#x27; not in request.form and &#x27;password&#x27; not in request.form: # 如果没有携带用户名和密码，就显示请登陆 return &quot;请登陆&quot; username = request.form[&#x27;username&#x27;] password = request.form[&#x27;password&#x27;] if username == &#x27;admin&#x27; and password == &#x27;123456&#x27;: session[&#x27;username&#x27;] = &#x27;admin&#x27; # 登陆成功之后，服务器存储session值 return &#x27;Logged in successfully&#x27; else: return &#x27;Invalid username or password&#x27;@app.route(&quot;/profile/&quot;,methods=[&#x27;GET&#x27;])def profile(): if &#x27;username&#x27; in session: return f&quot;欢迎用户&#123;session[&#x27;username&#x27;]&#125;&quot; # 如果已经登陆，就欢迎 else: return redirect(url_for(&#x27;login&#x27;)) # 如果cookie中没有合法的session值，就重定向去登陆 Jinja2hexo渲染有问题 不传了 补充if __name__ &#x3D;&#x3D; “__main__”if __name__ &#x3D;&#x3D; “__main__”: 这行代码在Python脚本中非常常见，它的作用是判断当前执行的脚本是否是作为主程序运行的。 具体来说，Python中的每个模块（即 .py 文件）都拥有一个内置的变量 __name__，当模块被直接运行时，__name__ 的值会设置为 “__main__”；如果模块是被导入到其他模块中时，__name__ 的值会设置为模块的名字。 以下是一些详细说明： 作为主程序运行： 当你直接运行一个Python脚本时，比如通过命令行 python script.py，这个脚本的 __name__ 变量会被设置为 “__main__”。此时，if __name__ &#x3D;&#x3D; “__main__”: 下面的代码块将会被执行。 作为模块导入： 如果另一个Python脚本通过 import script 导入了这个脚本，__name__ 不会被设置为 “__main__”，而是会被设置为 “script”（假设文件名为 script.py）。在这种情况下，if __name__ &#x3D;&#x3D; “__main__”: 下面的代码块不会被执行。 这个特性通常用于以下几种情况： 允许脚本同时作为可执行程序和模块使用： 你可以在脚本中定义函数和类，然后在 if __name__ &#x3D;&#x3D; “__main__”: 代码块中调用这些函数和类进行测试或作为程序的主入口。 避免执行模块导入时的代码： 有时候你不想在模块被导入时执行某些代码，而是只在这些代码作为主程序运行时执行。 组织代码结构： 通过这种方式，你可以更清晰地分离代码的逻辑部分，使得代码更加模块化和易于维护。 单双引号 在Python中，单引号(‘)和双引号(“)都可以用来定义字符串。它们之间几乎没有区别，大多数情况下可以根据个人偏好来选择使用。在某些情况下，Python语法规则可能要求使用一种引号而不是另一种。例如， 在定义包含变量或表达式的字符串时，通常使用双引号来定义格式化字符（f-string）：name &#x3D; “Alice”f”Hello, {name}!” 双引号内只能为单引号 type(input()) &lt;class ‘str’&gt; 参考 英格 许文哲老师","content":"<h2 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h2><h3 id=\"一、注释\"><a href=\"#一、注释\" class=\"headerlink\" title=\"一、注释\"></a>一、注释</h3><p>单行注释：# 被注释内容<br>多行注释：’’’ 被注释内容 ‘’’，或者 “”” 被注释内容 “””<br>范围快捷注释：<strong>Ctrl + &#x2F;</strong></p>\n<h3 id=\"二、格式化输出\"><a href=\"#二、格式化输出\" class=\"headerlink\" title=\"二、格式化输出\"></a>二、格式化输出</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;姓名：&quot;</span>)</span><br><span class=\"line\">age = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;年龄：&quot;</span>)</span><br><span class=\"line\">job = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;工作：&quot;</span>)</span><br><span class=\"line\">info = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">----------- info of %s -----------</span></span><br><span class=\"line\"><span class=\"string\">姓名：%s</span></span><br><span class=\"line\"><span class=\"string\">年龄：%s</span></span><br><span class=\"line\"><span class=\"string\">工作：%s</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span> % (name,name,age,job)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(info)</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名：Aaron</span><br><span class=\"line\">年龄：<span class=\"number\">18</span></span><br><span class=\"line\">工作：Teacher</span><br><span class=\"line\">----------- info of Aaron -----------</span><br><span class=\"line\">姓名：Aaron</span><br><span class=\"line\">年龄：<span class=\"number\">18</span></span><br><span class=\"line\">工作：Teacher</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>占位符：</p>\n<ul>\n<li>s，获取传入对象的str方法的返回值，并将其格式化到指定位置</li>\n<li>d，将整数、浮点数转换成 十 进制表示，并将其格式化到指定位置</li>\n<li>r，获取传入对象的repr方法的返回值，并将其格式化到指定位置</li>\n<li>o，将整数转换成 八 进制表示，并将其格式化到指定位置</li>\n<li>x，将整数转换成十六进制表示，并将其格式化到指定位置</li>\n<li>e，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（小写e）</li>\n<li>E，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（大写E）</li>\n<li>f， 将整数、浮点数转换成浮点数表示，并将其格式化到指定位置（默认保留小数点后6位）</li>\n<li>F，同上</li>\n<li>g，自动调整将整数、浮点数转换成 浮点型或科学计数法表示（超过6位数用科学计数法），并将其格式化到指定位置（如果是科学计数则是e；）</li>\n<li>G，自动调整将整数、浮点数转换成 浮点型或科学计数法表示（超过6位数用科学计数法），并将其格式化到指定位置（如果是科学计数则是E；）</li>\n<li>%，当字符串中存在格式化标志时，需要用 %%表示一个百分号</li>\n</ul>\n<h3 id=\"三、基础数据类型\"><a href=\"#三、基础数据类型\" class=\"headerlink\" title=\"三、基础数据类型\"></a>三、基础数据类型</h3><h4 id=\"（1）整数型-int\"><a href=\"#（1）整数型-int\" class=\"headerlink\" title=\"（1）整数型(int)\"></a>（1）整数型(int)</h4><ul>\n<li>整数<ul>\n<li>在 32 位机器上，整数的位数为 32 位，取值范围为 -2**31～2**31-1，即 -2147483648～2147483647</li>\n<li>在 64 位系统上，整数的位数为 64 位，取值范围为 -2**63～2**63-1，即 -9223372036854775808～9223372036854775807</li>\n</ul>\n</li>\n<li>小数可能有误差</li>\n</ul>\n<h4 id=\"（2）布尔型-bool\"><a href=\"#（2）布尔型-bool\" class=\"headerlink\" title=\"（2）布尔型(bool)\"></a>（2）布尔型(bool)</h4><p>False：0, “” ,[], () {}<br>True：</p>\n<h4 id=\"（3）字符串-str\"><a href=\"#（3）字符串-str\" class=\"headerlink\" title=\"（3）字符串(str)\"></a>（3）字符串(str)</h4><ul>\n<li>加了引号的字符都被认为是字符串</li>\n<li>python””和’’的区别<blockquote>\n<p>在Python中，单引号(‘)和双引号(“)都可以用来定义字符串。它们之间几乎没有区别，大多数情况下可以根据个人偏好来选择使用。<br>在某些情况下，Python语法规则可能要求使用一种引号而不是另一种。例如，</p>\n<ol>\n<li>在定义<strong>包含变量或表达式的字符串</strong>时，通常使用<strong>双引号</strong>来定义格式化字符（f-string）：<br>name &#x3D; “Alice”<br>f”Hello, {name}!”</li>\n<li>双引号内只能为单引号</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<p>字符串拼接：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;a &#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;welcome &#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b + a,<span class=\"string\">&#x27;*&#x27;</span> * <span class=\"number\">3</span>,a * <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">welcome a  *** a a a</span><br></pre></td></tr></table></figure>\n\n<p>字符串索引[0, size-1]、切片</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;ABCDE&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">0</span>], a[-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;ABCDEFGHIJK&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">0</span>:<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">0</span>:]) <span class=\"comment\">#默认到最后</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">0</span>:-<span class=\"number\">1</span>]) <span class=\"comment\"># -1 是列表中最后一个元素的索引，但是要满足[左闭右开)的原则，所以取不到K元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">0</span>:<span class=\"number\">5</span>:<span class=\"number\">2</span>]) <span class=\"comment\">#加步长</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">5</span>:<span class=\"number\">0</span>:-<span class=\"number\">2</span>]) <span class=\"comment\">#反向加步长</span></span><br></pre></td></tr></table></figure>\n\n<p>运行结果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A E</span><br><span class=\"line\">ABC</span><br><span class=\"line\">ABCDEFGHIJK</span><br><span class=\"line\">ABCDEFGHIJ</span><br><span class=\"line\">ACE</span><br><span class=\"line\">FDB</span><br></pre></td></tr></table></figure>\n\n<p>字符串常用方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">words = <span class=\"string\">&quot;I am a string&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.capitalize())   <span class=\"comment\">#首字母大写 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.swapcase())     <span class=\"comment\">#大小写翻转 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.title())        <span class=\"comment\">#每个单词的首字母大写 </span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">I am a string</span></span><br><span class=\"line\"><span class=\"string\">i AM A STRING</span></span><br><span class=\"line\"><span class=\"string\">I Am A String</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 内容居中，总长度，空白处填充</span></span><br><span class=\"line\">a = <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\">ret = a.center(<span class=\"number\">20</span>,<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ret)</span><br><span class=\"line\"><span class=\"comment\"># ********test********</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计字符串中的元素出现的个数</span></span><br><span class=\"line\">words = <span class=\"string\">&quot;I am a string&quot;</span></span><br><span class=\"line\">ret = words.count(<span class=\"string\">&quot;a&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">30</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ret)</span><br><span class=\"line\"><span class=\"comment\"># 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># startswith 判断是否以...开头</span></span><br><span class=\"line\"><span class=\"comment\"># endswith 判断是否以...结尾</span></span><br><span class=\"line\">a = <span class=\"string\">&quot;aisdjioadoiqwd12313assdj&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.startswith(<span class=\"string\">&quot;a&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.endswith(<span class=\"string\">&quot;j&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.startswith(<span class=\"string\">&#x27;sdj&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.endswith(<span class=\"string\">&#x27;ado&#x27;</span>,<span class=\"number\">7</span>,<span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寻找字符串中的元素是否存在</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.find(<span class=\"string\">&#x27;sdj&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>))   <span class=\"comment\"># 返回的找到的元素的索引，如果找不到返回-1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.index(<span class=\"string\">&#x27;sdj&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>))  <span class=\"comment\"># 返回的找到的元素的索引，找不到报错。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># split 以什么分割，最终形成一个列表。此列表不含有这个分割的元素。</span></span><br><span class=\"line\">ret = words.split(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ret)</span><br><span class=\"line\">ret = words.rsplit(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"number\">2</span>) <span class=\"comment\"># 加数字指定分割次数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(ret)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">[<span class=\"string\">&#x27;I&#x27;</span>, <span class=\"string\">&#x27;am&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;string&#x27;</span>]</span><br><span class=\"line\">[<span class=\"string\">&#x27;I am&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;string&#x27;</span>]</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># format的三种玩法 格式化输出</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; &#123;&#125; &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;aaron&#x27;</span>,<span class=\"number\">18</span>,<span class=\"string\">&#x27;teacher&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;1&#125; &#123;0&#125; &#123;1&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;aaron&#x27;</span>,<span class=\"number\">18</span>,<span class=\"string\">&#x27;teacher&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;name&#125; &#123;age&#125; &#123;job&#125;&#x27;</span>.<span class=\"built_in\">format</span>(job=<span class=\"string\">&#x27;teacher&#x27;</span>,name=<span class=\"string\">&#x27;aaron&#x27;</span>,age=<span class=\"number\">18</span>))</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">aaron 18 teacher</span></span><br><span class=\"line\"><span class=\"string\">18 aaron 18</span></span><br><span class=\"line\"><span class=\"string\">aaron 18 teacher</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># strip</span></span><br><span class=\"line\"><span class=\"comment\">## 移除字符串两端的空格</span></span><br><span class=\"line\">string = <span class=\"string\">&quot;   Hello, World!   &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(string.strip())  <span class=\"comment\"># 输出 &#x27;Hello, World!&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">## 移除字符串两端的指定字符</span></span><br><span class=\"line\">string = <span class=\"string\">&quot;***SPAM***&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(string.strip(<span class=\"string\">&#x27;*&#x27;</span>))  <span class=\"comment\"># 输出 &#x27;SPAM&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">## 移除字符串左端的指定字符</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(string.lstrip(<span class=\"string\">&#x27;*&#x27;</span>))  <span class=\"comment\"># 输出 &#x27;SPAM***&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">## 移除字符串右端的指定字符</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(string.rstrip(<span class=\"string\">&#x27;*&#x27;</span>))  <span class=\"comment\"># 输出 &#x27;***SPAM&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">## 如果chars参数为空或None，则默认移除空白字符</span></span><br><span class=\"line\">string = <span class=\"string\">&quot; \\n\\tHello, World!\\n\\t &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(string.strip())  <span class=\"comment\"># 输出 &#x27;Hello, World!&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">## 如果字符串中没有要移除的字符，则返回原字符串</span></span><br><span class=\"line\">string = <span class=\"string\">&quot;Hello, World!&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(string.strip(<span class=\"string\">&#x27;!&#x27;</span>))  <span class=\"comment\"># 输出 &#x27;Hello, World!&#x27;，因为字符串两端没有&#x27;!&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># replace</span></span><br><span class=\"line\">words = <span class=\"string\">&quot;beautiful is better than ugly.&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.replace(<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">2</span>)) <span class=\"comment\"># 字符串从左向右开始，把e替换成a，一共替换两次</span></span><br><span class=\"line\"><span class=\"comment\"># 判断只由什么组成</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.isalnum()) <span class=\"comment\">#字符串由字母或数字组成</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.isalpha()) <span class=\"comment\">#字符串只由字母组成</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(words.isdigit()) <span class=\"comment\">#字符串只由数字组成</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">I am a string</span></span><br><span class=\"line\"><span class=\"string\">False</span></span><br><span class=\"line\"><span class=\"string\">False</span></span><br><span class=\"line\"><span class=\"string\">False</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、基础运算符\"><a href=\"#四、基础运算符\" class=\"headerlink\" title=\"四、基础运算符\"></a>四、基础运算符</h3><h4 id=\"（1）算数运算\"><a href=\"#（1）算数运算\" class=\"headerlink\" title=\"（1）算数运算\"></a>（1）算数运算</h4><p>&#x2F;：相除<br>&#x2F;&#x2F;：取整<br>**：幂次方</p>\n<h4 id=\"（2）赋值运算\"><a href=\"#（2）赋值运算\" class=\"headerlink\" title=\"（2）赋值运算\"></a>（2）赋值运算</h4><p>无自增++ 自减– </p>\n<h4 id=\"（3）逻辑运算\"><a href=\"#（3）逻辑运算\" class=\"headerlink\" title=\"（3）逻辑运算\"></a>（3）逻辑运算</h4><p>&amp;&amp;：and<br>||：or<br>!：not</p>\n<h4 id=\"（4）成员运算\"><a href=\"#（4）成员运算\" class=\"headerlink\" title=\"（4）成员运算\"></a>（4）成员运算</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 程序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a&#x27;</span> <span class=\"keyword\">in</span> <span class=\"string\">&#x27;abcd&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;y&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"string\">&#x27;xyzasd&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行结果</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">False</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、Python-数据类型\"><a href=\"#五、Python-数据类型\" class=\"headerlink\" title=\"五、Python 数据类型\"></a>五、Python 数据类型</h3><h4 id=\"（1）列表-list\"><a href=\"#（1）列表-list\" class=\"headerlink\" title=\"（1）列表 list []\"></a>（1）列表 list []</h4><blockquote>\n<p>可以储存不同的数据类型，而且可以储存大量数据；<br>有序的，有索引值，可切片，方便取值。</p>\n</blockquote>\n<h5 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"number\">3</span>,]</span><br><span class=\"line\">li.insert(<span class=\"number\">0</span>,<span class=\"number\">1</span>)     <span class=\"comment\"># 按照索引去增加</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.append(<span class=\"string\">&#x27;c&#x27;</span>)    <span class=\"comment\"># append() 将一个元素添加到列表的末尾</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.extend([<span class=\"string\">&#x27;q,a,w&#x27;</span>])    <span class=\"comment\"># extend() 将迭代器（如列表、元组、字符串等）中的所有元素依次添加到列表的末尾</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.extend([<span class=\"string\">&#x27;q&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>]) </span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3]</span></span><br><span class=\"line\"><span class=\"string\">[1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">[1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;, &#x27;q,a,w&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">[1, &#x27;a&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;, &#x27;q,a,w&#x27;, &#x27;q&#x27;, &#x27;a&#x27;, &#x27;w&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"number\">3</span>,<span class=\"string\">&#x27;c&#x27;</span>]</span><br><span class=\"line\">a = li.pop(<span class=\"number\">1</span>) <span class=\"comment\"># 按照位置去删除，有返回值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"keyword\">del</span> li[<span class=\"number\">1</span>:<span class=\"number\">3</span>] <span class=\"comment\"># 按照位置去删除，也可切片删除，没有返回值。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.remove(<span class=\"string\">&#x27;c&#x27;</span>) <span class=\"comment\"># 删除指定元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.clear() <span class=\"comment\"># 清空列表</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">a</span></span><br><span class=\"line\"><span class=\"string\">[1, 3, &#x27;c&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">[1, 3]</span></span><br><span class=\"line\"><span class=\"string\">[]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"number\">3</span>,<span class=\"string\">&#x27;c&#x27;</span>]</span><br><span class=\"line\">li[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;aaa&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li[<span class=\"number\">2</span>:<span class=\"number\">4</span>] = [<span class=\"number\">4</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"number\">5</span>,<span class=\"string\">&#x27;e&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span> (li)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[1, &#x27;aaa&#x27;, 2, &#x27;b&#x27;, 3, &#x27;c&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">[1, &#x27;aaa&#x27;, 4, &#x27;d&#x27;, 5, &#x27;e&#x27;, 3, &#x27;c&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"查\"><a href=\"#查\" class=\"headerlink\" title=\"查\"></a>查</h5><p>切片 或 循环</p>\n<h5 id=\"其他操作\"><a href=\"#其他操作\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span> (li.count(<span class=\"number\">4</span>))     <span class=\"comment\"># 统计某个元素在列表中出现的次数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> (li.index(<span class=\"number\">2</span>))     <span class=\"comment\"># 用于从列表中找出某个值第一个匹配项的索引位置</span></span><br><span class=\"line\">li.sort()               <span class=\"comment\"># 用于在原位置对列表进行排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> (li)</span><br><span class=\"line\">li.reverse()            <span class=\"comment\"># 将列表中的元素反向存放</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> (li)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">3</span></span><br><span class=\"line\"><span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"string\">[1, 2, 2, 4, 4, 4, 5]</span></span><br><span class=\"line\"><span class=\"string\">[5, 4, 4, 4, 2, 2, 1]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（2）字典-dict\"><a href=\"#（2）字典-dict\" class=\"headerlink\" title=\"（2）字典 dict {}\"></a>（2）字典 dict {}</h4><blockquote>\n<p>字典是 Python 中唯一的映射类型，采用键值对（key-value）的形式存储数据。python对key进行哈希函数运算，根据计算的结果决定value的存储地址，所以字典是无序存储的，且key必须是可哈希的。可哈希表示key必须是不可变类型，如：数字、字符串、元组。</p>\n<p>从python3.6以后字典就是有顺序的了 按照元素插入的顺序</p>\n</blockquote>\n<h5 id=\"增-1\"><a href=\"#增-1\" class=\"headerlink\" title=\"增\"></a>增</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic = &#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">18</span>, <span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;aj&quot;</span>&#125;</span><br><span class=\"line\">dic[<span class=\"string\">&#x27;li&#x27;</span>] = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic)</span><br><span class=\"line\">dic.setdefault(<span class=\"string\">&#x27;k&#x27;</span>,<span class=\"string\">&#x27;v&#x27;</span>) <span class=\"comment\"># setdefault() 如果指定的键已经存在则不做任何操作,如果原字典中不存在指定的键值对，则会添加。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic)</span><br><span class=\"line\">dic.setdefault(<span class=\"string\">&#x27;k&#x27;</span>,<span class=\"string\">&#x27;v1&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aj&#x27;, &#x27;li&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aj&#x27;, &#x27;li&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], &#x27;k&#x27;: &#x27;v&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aj&#x27;, &#x27;li&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], &#x27;k&#x27;: &#x27;v&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"删-1\"><a href=\"#删-1\" class=\"headerlink\" title=\"删\"></a>删</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic = &#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">18</span>, <span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;aaron&quot;</span>&#125;</span><br><span class=\"line\">dic_pop = dic.pop(<span class=\"string\">&#x27;age&#x27;</span>) <span class=\"comment\"># pop() 根据key删除键值对，并返回对应的值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic_pop)</span><br><span class=\"line\">dic_pop = dic.pop(<span class=\"string\">&#x27;sex&#x27;</span>,<span class=\"string\">&#x27;查无此项&#x27;</span>) <span class=\"comment\"># 如果key不存在 则返回指定值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic_pop)</span><br><span class=\"line\"><span class=\"keyword\">del</span> dic[<span class=\"string\">&#x27;name&#x27;</span>] <span class=\"comment\"># 根据key删除相应的键值对</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic)</span><br><span class=\"line\">dic[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"string\">&#x27;demo&#x27;</span> <span class=\"comment\"># 增</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic)</span><br><span class=\"line\">dic_pop = dic.popitem() <span class=\"comment\"># 默认删除并返回字典中的最后一个插入的键值对，将删除的键值对以 元祖() 的形式返回</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic_pop,dic)</span><br><span class=\"line\">dic_clear = dic.clear() <span class=\"comment\"># 清空字典</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic,dic_clear)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">18</span></span><br><span class=\"line\"><span class=\"string\">查无此项</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;name&#x27;: &#x27;demo&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">(&#x27;name&#x27;, &#x27;demo&#x27;) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#125; None</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"改-1\"><a href=\"#改-1\" class=\"headerlink\" title=\"改\"></a>改</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic = &#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">18</span>, <span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;aaron&quot;</span>, <span class=\"string\">&#x27;sex&#x27;</span>:<span class=\"string\">&#x27;male&#x27;</span>&#125;</span><br><span class=\"line\">dic2 = &#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">30</span>, <span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&#x27;demo&#x27;</span>&#125;</span><br><span class=\"line\">dic2.update(dic) <span class=\"comment\"># 将dic所有的键值对覆盖添加（相同的覆盖，没有的添加）到dic2中</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic2)</span><br><span class=\"line\">dic2[<span class=\"string\">&#x27;age&#x27;</span>] = <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;age&#x27;: 18, &#x27;name&#x27;: &#x27;aaron&#x27;, &#x27;sex&#x27;: &#x27;male&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;age&#x27;: 30, &#x27;name&#x27;: &#x27;aaron&#x27;, &#x27;sex&#x27;: &#x27;male&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"查-1\"><a href=\"#查-1\" class=\"headerlink\" title=\"查\"></a>查</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic = &#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">18</span>, <span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;aaron&quot;</span>, <span class=\"string\">&#x27;sex&#x27;</span>:<span class=\"string\">&#x27;male&#x27;</span>&#125;</span><br><span class=\"line\">value = dic[<span class=\"string\">&#x27;name&#x27;</span>] <span class=\"comment\"># 没有相应Key 会报错</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(value)</span><br><span class=\"line\">value = dic.get(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;查无此项&#x27;</span>) <span class=\"comment\"># 没有相应Key 返回指定值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">aaron</span></span><br><span class=\"line\"><span class=\"string\">查无此项</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"其他操作-1\"><a href=\"#其他操作-1\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic = &#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">18</span>, <span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;aaron&quot;</span>, <span class=\"string\">&#x27;sex&#x27;</span>:<span class=\"string\">&#x27;male&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic.items(): <span class=\"comment\"># 将键和值作为元祖列出</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> dic.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(key,value,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">    <span class=\"comment\"># 只是迭代键</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\">keys = dic.keys()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(keys,<span class=\"built_in\">type</span>(keys))</span><br><span class=\"line\">value = dic.values()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(value,<span class=\"built_in\">type</span>(value))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">(&#x27;age&#x27;, 18) (&#x27;name&#x27;, &#x27;aaron&#x27;) (&#x27;sex&#x27;, &#x27;male&#x27;) </span></span><br><span class=\"line\"><span class=\"string\">age 18 name aaron sex male </span></span><br><span class=\"line\"><span class=\"string\">age name sex </span></span><br><span class=\"line\"><span class=\"string\">dict_keys([&#x27;age&#x27;, &#x27;name&#x27;, &#x27;sex&#x27;]) &lt;class &#x27;dict_keys&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"string\">dict_values([18, &#x27;aaron&#x27;, &#x27;male&#x27;]) &lt;class &#x27;dict_values&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（3）元组-tuple\"><a href=\"#（3）元组-tuple\" class=\"headerlink\" title=\"（3）元组 tuple ()\"></a>（3）元组 tuple ()</h4><blockquote>\n<p>元组被称为只读列表，即数据可以被查询，但不能被修改。<br>tuple其实不可变的是地址空间，如果地址空间里存的是可变的数据类型的话，比如列表就是可变的</p>\n</blockquote>\n<h5 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tuple</span> = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">tuple</span>)</span><br><span class=\"line\"><span class=\"built_in\">tuple</span>[<span class=\"number\">3</span>][<span class=\"number\">2</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">tuple</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">(1, 2, 3, [1, 4, 7])</span></span><br><span class=\"line\"><span class=\"string\">(1, 2, 3, [1, 4, 100])</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（4）集合-set\"><a href=\"#（4）集合-set\" class=\"headerlink\" title=\"（4）集合 set {}\"></a>（4）集合 set {}</h4><blockquote>\n<p>集合是无序的，不重复，确定性的数据集合，它里面的元素是可哈希的(不可变类型)，但是集合本身是不可哈希（所以集合做不了字典的键）的。</p>\n</blockquote>\n<p>以下是集合最重要的两点：</p>\n<ul>\n<li>去重，把一个列表变成集合，就自动去重了。</li>\n<li>关系测试，测试两组数据之前的交集、差集、并集等关系。</li>\n</ul>\n<h5 id=\"创建集合\"><a href=\"#创建集合\" class=\"headerlink\" title=\"创建集合\"></a>创建集合</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = <span class=\"built_in\">set</span>([<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;barry&#x27;</span>])</span><br><span class=\"line\">set2 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;barry&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1,set2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;barry&#x27;, 2&#125; &#123;&#x27;barry&#x27;, 1, 2&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"增-2\"><a href=\"#增-2\" class=\"headerlink\" title=\"增\"></a>增</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;def&#x27;</span>,<span class=\"number\">123</span>,<span class=\"string\">&#x27;asdas&#x27;</span>&#125;</span><br><span class=\"line\">set1.add(<span class=\"string\">&#x27;qwer&#x27;</span>) <span class=\"comment\"># add()函数的参数只能接收 可哈希数据类型，即不可变数据类型，比如整型、浮点型、元组、字符串</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\"><span class=\"comment\"># update() 将迭代器（如字符串、元组、列表、集合、字典）中的所有元素向集合中添加元素时，update接收的参数不能是整型、浮点型</span></span><br><span class=\"line\">set1.update(<span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\">set1.update(<span class=\"string\">&#x27;哈哈哈&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\">set1.update([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;def&#x27;, &#x27;qwer&#x27;, &#x27;abc&#x27;, 123, &#x27;asdas&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;def&#x27;, &#x27;A&#x27;, &#x27;qwer&#x27;, &#x27;abc&#x27;, 123, &#x27;asdas&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;def&#x27;, &#x27;A&#x27;, &#x27;qwer&#x27;, &#x27;abc&#x27;, &#x27;哈&#x27;, 123, &#x27;asdas&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;def&#x27;, 1, 2, &#x27;A&#x27;, &#x27;qwer&#x27;, 3, &#x27;abc&#x27;, &#x27;哈&#x27;, 123, &#x27;asdas&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"删-2\"><a href=\"#删-2\" class=\"headerlink\" title=\"删\"></a>删</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;def&#x27;</span>,<span class=\"number\">123</span>,<span class=\"string\">&#x27;asdas&#x27;</span>&#125;</span><br><span class=\"line\">set1.remove(<span class=\"string\">&#x27;abc&#x27;</span>) <span class=\"comment\"># 删除指定元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\">set1.pop() <span class=\"comment\"># 随机删除一个元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\">set1.clear() <span class=\"comment\"># 清空合集</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1)</span><br><span class=\"line\"><span class=\"keyword\">del</span> set1 <span class=\"comment\"># 删除合集</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;123, &#x27;def&#x27;, &#x27;asdas&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;def&#x27;, &#x27;asdas&#x27;&#125; # 每次运行结果不一定相同</span></span><br><span class=\"line\"><span class=\"string\">set()</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"其他操作-2\"><a href=\"#其他操作-2\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h5><h6 id=\"交集（-或者-intersection）\"><a href=\"#交集（-或者-intersection）\" class=\"headerlink\" title=\"交集（&amp; 或者 intersection）\"></a>交集（&amp; 或者 intersection）</h6><p>取出两个集合共有的元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">set2 = &#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 列出两个集合中共同拥有的项</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1 &amp; set2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1.intersection(set2))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;3, 4, 5&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;3, 4, 5&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"并集（-或者-union）\"><a href=\"#并集（-或者-union）\" class=\"headerlink\" title=\"并集（| 或者 union）\"></a>并集（| 或者 union）</h6><p>合并两个集合的所有元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">set2 = &#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 列出两个集合中所有的项</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1 | set2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set2.union(set1))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1, 2, 3, 4, 5, 6, 7&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1, 2, 3, 4, 5, 6, 7&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"差集（-或者-difference）\"><a href=\"#差集（-或者-difference）\" class=\"headerlink\" title=\"差集（- 或者 difference）\"></a>差集（- 或者 difference）</h6><p>第一个集合去除二者共有的元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">set2 = &#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 在set1中删除set2中有的项</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1 - set2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1.difference(set2))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1, 2&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1, 2&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"反交集-（-或者-symmetric-difference）\"><a href=\"#反交集-（-或者-symmetric-difference）\" class=\"headerlink\" title=\"反交集 （^ 或者 symmetric_difference）\"></a>反交集 （^ 或者 symmetric_difference）</h6><p>先合并，再去除共有元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">set2 = &#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 显示set1和set2不共存的项</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1 ^ set2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1.symmetric_difference(set2))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1, 2, 6, 7&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1, 2, 6, 7&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"子集与超集\"><a href=\"#子集与超集\" class=\"headerlink\" title=\"子集与超集\"></a>子集与超集</h6><p>当一共集合的所有元素都在另一个集合里，则称这个集合是另一个集合的子集，另一个集合是这个集合的超集</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">set2 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 说明set1是set2子集。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1 &lt; set2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set1.issubset(set2))</span><br><span class=\"line\"><span class=\"comment\"># 说明set2是set1超集</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set2 &gt; set1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set2.issuperset(set1))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">True</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"frozenset不可变集合，让集合变成不可变类型\"><a href=\"#frozenset不可变集合，让集合变成不可变类型\" class=\"headerlink\" title=\"frozenset不可变集合，让集合变成不可变类型\"></a>frozenset不可变集合，让集合变成不可变类型</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;</span><br><span class=\"line\">s = <span class=\"built_in\">frozenset</span>(set1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s,<span class=\"built_in\">type</span>(s))</span><br><span class=\"line\">s.add(<span class=\"number\">7</span>) <span class=\"comment\"># 不可以修改,会报错</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">frozenset(&#123;1, 2, 3, 4, 5, 6&#125;) &lt;class &#x27;frozenset&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"string\">AttributeError: &#x27;frozenset&#x27; object has no attribute &#x27;add&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"六、流程控制\"><a href=\"#六、流程控制\" class=\"headerlink\" title=\"六、流程控制\"></a>六、流程控制</h3><h5 id=\"顺序\"><a href=\"#顺序\" class=\"headerlink\" title=\"顺序\"></a>顺序</h5><h5 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 条件:</span><br><span class=\"line\">    满足条件执行代码</span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件:</span><br><span class=\"line\">    上面的条件不满足就走这个</span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件:</span><br><span class=\"line\">    上面的条件不满足就走这个</span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件:</span><br><span class=\"line\">    上面的条件不满足就走这个    </span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    上面所有的条件不满足就走这段</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h5><h6 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 条件:</span><br><span class=\"line\">     循环体</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"循环终止语句\"><a href=\"#循环终止语句\" class=\"headerlink\" title=\"循环终止语句\"></a>循环终止语句</h6><ul>\n<li>break：退出循环</li>\n<li>continue：从当前跳到下一次循环</li>\n</ul>\n<h5 id=\"其他（for，enumerate，range）\"><a href=\"#其他（for，enumerate，range）\" class=\"headerlink\" title=\"其他（for，enumerate，range）\"></a>其他（for，enumerate，range）</h5><h6 id=\"for循环：用户按照顺序循环可迭代对象的内容。\"><a href=\"#for循环：用户按照顺序循环可迭代对象的内容。\" class=\"headerlink\" title=\"for循环：用户按照顺序循环可迭代对象的内容。\"></a>for循环：用户按照顺序循环可迭代对象的内容。</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">&#x27;先帝创业未半而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\">li = [<span class=\"string\">&#x27;甲&#x27;</span>,<span class=\"string\">&#x27;乙&#x27;</span>,<span class=\"string\">&#x27;丙&#x27;</span>,<span class=\"string\">&#x27;丁&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\">dic = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;b&#x27;</span>:<span class=\"number\">2</span>,<span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> dic.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(k,v,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">先 帝 创 业 未 半 而 中 道 崩 殂 ， 今 天 下 三 分 ， 益 州 疲 弊 ， 此 诚 危 急 存 亡 之 秋 也 。 </span></span><br><span class=\"line\"><span class=\"string\">甲 乙 丙 丁 </span></span><br><span class=\"line\"><span class=\"string\">a 1 b 2 c 3</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"enumerate：枚举，对于一个可迭代的（iterable）-可遍历的对象（如列表、字符串），enumerate将其组成一个索引序列，利用它可以同时获得索引和值。\"><a href=\"#enumerate：枚举，对于一个可迭代的（iterable）-可遍历的对象（如列表、字符串），enumerate将其组成一个索引序列，利用它可以同时获得索引和值。\" class=\"headerlink\" title=\"enumerate：枚举，对于一个可迭代的（iterable）&#x2F;可遍历的对象（如列表、字符串），enumerate将其组成一个索引序列，利用它可以同时获得索引和值。\"></a>enumerate：枚举，对于一个可迭代的（iterable）&#x2F;可遍历的对象（如列表、字符串），enumerate将其组成一个索引序列，利用它可以同时获得索引和值。</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"string\">&#x27;甲&#x27;</span>,<span class=\"string\">&#x27;乙&#x27;</span>,<span class=\"string\">&#x27;丙&#x27;</span>,<span class=\"string\">&#x27;丁&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(li):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> index,value <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(li):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(index,value,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> index,value <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(li,<span class=\"number\">100</span>): <span class=\"comment\"># 从哪个数字开始索引（index从哪开始）</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(index,value,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">甲 乙 丙 丁 </span></span><br><span class=\"line\"><span class=\"string\">(0, &#x27;甲&#x27;) (1, &#x27;乙&#x27;) (2, &#x27;丙&#x27;) (3, &#x27;丁&#x27;) </span></span><br><span class=\"line\"><span class=\"string\">0 甲 1 乙 2 丙 3 丁 </span></span><br><span class=\"line\"><span class=\"string\">100 甲 101 乙 102 丙 103 丁 </span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"range：指定范围，生成指定数字。\"><a href=\"#range：指定范围，生成指定数字。\" class=\"headerlink\" title=\"range：指定范围，生成指定数字。\"></a>range：指定范围，生成指定数字。</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>):  <span class=\"comment\"># 步长</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>,<span class=\"number\">1</span>,-<span class=\"number\">2</span>): <span class=\"comment\"># 反向步长</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1 2 3 4 5 6 7 8 9 </span></span><br><span class=\"line\"><span class=\"string\">1 3 5 7 9 </span></span><br><span class=\"line\"><span class=\"string\">10 8 6 4 2</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"案例—猜数字小游戏\"><a href=\"#案例—猜数字小游戏\" class=\"headerlink\" title=\"案例—猜数字小游戏\"></a>案例—猜数字小游戏</h3><p>要求</p>\n<ol>\n<li>生成一个随机数</li>\n<li>猜错3次了以后，程序自动退出</li>\n</ol>\n<p>参考</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">ans = random.randint(<span class=\"number\">1</span>,<span class=\"number\">100</span>) <span class=\"comment\"># 包括两端点</span></span><br><span class=\"line\"></span><br><span class=\"line\">cnt = <span class=\"number\">3</span></span><br><span class=\"line\">t = cnt</span><br><span class=\"line\"><span class=\"keyword\">while</span> cnt:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> t == cnt:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;1~100范围猜一个数，共有<span class=\"subst\">&#123;t&#125;</span>次机会&quot;</span>)</span><br><span class=\"line\">    guess = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入：&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> guess.isdigit():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">int</span>(guess) &gt; ans:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;大了&quot;</span>,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            cnt -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">int</span>(guess) == ans:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;对了&quot;</span> + <span class=\"string\">&quot;\\n&quot;</span> + <span class=\"string\">&quot;Game over!&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;小了&quot;</span>, end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            cnt -= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> cnt:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;还剩<span class=\"subst\">&#123;cnt&#125;</span>次机会&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n&quot;</span>+<span class=\"string\">&quot;Game over!&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;错误输入，请重新输入&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h2><h3 id=\"文件操作基本流程\"><a href=\"#文件操作基本流程\" class=\"headerlink\" title=\"文件操作基本流程\"></a>文件操作基本流程</h3><h4 id=\"文本文件与二进制文件\"><a href=\"#文本文件与二进制文件\" class=\"headerlink\" title=\"文本文件与二进制文件\"></a>文本文件与二进制文件</h4><ul>\n<li>文本文件：可以使用文本编辑器查看；</li>\n<li>二进制文件：保存的内容不是直接给人查看的，而是使用专用软件查看的，例如图片文件、视频文件；</li>\n</ul>\n<h4 id=\"文件操作套路\"><a href=\"#文件操作套路\" class=\"headerlink\" title=\"文件操作套路\"></a>文件操作套路</h4><ol>\n<li>打开文件；</li>\n<li>读写文件；</li>\n</ol>\n<ul>\n<li><ol>\n<li>读文件：将文件内容读入内存；</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>写文件：将内存内容写入文件；</li>\n</ol>\n</li>\n</ul>\n<ol start=\"3\">\n<li>关闭文件；</li>\n</ol>\n<h4 id=\"文件操作函数\"><a href=\"#文件操作函数\" class=\"headerlink\" title=\"文件操作函数\"></a>文件操作函数</h4><blockquote>\n<p><strong>open</strong>：负责打开文件，并且返回文件对象<br><strong>read&#x2F;write&#x2F;close</strong>：三个方法都需要通过 文件对象 来调用</p>\n</blockquote>\n<p><em><strong>open</strong></em>：</p>\n<ul>\n<li>第一个参数是文件名（文件名区分大小写），第二个参数是打开方式；</li>\n<li>如果文件存在返回文件操作对象；</li>\n<li>如果文件不存在抛出异常</li>\n</ul>\n<p><em><strong>read</strong></em>：<br>可以一次性读入并返回文件的所有内容；</p>\n<p><em><strong>close</strong></em>：<br>负责关闭文件；</p>\n<h4 id=\"文件打开方式\"><a href=\"#文件打开方式\" class=\"headerlink\" title=\"文件打开方式\"></a>文件打开方式</h4><blockquote>\n<p>f &#x3D; open(“文件名”, “访问方式”)</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">访问方式</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">r</td>\n<td align=\"center\">只读 文件不存在报错</td>\n</tr>\n<tr>\n<td align=\"center\">w</td>\n<td align=\"center\">只写：文件存在则覆盖，文件不存在则创建</td>\n</tr>\n<tr>\n<td align=\"center\">a</td>\n<td align=\"center\">追加写入：文件存在则追加，文件不存在则创建</td>\n</tr>\n<tr>\n<td align=\"center\">r+</td>\n<td align=\"center\">读写，且根据光标的位置和需要多少的空间覆盖，文件不存在报错；</td>\n</tr>\n<tr>\n<td align=\"center\">w+</td>\n<td align=\"center\">读写，文件存在则覆盖，不存在则报错</td>\n</tr>\n<tr>\n<td align=\"center\">a+</td>\n<td align=\"center\">读写且追加，文件存在则追加，文件不存在则创建（比较好用）</td>\n</tr>\n</tbody></table>\n<p>对于二进制bytes类型操作的读写</p>\n<ul>\n<li>a + b 或 w + b 或 a + b</li>\n</ul>\n<p>对于非文本文件，我们只能使用b模式，”b”表示以字节的方式操作（而所有文件也都是以字节的形式存储的，使用这种模式无需考虑文本文件的字符编码、图片文件的jgp格式、视频文件的avi格式）</p>\n<p>注：</p>\n<ul>\n<li>以b方式打开时，读取到的内容是字节类型，写入时也需要提供字节类型，不能指定编码</li>\n<li>频繁的移动文件指针，会影响文件的读写效率，开发中更多的时候会以 只读、只写 的方式来操作文件.</li>\n</ul>\n<h4 id=\"按行读取文件内容\"><a href=\"#按行读取文件内容\" class=\"headerlink\" title=\"按行读取文件内容\"></a>按行读取文件内容</h4><ul>\n<li>read方法默认会把文件的所有内容一次性读取到内存</li>\n<li>readline方法可以一次读取一行内容；</li>\n<li>方法执行后，文件指针移动到下一行，准备再次读取；</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式一、通过循环按行读取文件所有内容</span></span><br><span class=\"line\">file1 = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;README.txt&quot;</span>)</span><br><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    text1 = file1.readline().strip()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> text1:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;这是第%s行内容&quot;</span> % i)</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(text1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">file1.close()</span><br><span class=\"line\"></span><br><span class=\"line\">file2 = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;README.txt&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过for遍历按行读取文件所有内容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> file2.readlines():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i.strip())</span><br><span class=\"line\"></span><br><span class=\"line\">file2.close()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"with-结构\"><a href=\"#with-结构\" class=\"headerlink\" title=\"with 结构\"></a>with 结构</h4><p>把上面按行读取文件内容的代码使用with重新组织一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;README.txt&quot;</span>) <span class=\"keyword\">as</span> file1:</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        text1 = file1.readline().strip()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> text1:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;这是第%s行内容&quot;</span> % i)</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(text1)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>close()在操作完毕文件后，一定要记住f.close(),推荐操作方式：使用with关键字来帮我们管理上下文</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;a.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> read_f, <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;b.txt&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> write_f:</span><br><span class=\"line\">    data=read_f.read()</span><br><span class=\"line\">    write_f.write(data)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件编码\"><a href=\"#文件编码\" class=\"headerlink\" title=\"文件编码\"></a>文件编码</h3><p>f&#x3D;open(…)是由操作系统打开文件，那么如果我们没有为open指定编码，那么打开文件的默认编码很明显是操作系统指定，操作系统会用自己的默认编码去打开文件，在windows下是gbk，在linux下是utf-8。</p>\n<blockquote>\n<p>f&#x3D;open(‘a.txt’,’r’,encoding&#x3D;’utf-8’)</p>\n</blockquote>\n<h3 id=\"案例一——文件复制\"><a href=\"#案例一——文件复制\" class=\"headerlink\" title=\"案例一——文件复制\"></a>案例一——文件复制</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 读取图片等二进制</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;a.png&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data = f.read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制二进制文件</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;aa.png&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 案例——暗度陈仓 图片内藏学习资料</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;resource.png&quot;</span>,<span class=\"string\">&quot;ab&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(data)</span><br><span class=\"line\">    f.write(<span class=\"built_in\">open</span>(<span class=\"string\">&quot;b.zip&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>).read())</span><br><span class=\"line\"><span class=\"comment\"># 图片后缀改成 .zip 或许暗藏玄机</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"案例二——文件修改\"><a href=\"#案例二——文件修改\" class=\"headerlink\" title=\"案例二——文件修改\"></a>案例二——文件修改</h3><p>文件的数据是存放于硬盘上的，因而只存在覆盖、不存在修改这么一说，我们平时看到的修改文件，都是模拟出来的效果，具体的说有两种实现方式：</p>\n<p>方式一：将硬盘存放的该文件的内容全部加载到内存，在内存中是可以修改的，修改完毕后，再由内存覆盖到硬盘（word，vim，nodpad++等编辑器）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;a.txt&#x27;</span>) <span class=\"keyword\">as</span> read_f,<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;a.txt.new&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> write_f:</span><br><span class=\"line\">    data = read_f.read()</span><br><span class=\"line\">    data = data.replace(<span class=\"string\">&#x27;Hello&#x27;</span>,<span class=\"string\">&#x27;nihao&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    write_f.write(data)</span><br><span class=\"line\"></span><br><span class=\"line\">os.remove(<span class=\"string\">&#x27;a.txt&#x27;</span>)</span><br><span class=\"line\">os.rename(<span class=\"string\">&#x27;a.txt.new&#x27;</span>,<span class=\"string\">&#x27;a.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>方式二：将硬盘存放的该文件的内容一行一行地读入内存，修改完毕就写入新文件，最后用新文件覆盖源文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;a.txt&#x27;</span>) <span class=\"keyword\">as</span> read_f,<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;a.txt.new&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> write_f:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> read_f:</span><br><span class=\"line\">        line = line.replace(<span class=\"string\">&#x27;nihao&#x27;</span>,<span class=\"string\">&#x27;Hello&#x27;</span>)</span><br><span class=\"line\">        write_f.write(line)</span><br><span class=\"line\"></span><br><span class=\"line\">os.remove(<span class=\"string\">&#x27;a.txt&#x27;</span>)</span><br><span class=\"line\">os.rename(<span class=\"string\">&#x27;a.txt.new&#x27;</span>,<span class=\"string\">&#x27;a.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"案例三——计算总价\"><a href=\"#案例三——计算总价\" class=\"headerlink\" title=\"案例三——计算总价\"></a>案例三——计算总价</h3><p>文件a.txt内容：每一行内容分别为商品名字，价钱，个数。</p>\n<p>apple 10 3</p>\n<p>tesla 100000 1</p>\n<p>mac 3000 2</p>\n<p>lenovo 30000 3</p>\n<p>chicken 10 3</p>\n<p>通过代码，将其构建成这种数据类型：[{‘name’:’apple’,’price’:10,’amount’:3},{‘name’:’tesla’,’price’:1000000,’amount’:1}……] 并计算出总价钱。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">list</span> = []</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;a.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>,encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file:</span><br><span class=\"line\">        list2 = line.strip().split()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> list2:</span><br><span class=\"line\">            dic = &#123;<span class=\"string\">&#x27;name&#x27;</span>:list2[<span class=\"number\">0</span>],<span class=\"string\">&#x27;price&#x27;</span>:list2[<span class=\"number\">1</span>],<span class=\"string\">&#x27;amount&#x27;</span>:list2[<span class=\"number\">2</span>]&#125;</span><br><span class=\"line\">            <span class=\"built_in\">list</span>.append(dic)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>)</span><br><span class=\"line\">price = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">list</span>:</span><br><span class=\"line\">    price += <span class=\"built_in\">int</span>(i[<span class=\"string\">&#x27;price&#x27;</span>]) * <span class=\"built_in\">int</span>(i[<span class=\"string\">&#x27;amount&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(price)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"案例四——登录注册-连续输错3次密码封30s\"><a href=\"#案例四——登录注册-连续输错3次密码封30s\" class=\"headerlink\" title=\"案例四——登录注册+ 连续输错3次密码封30s\"></a>案例四——登录注册+ 连续输错3次密码封30s</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">db = &#123;&#125;</span><br><span class=\"line\">database = <span class=\"string\">&quot;db.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">menu</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;菜单&quot;</span>.center(<span class=\"number\">30</span>, <span class=\"string\">&quot;=&quot;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;1.登录&quot;</span>.center(<span class=\"number\">30</span>, <span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;2.注册&quot;</span>.center(<span class=\"number\">30</span>, <span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;=&quot;</span> * <span class=\"number\">32</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 根据用户输入执行功能</span></span><br><span class=\"line\">    choice = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入选项：&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\">## 1.登录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> choice == <span class=\"string\">&quot;1&quot;</span>:</span><br><span class=\"line\">        username = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入用户名：&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> check_username(username) == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;用户名不存在&quot;</span></span><br><span class=\"line\">        password = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入密码：&quot;</span>)</span><br><span class=\"line\">        res = login(username,password)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> res[<span class=\"string\">&quot;code&quot;</span>] == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(res[<span class=\"string\">&quot;msg&quot;</span>])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> play_game()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> res[<span class=\"string\">&quot;code&quot;</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res[<span class=\"string\">&quot;msg&quot;</span>]</span><br><span class=\"line\">    <span class=\"comment\">## 2.注册</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> choice == <span class=\"string\">&quot;2&quot;</span>:  <span class=\"comment\">### 安全写法</span></span><br><span class=\"line\">        username = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;用户名：&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> check_username(username) == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;用户已存在&quot;</span></span><br><span class=\"line\">        password = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入密码：&quot;</span>)</span><br><span class=\"line\">        res = register(username,password)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"string\">&quot;msg&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;错误输入，请重新输入&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_username</span>(<span class=\"params\">username</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 存在返回1 不存在返回0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> username <span class=\"keyword\">in</span> db:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">play_game</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;玩儿游戏ing&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>(<span class=\"params\">username,password</span>):</span><br><span class=\"line\">    <span class=\"comment\"># &#123;&quot;code&quot;:0, &quot;msg&quot;:&quot;...&quot;&#125;</span></span><br><span class=\"line\">    <span class=\"comment\"># &#123;&quot;code&quot;:1, &quot;msg&quot;:&quot;登录成功&quot;&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">int</span>(db.get(username)[<span class=\"number\">1</span>]) &lt; time.time():  <span class=\"comment\">### 记录的时间戳比当前时间小，说明还未被封号</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> db.get(username)[<span class=\"number\">2</span>] != <span class=\"string\">&quot;0&quot;</span>:  <span class=\"comment\">### 且剩余尝试次数不为零</span></span><br><span class=\"line\">            <span class=\"comment\">#### 登录成功</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> db.get(username)[<span class=\"number\">0</span>] == password:</span><br><span class=\"line\">                db.get(username)[<span class=\"number\">2</span>] = <span class=\"string\">&quot;3&quot;</span>  <span class=\"comment\">##### 重置尝试次数</span></span><br><span class=\"line\">                write_db()</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;code&quot;</span>:<span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>:<span class=\"string\">&quot;登录成功&quot;</span>&#125;</span><br><span class=\"line\">            <span class=\"comment\">#### 登录失败</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"comment\">##### 判断尝试次数是否剩余</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> db.get(username)[<span class=\"number\">2</span>] == <span class=\"string\">&quot;1&quot;</span>:</span><br><span class=\"line\">                    db.get(username)[<span class=\"number\">2</span>] = <span class=\"string\">&quot;3&quot;</span>  <span class=\"comment\">##### 重置尝试次数</span></span><br><span class=\"line\">                    db.get(username)[<span class=\"number\">1</span>] = <span class=\"built_in\">str</span>(<span class=\"built_in\">int</span>(time.time()) + <span class=\"number\">30</span>)  <span class=\"comment\">### 更新账号的时间戳</span></span><br><span class=\"line\">                    write_db()</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;密码错误，尝试次数用完，30s后重新尝试&quot;</span>&#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    db.get(username)[<span class=\"number\">2</span>] = <span class=\"built_in\">str</span>(<span class=\"built_in\">int</span>(db.get(username)[<span class=\"number\">2</span>]) - <span class=\"number\">1</span>)  <span class=\"comment\">##### 更新尝试次数</span></span><br><span class=\"line\">                    write_db()</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">0</span>, <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">f&quot;密码错误，还剩<span class=\"subst\">&#123;db.get(username)[<span class=\"number\">2</span>]&#125;</span>次尝试机会&quot;</span>&#125;</span><br><span class=\"line\">        <span class=\"comment\"># else 剩余尝试次数为0 说明已被封禁 第一个if就处理了</span></span><br><span class=\"line\">    <span class=\"comment\">### 被封号</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;code&quot;</span>:<span class=\"number\">0</span>,<span class=\"string\">&quot;msg&quot;</span>:<span class=\"string\">f&quot;你已被封号，还剩<span class=\"subst\">&#123;<span class=\"built_in\">str</span>(<span class=\"built_in\">int</span>(db.get(username)[<span class=\"number\">1</span>]) - <span class=\"built_in\">int</span>(time.time()))&#125;</span>s解封&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>(<span class=\"params\">username,password</span>):</span><br><span class=\"line\">    <span class=\"comment\"># &#123;&quot;code&quot;:0, &quot;msg&quot;:&quot;系统错误，注册失败&quot;&#125;</span></span><br><span class=\"line\">    <span class=\"comment\"># &#123;&quot;code&quot;:1, &quot;msg&quot;:&quot;注册成功&quot;&#125;</span></span><br><span class=\"line\">    db[username] = [password, <span class=\"built_in\">str</span>(<span class=\"built_in\">int</span>(time.time())), <span class=\"string\">&quot;3&quot;</span>]  <span class=\"comment\">### 注册时记录当前的时间戳信息，联合尝试次数，作为封禁依据</span></span><br><span class=\"line\">    write_db()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;code&quot;</span>:<span class=\"number\">1</span>, <span class=\"string\">&quot;msg&quot;</span>:<span class=\"string\">&quot;注册成功&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_db</span>(): <span class=\"comment\"># 可变数据类型，支持全局修改，类比C++数组</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(database, <span class=\"string\">&quot;a+&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.seek(<span class=\"number\">0</span>)</span><br><span class=\"line\">        data = f.readlines()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(data) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">            tmp = line.strip().split(<span class=\"string\">&quot;|&quot;</span>)</span><br><span class=\"line\">            db[tmp[<span class=\"number\">0</span>]] = tmp[<span class=\"number\">1</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">write_db</span>():</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(database, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:  <span class=\"comment\">### &quot;W&quot; 直接覆盖，不考虑哪部分变化了</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> db.items():</span><br><span class=\"line\">            f.write(<span class=\"string\">f&quot;<span class=\"subst\">&#123;k&#125;</span>|<span class=\"subst\">&#123;v[<span class=\"number\">0</span>]&#125;</span>|<span class=\"subst\">&#123;v[<span class=\"number\">1</span>]&#125;</span>|<span class=\"subst\">&#123;v[<span class=\"number\">2</span>]&#125;</span>\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 读取数据db.txt，生成db字典 &#123;&#x27;张三&#x27;: [&#x27;123456&#x27;], &#x27;李四&#x27;: [&#x27;456789&#x27;], &#x27;王五&#x27;: [&#x27;123123&#x27;]&#125; 字典的键为用户名，值为列表</span></span><br><span class=\"line\">    get_db()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(db) <span class=\"comment\"># 用于调试</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(menu())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h2><h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><blockquote>\n<p><strong>函数</strong>：函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。</p>\n</blockquote>\n<h4 id=\"函数的定义和调用\"><a href=\"#函数的定义和调用\" class=\"headerlink\" title=\"函数的定义和调用\"></a>函数的定义和调用</h4><p>定义</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">参数</span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br></pre></td></tr></table></figure>\n<p>调用</p>\n<blockquote>\n<p>func()</p>\n</blockquote>\n<h4 id=\"函数的返回值\"><a href=\"#函数的返回值\" class=\"headerlink\" title=\"函数的返回值\"></a>函数的返回值</h4><ul>\n<li>不写return的情况下，会默认返回一个None</li>\n<li>一旦遇到return，结束整个函数。</li>\n<li>返回多个值会被组织成元组被返回，也可以用多个值来接收</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ret_demo</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;a&#x27;</span>,[<span class=\"string\">&#x27;hello&#x27;</span>,<span class=\"string\">&#x27;world&#x27;</span>]</span><br><span class=\"line\">ret = ret_demo()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ret)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">(1, 2, &#x27;a&#x27;, [&#x27;hello&#x27;, &#x27;world&#x27;])</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"函数的参数\"><a href=\"#函数的参数\" class=\"headerlink\" title=\"函数的参数\"></a>函数的参数</h4><ul>\n<li><p>按位置传参</p>\n</li>\n<li><p>按关键字传参</p>\n</li>\n<li><p>位置、关键字混合传参（位置参数必须在关键字参数的前面 对于一个形参只能赋值一次）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">maxnumber</span>(<span class=\"params\">x,y</span>):</span><br><span class=\"line\">    the_max = x <span class=\"keyword\">if</span> x &gt; y <span class=\"keyword\">else</span> y</span><br><span class=\"line\">    <span class=\"keyword\">return</span> the_max</span><br><span class=\"line\">res1 = maxnumber(<span class=\"number\">10</span>,<span class=\"number\">20</span>)</span><br><span class=\"line\">res2 = maxnumber(y = <span class=\"number\">10</span>,x = <span class=\"number\">20</span>)</span><br><span class=\"line\">res3 = maxnumber(<span class=\"number\">10</span>,y = <span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res1,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res2,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res3)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">20 20 20</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>默认参数（缺省值）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">stu_info</span>(<span class=\"params\">name,age = <span class=\"number\">18</span></span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name,age)</span><br><span class=\"line\">stu_info(<span class=\"string\">&#x27;aaron&#x27;</span>)</span><br><span class=\"line\">stu_info(<span class=\"string\">&#x27;song&#x27;</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">aaron 18</span></span><br><span class=\"line\"><span class=\"string\">song 50</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>默认参数是一个可变数据类型</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">demo</span>(<span class=\"params\">a,l = []</span>):</span><br><span class=\"line\">    l.append(a)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(l)</span><br><span class=\"line\">demo(<span class=\"string\">&#x27;abc&#x27;</span>)</span><br><span class=\"line\">demo(<span class=\"string\">&#x27;123&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;abc&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;abc&#x27;, &#x27;123&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>动态参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">demo</span>(<span class=\"params\">*args,**kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args,<span class=\"built_in\">type</span>(args))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kwargs,<span class=\"built_in\">type</span>(kwargs))</span><br><span class=\"line\"><span class=\"comment\">#动态参数，不定长传参，用*args，**kwargs接收，args是元祖形式，接收除去键值对以外的所有参数，kwargs接收的只是键值对的参数，并保存在字典中。</span></span><br><span class=\"line\">demo(<span class=\"string\">&#x27;aaron&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>],&#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">123</span>,<span class=\"string\">&#x27;b&#x27;</span>:<span class=\"number\">321</span>&#125;,country=<span class=\"string\">&#x27;china&#x27;</span>,b=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">(&#x27;aaron&#x27;, 1, 3, [1, 3, 2, 2], &#123;&#x27;a&#x27;: 123, &#x27;b&#x27;: 321&#125;) &lt;class &#x27;tuple&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;country&#x27;: &#x27;china&#x27;, &#x27;b&#x27;: 1&#125; &lt;class &#x27;dict&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"函数命名空间\"><a href=\"#函数命名空间\" class=\"headerlink\" title=\"函数命名空间\"></a>函数命名空间</h4><p>分为三种</p>\n<ul>\n<li>全局命名空间</li>\n<li>局部命名空间</li>\n<li>内置命名空间：由Python解释器在启动时自动创建的，并且始终可用，无需导入任何模块（如常量True，内置函数print()）</li>\n</ul>\n<p>取值顺序</p>\n<ul>\n<li>在局部调用：局部命名空间-&gt;全局命名空间-&gt;内置命名空间</li>\n<li>在全局调用：全局命名空间-&gt;内置命名空间</li>\n</ul>\n<p><em><strong>globals和locals方法</strong></em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    a = <span class=\"number\">12</span></span><br><span class=\"line\">    b = <span class=\"number\">20</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">globals</span>())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">locals</span>())</span><br><span class=\"line\">func()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None,......, &#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;func&#x27;: &lt;function func at 0x00000000010F37E0&gt;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;a&#x27;: 12, &#x27;b&#x27;: 20&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><em><strong>global</strong></em> 关键字</p>\n<ul>\n<li>声明一个全局变量。</li>\n<li>在局部作用域想要对全局作用域的全局变量进行修改时，需要用到 global(限于字符串，数字)。</li>\n<li>对可变数据类型（list，dict，set）可以直接引用不用通过global<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> a</span><br><span class=\"line\">    a = <span class=\"number\">3</span></span><br><span class=\"line\">func()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1 3</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><em><strong>nonlocal</strong></em> 关键字</p>\n<ul>\n<li>不能修改全局变量。</li>\n<li>在局部作用域中，对父级作用域（或者更外层作用域非全局作用域）的变量进行引用和修改，并且引用的哪层，从那层及以下此变量全部发生改变。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add_b</span>():</span><br><span class=\"line\">    b = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">do_global</span>():</span><br><span class=\"line\">        b = <span class=\"number\">10</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">dd_nolocal</span>():</span><br><span class=\"line\">            <span class=\"keyword\">nonlocal</span> b  <span class=\"comment\"># 应用了上一层的变量b</span></span><br><span class=\"line\">            b = b + <span class=\"number\">20</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(b)    <span class=\"comment\"># 发生了改变</span></span><br><span class=\"line\">        dd_nolocal()    <span class=\"comment\"># 调用函数，导致do_global的命名空间b也改变了</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">    do_global()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">add_b()     <span class=\"comment\"># 最上面一层没有变化</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">10</span></span><br><span class=\"line\"><span class=\"string\">30</span></span><br><span class=\"line\"><span class=\"string\">30</span></span><br><span class=\"line\"><span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>函数定义时并不被执行，只有func()调用时才执行<br><img src=\"/../images/071401.png\"></p>\n<h4 id=\"函数名的本质\"><a href=\"#函数名的本质\" class=\"headerlink\" title=\"函数名的本质\"></a>函数名的本质</h4><blockquote>\n<p>函数名本质上就是函数的内存地址</p>\n</blockquote>\n<ul>\n<li><p>可被引用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;in func&#x27;</span>)</span><br><span class=\"line\">f = func</span><br><span class=\"line\"><span class=\"built_in\">print</span>(f)</span><br><span class=\"line\">f()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;function func at 0x0000000000EF04A0&gt;</span></span><br><span class=\"line\"><span class=\"string\">in func</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以被当作容器类型的元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f1</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;f1&#x27;</span>,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f2</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;f2&#x27;</span>,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f3</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;f3&#x27;</span>,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">l = [f1,f2,f3]</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;f1&#x27;</span>:f1,<span class=\"string\">&#x27;f2&#x27;</span>:f2,<span class=\"string\">&#x27;f3&#x27;</span>:f3&#125;</span><br><span class=\"line\"><span class=\"comment\">#调用</span></span><br><span class=\"line\">l[<span class=\"number\">0</span>]()</span><br><span class=\"line\">d[<span class=\"string\">&#x27;f2&#x27;</span>]()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">f1 f2</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以当作函数的参数和返回值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f1</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;f1&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">argv</span>):</span><br><span class=\"line\">    argv()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> argv</span><br><span class=\"line\">f = func(f1)</span><br><span class=\"line\">f()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">f1</span></span><br><span class=\"line\"><span class=\"string\">f1</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"闭包（Closure）\"><a href=\"#闭包（Closure）\" class=\"headerlink\" title=\"闭包（Closure）\"></a>闭包（Closure）</h4><p>三大特性</p>\n<blockquote>\n<p>1.函数嵌套函数<br>2.函数内部可以引用外部的参数和变量<br>3.参数和变量不会被垃圾回收机制回收</p>\n</blockquote>\n<ul>\n<li>内部函数包含对外部作用域而非全剧作用域变量的引用，该内部函数称为 <strong>闭包函数</strong></li>\n<li>用途：可以提前在函数中封住一些预设的数据或者属性<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    name = <span class=\"string\">&#x27;张三&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">f = func()</span><br><span class=\"line\">f()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">张三</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>判断闭包函数的方法closure</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    name = <span class=\"string\">&#x27;aaron&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(name) <span class=\"comment\"># 引用外部作用域</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(inner.__closure__)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">f = func()</span><br><span class=\"line\">f()</span><br><span class=\"line\"></span><br><span class=\"line\">name = <span class=\"string\">&#x27;aaron&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(name) <span class=\"comment\"># 引用全局作用域</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(inner.__closure__)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">f = func()</span><br><span class=\"line\">f()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">(&lt;cell at 0x0000000000F29390: str object at 0x0000000000F35670&gt;,) # 最后运行的结果里面有cell就是闭包</span></span><br><span class=\"line\"><span class=\"string\">aaron</span></span><br><span class=\"line\"><span class=\"string\">None # 输出结果为None，说明不是闭包</span></span><br><span class=\"line\"><span class=\"string\">aaron</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>案例1</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>():</span><br><span class=\"line\">    money = <span class=\"number\">1000</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">        name = <span class=\"string\">&#x27;apple&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(name,money)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">    <span class=\"keyword\">return</span> func</span><br><span class=\"line\">f = wrapper()</span><br><span class=\"line\">i = f()</span><br><span class=\"line\">i()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">apple 1000</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>案例2</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a,b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a*x + b</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\">func1 = func(<span class=\"number\">4</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\">func2 = func(<span class=\"number\">7</span>,<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(func1(<span class=\"number\">5</span>),func2(<span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">25 50</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>案例3</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_ip</span>():</span><br><span class=\"line\">    content = urlopen(<span class=\"string\">&#x27;http://myip.ipip.net&#x27;</span>).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"comment\"># 预加载一次，后面就会很快</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IP预加载完成\\n<span class=\"subst\">&#123;content&#125;</span>&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> content.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&quot;：&quot;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">get_ip = get_ip()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;你的IP为：<span class=\"subst\">&#123;get_ip()&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">IP预加载完成</span></span><br><span class=\"line\"><span class=\"string\">当前 IP：106.110.89.102  来自于：中国 江苏 徐州  电信</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">你的IP为：106.110.89.102</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><blockquote>\n<p>让其他函数在不需要做任何代码变动的前提下，增加额外的功能，<br>装饰器的返回值是一个函数对象。<br>装饰器的应用场景：插入日志，性能测试，事务处理，缓存等场景。</p>\n</blockquote>\n<h4 id=\"案例切入\"><a href=\"#案例切入\" class=\"headerlink\" title=\"案例切入\"></a>案例切入</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;in func1&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#新的需求，要求在调用func1的时候输入以下内容，但是不能改变原本的func1的两行代码</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">hello world</span></span><br><span class=\"line\"><span class=\"string\">in func1</span></span><br><span class=\"line\"><span class=\"string\">hello python</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实现</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func2</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello python&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner <span class=\"comment\"># 装饰器的返回值也是一个函数对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">func1 = func2(func1) <span class=\"comment\"># 将函数本身做为参数传递进去</span></span><br><span class=\"line\">func1()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"装饰器形成过程\"><a href=\"#装饰器形成过程\" class=\"headerlink\" title=\"装饰器形成过程\"></a>装饰器形成过程</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;in func1&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">timer</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(time.time() - start)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\">func1 = timer(func1)  <span class=\"comment\"># 将函数本身做为参数传递进去</span></span><br><span class=\"line\">func1()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">in func1</span></span><br><span class=\"line\"><span class=\"string\">0.0</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>但是如果要测试多个函数，得func &#x3D; timer(func)。且这些函数的函数名可能是不相同，有func1，func2,graph,等等，所以python提供了更简单的方法那就是语法糖。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">timer</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(time.time() - start)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@timer   </span><span class=\"comment\"># 等价于func1 = timer(func1)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>():</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;in func1&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">func1()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">in func1</span></span><br><span class=\"line\"><span class=\"string\">1.0012409687042236</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"装饰一个带参数的函数\"><a href=\"#装饰一个带参数的函数\" class=\"headerlink\" title=\"装饰一个带参数的函数\"></a>装饰一个带参数的函数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">timer</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">a</span>):</span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        func(a)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(time.time() - start)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@timer </span><span class=\"comment\"># 等效于 func1 = timer(func1)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>(<span class=\"params\">a</span>):</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">func1(<span class=\"string\">&#x27;hello world&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">hello world</span></span><br><span class=\"line\"><span class=\"string\">1.0030105113983154</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"装饰一个带多种参数的函数\"><a href=\"#装饰一个带多种参数的函数\" class=\"headerlink\" title=\"装饰一个带多种参数的函数\"></a>装饰一个带多种参数的函数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">timer</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\"><span class=\"comment\"># 注意这里需要解包参数——将一个列表（或任何可迭代对象）或字典的元素作为独立的参数传递给一个函数，星号 * 运算符来解包列表或元组，使用两个星号 ** 运算符来解包字典</span></span><br><span class=\"line\">        func(*args, **kwargs)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(time.time() - start)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@timer </span><span class=\"comment\"># 等效于 func1 = timer(func1(*args, **kwargs))</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args, kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">func1(<span class=\"string\">&#x27;hello world&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"number\">123</span>, <span class=\"number\">432</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"wraps-装饰器\"><a href=\"#wraps-装饰器\" class=\"headerlink\" title=\"wraps 装饰器\"></a>wraps 装饰器</h4><p><em><strong>wraps装饰器</strong></em>：确保装饰器不会改变被装饰函数的原始接口<br>查看函数的相关信息，在加上装饰器后就失效了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> wraps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">deco</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\"><span class=\"meta\">    @wraps(<span class=\"params\">func</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">*args,**kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> func(*args,**kwargs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@deco</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>(): <span class=\"comment\"># 等效于 index = deco(index())</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;这是一条注释信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;from index&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(index.__doc__)    <span class=\"comment\"># 查看函数注释</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(index.__name__)   <span class=\"comment\"># 查看函数名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加 @wraps(func)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">这是一条注释信息</span></span><br><span class=\"line\"><span class=\"string\">index</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不加 @wraps(func)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">None</span></span><br><span class=\"line\"><span class=\"string\">inner</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"多个装饰器修饰一个函数\"><a href=\"#多个装饰器修饰一个函数\" class=\"headerlink\" title=\"多个装饰器修饰一个函数\"></a>多个装饰器修饰一个函数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">wrapper1</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第一个装饰器，在程序运行之前&#x27;</span>)</span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第一个装饰器，在程序运行之后&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">wrapper2</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第二个装饰器，在程序运行之前&#x27;</span>)</span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第二个装饰器，在程序运行之后&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@wrapper1 </span><span class=\"comment\"># 等效于 f = wrapper1(f)</span></span><br><span class=\"line\"><span class=\"meta\">@wrapper2 </span><span class=\"comment\"># 等效于 f = wrapper2(f)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Hello&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">f()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">第一个装饰器，在程序运行之前</span></span><br><span class=\"line\"><span class=\"string\">第二个装饰器，在程序运行之前</span></span><br><span class=\"line\"><span class=\"string\">Hello</span></span><br><span class=\"line\"><span class=\"string\">第二个装饰器，在程序运行之后</span></span><br><span class=\"line\"><span class=\"string\">第一个装饰器，在程序运行之后</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h4><blockquote>\n<p>软件实体应该是可扩展但是不可修改的。</p>\n<ul>\n<li>对于扩展是开放的</li>\n<li>对于修改是封闭的</li>\n</ul>\n<p>装饰器完美的遵循了这个开放封闭原则</p>\n</blockquote>\n<p>装饰器的主要功能和固定结构</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">outer</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">*args,**kwargs</span>):</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;执行函数之前要做的&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        re = func(*args,**kwargs)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;执行函数之后要做的&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> re</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下面是加上wraps的固定结构</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> wraps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">outer</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\"><span class=\"meta\">    @wraps(<span class=\"params\">func</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>(<span class=\"params\">*args,**kwargs</span>)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;执行函数之前要做的&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        re = func(*args,**kwargs)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;执行函数之后要做的&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> re</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"迭代器和生成器\"><a href=\"#迭代器和生成器\" class=\"headerlink\" title=\"迭代器和生成器\"></a>迭代器和生成器</h3><h4 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h4><blockquote>\n<p>迭代是访问集合元素的一种方式。迭代器是一个可以记住遍历的位置的对象。迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。迭代器只能往前不会后退。</p>\n</blockquote>\n<h5 id=\"如何判断一个对象是否可以迭代\"><a href=\"#如何判断一个对象是否可以迭代\" class=\"headerlink\" title=\"如何判断一个对象是否可以迭代\"></a>如何判断一个对象是否可以迭代</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 字符串、列表、元组、字典、集合都可以被for循环，说明他们都是可迭代的</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> collections.abc <span class=\"keyword\">import</span> Iterable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">str</span> = <span class=\"string\">&quot;abc&quot;</span></span><br><span class=\"line\">l = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>] <span class=\"comment\"># 列表</span></span><br><span class=\"line\">t = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>) <span class=\"comment\"># 元组</span></span><br><span class=\"line\">d = &#123;<span class=\"number\">1</span>: <span class=\"number\">2</span>, <span class=\"number\">3</span>: <span class=\"number\">4</span>&#125; <span class=\"comment\"># 字典</span></span><br><span class=\"line\">s = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125; <span class=\"comment\"># 集合</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(<span class=\"built_in\">str</span>, Iterable),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(l, Iterable),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(t, Iterable),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(d, Iterable),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(s, Iterable),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">True True True True True</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"可迭代对象的本质\"><a href=\"#可迭代对象的本质\" class=\"headerlink\" title=\"可迭代对象的本质\"></a>可迭代对象的本质</h5><blockquote>\n<p>可迭代对象：一个拥有 <strong>_<em>iter_</em>()</strong> 方法的对象<br>该方法：</p>\n<ul>\n<li>必须返回一个迭代器对象。</li>\n<li>迭代器对象必须实现 <strong>_<em>iter_</em>()</strong> 方法，该方法在每次调用时返回序列中的下一个元素。</li>\n</ul>\n</blockquote>\n<h5 id=\"iter-函数与-next-函数\"><a href=\"#iter-函数与-next-函数\" class=\"headerlink\" title=\"__iter__函数与__next__函数\"></a>__iter__函数与__next__函数</h5><p>迭代器遵循迭代器协议：必须拥有iter方法和next方法。</p>\n<p>list、tuple等都是可迭代对象，我们可以通过iter()函数获取这些可迭代对象的迭代器。然后我们可以对获取到的迭代器不断使用next()函数来获取下一条数据。iter()函数实际上就是调用了可迭代对象的__iter__方法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">l_iter = l.__iter__()</span><br><span class=\"line\">item = l_iter.__next__()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">item = l_iter.__next__()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">item = l_iter.__next__()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">item = l_iter.__next__()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"string\">3</span></span><br><span class=\"line\"><span class=\"string\">4</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"可迭代对象与迭代器的区别\"><a href=\"#可迭代对象与迭代器的区别\" class=\"headerlink\" title=\"可迭代对象与迭代器的区别\"></a>可迭代对象与迭代器的区别</h5><ul>\n<li>可迭代对象：是一个可以返回迭代器的对象。它本身不一定能够迭代，但它知道如何生成一个能够迭代其内容的迭代器。</li>\n<li>迭代器：是一个可以迭代对象，它实现了 <strong>_<em>next_</em>()</strong> 方法，并在每次调用时返回序列中的下一个元素。</li>\n</ul>\n<h5 id=\"如何判断一个对象是否是迭代器\"><a href=\"#如何判断一个对象是否是迭代器\" class=\"headerlink\" title=\"如何判断一个对象是否是迭代器\"></a>如何判断一个对象是否是迭代器</h5><p>可以使用 isinstance() 判断一个对象是否是 Iterator 对象：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> collections.abc <span class=\"keyword\">import</span> Iterator</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>([], Iterator),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(<span class=\"built_in\">iter</span>([]), Iterator),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(<span class=\"built_in\">iter</span>(<span class=\"string\">&quot;abc&quot;</span>), Iterator),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">False True True</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h5><p>for循环就是基于迭代器协议提供了一个统一的可以遍历所有对象的方法，即在遍历之前，先调用对象的__iter__方法将其转换成一个迭代器，然后使用迭代器协议去实现循环访问，这样所有的对象就都可以通过for循环来遍历了</p>\n<p>最重要的一点，转化成迭代器，在循环时，同一时刻在内存中只出现一条数据，极大限度的节省了内存</p>\n<p><strong>for item in Iterable</strong> 循环的本质就是先通过 iter() 函数获取可迭代对象Iterable的迭代器，然后对获取到的迭代器不断调用 next() 方法来获取下一个值并将其赋值给item，当遇到StopIteration的异常后循环结束。</p>\n<h4 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h4><h5 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h5><p>Python中提供的生成器</p>\n<ul>\n<li>生成器函数：常规函数定义，但是，使用yield语句而不是return语句返回结果。yield语句一次返回一个结果，在每个结果中间，挂起函数的状态，以便下次从它离开的地方继续执行</li>\n<li>生成器表达式：类似于列表推导，但是，生成器返回按需产生结果的一个对象，而不是一次构建一个结果列表</li>\n</ul>\n<p>生成器Generator</p>\n<ul>\n<li>本质：迭代器(所以自带了__iter__方法和__next__方法，不需要我们去实现)</li>\n<li>特点：惰性运算,开发者自定义</li>\n</ul>\n<h5 id=\"生成器函数\"><a href=\"#生成器函数\" class=\"headerlink\" title=\"生成器函数\"></a>生成器函数</h5><p><strong>一个包含yield关键字的函数就是一个生成器函数</strong>。yield 可以为我们从函数中返回值，但是yield又不同于return，return的执行意味着程序的结束，调用生成器函数不会得到返回的具体的值，而是得到一个可迭代的对象。每一次获取这个可迭代对象的值，就能推动函数的执行，获取新的返回值。直到函数执行结束。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">genrator_func1</span>():</span><br><span class=\"line\">    a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;将a赋值&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> a</span><br><span class=\"line\">    b = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;将b赋值&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> b</span><br><span class=\"line\"></span><br><span class=\"line\">g1 = genrator_func1()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(g1,<span class=\"built_in\">next</span>(g1))</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(g1))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">将a赋值</span></span><br><span class=\"line\"><span class=\"string\">&lt;generator object genrator_func1 at 0x0000000000EF8110&gt; 1</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">将b赋值</span></span><br><span class=\"line\"><span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">produce</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 生产包子</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"string\">f&#x27;生产了第<span class=\"subst\">&#123;i&#125;</span>个包子&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">produce_g = produce()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(produce_g.__next__())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===============&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 来顾客了，需要一批包子</span></span><br><span class=\"line\">num = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> produce_g:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    num += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> num == <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">生产了第1个包子</span></span><br><span class=\"line\"><span class=\"string\">===============</span></span><br><span class=\"line\"><span class=\"string\">生产了第2个包子</span></span><br><span class=\"line\"><span class=\"string\">生产了第3个包子</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结</p>\n<ul>\n<li><p>使用了yield关键字的函数不再是函数，而是生成器。（使用了yield的函数就是生成器）</p>\n</li>\n<li><p>yield关键字有两点作用：</p>\n<ul>\n<li>保存当前运行状态（断点），然后暂停执行，即将生成器（函数）挂起</li>\n<li>将yield关键字后面表达式的值作为返回值返回，此时可以理解为起到了return的作用</li>\n</ul>\n</li>\n<li><p>可以使用next()函数让生成器从断点处继续执行，即唤醒生成器（函数）</p>\n</li>\n</ul>\n<h5 id=\"send\"><a href=\"#send\" class=\"headerlink\" title=\"send()\"></a>send()</h5><p>send() 获取下一个值的效果和next基本一致，只是在获取下一个值的时候，给上一yield的位置传递一个数据 </p>\n<p>注意事项：</p>\n<ul>\n<li>第一次使用生成器的时候，是用next获取下一个值</li>\n<li>最后一个yield不能接受外部的值</li>\n</ul>\n<p>可以断点看每步调用的结果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">generator</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">123</span>)</span><br><span class=\"line\">    content = <span class=\"keyword\">yield</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;欢迎来到&#x27;</span>,content)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">456</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">g = generator() <span class=\"comment\"># 调用生成器函数不会得到返回的具体的值，而是得到一个可迭代的对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">ret = g.__next__() <span class=\"comment\"># 第一次使用生成器的时候 是用next获取下一个值 (1)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;***&#x27;</span>,ret) <span class=\"comment\"># (2)</span></span><br><span class=\"line\">ret = g.send(<span class=\"string\">&#x27;英格科技&#x27;</span>) <span class=\"comment\"># (3) 将 &#x27;英格科技&#x27; 传给上一个yield的位置 1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;***&#x27;</span>,ret) <span class=\"comment\"># (4)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">123 # (1)</span></span><br><span class=\"line\"><span class=\"string\">*** 1 # (2)</span></span><br><span class=\"line\"><span class=\"string\">欢迎来到 英格科技 # (3)</span></span><br><span class=\"line\"><span class=\"string\">456 # (3)</span></span><br><span class=\"line\"><span class=\"string\">*** 2 # (4)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"推导式\"><a href=\"#推导式\" class=\"headerlink\" title=\"推导式\"></a>推导式</h3><h4 id=\"列表表达式和生成器表达式\"><a href=\"#列表表达式和生成器表达式\" class=\"headerlink\" title=\"列表表达式和生成器表达式\"></a>列表表达式和生成器表达式</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l)</span><br><span class=\"line\"></span><br><span class=\"line\">l1 = [<span class=\"string\">&#x27;项目%s&#x27;</span>%i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1)</span><br><span class=\"line\"></span><br><span class=\"line\">ret = <span class=\"built_in\">sum</span>(x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">101</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ret)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;项目0&#x27;, &#x27;项目1&#x27;, &#x27;项目2&#x27;, &#x27;项目3&#x27;, &#x27;项目4&#x27;, &#x27;项目5&#x27;, &#x27;项目6&#x27;, &#x27;项目7&#x27;, &#x27;项目8&#x27;, &#x27;项目9&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">5050</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>把列表解析的[]换成()得到的就是生成器表达式</li>\n<li>列表解析与生成器表达式都是一种便利的编程方式，只不过生成器表达式更节省内存</li>\n<li>Python不但使用迭代器协议，让for循环变得更加通用。大部分内置函数，也是使用迭代器协议访问对象的。例如， sum函数是Python的内置函数，该函数使用迭代器协议访问对象，而生成器实现了迭代器协议，所以，我们可以直接这样计算一系列值的和</li>\n</ol>\n<h4 id=\"推导式详细格式\"><a href=\"#推导式详细格式\" class=\"headerlink\" title=\"推导式详细格式\"></a>推导式详细格式</h4><p>把原本应该独立完成或者是通过函数封装的功能，写入到一个列表或者字典中进行推导。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\">variable = [out_exp_res <span class=\"keyword\">for</span> out_exp <span class=\"keyword\">in</span> input_list <span class=\"keyword\">if</span> out_exp == <span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">注释：</span><br><span class=\"line\">  variable：变量名</span><br><span class=\"line\">  out_exp_res：列表生成元素表达式，可以是有返回值的函数。</span><br><span class=\"line\">  <span class=\"keyword\">for</span> out_exp <span class=\"keyword\">in</span> input_list：迭代input_list将out_exp传入out_exp_res表达式中。</span><br><span class=\"line\">  <span class=\"keyword\">if</span> out_exp == <span class=\"number\">2</span>：根据条件过滤哪些值可以。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"列表推导式\"><a href=\"#列表推导式\" class=\"headerlink\" title=\"列表推导式\"></a>列表推导式</h4><p>30及以内能被3整除的正整数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multipes = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">31</span>) <span class=\"keyword\">if</span> i % <span class=\"number\">3</span> == <span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(multipes)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>30以内所有能被3整除的数的平方</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">squared</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x ** <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">multiples = [squared(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">31</span>) <span class=\"keyword\">if</span> i % <span class=\"number\">3</span> == <span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(multiples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[0, 9, 36, 81, 144, 225, 324, 441, 576, 729, 900]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>找到嵌套列表中名字含有两个及以上‘a’的所有名字</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [[<span class=\"string\">&#x27;peach&#x27;</span>,<span class=\"string\">&#x27;Lemon&#x27;</span>,<span class=\"string\">&#x27;Pear&#x27;</span>,<span class=\"string\">&#x27;avocado&#x27;</span>,<span class=\"string\">&#x27;cantaloupe&#x27;</span>,<span class=\"string\">&#x27;Banana&#x27;</span>,<span class=\"string\">&#x27;Grape&#x27;</span>],</span><br><span class=\"line\">          [<span class=\"string\">&#x27;raisins&#x27;</span>,<span class=\"string\">&#x27;plum&#x27;</span>,<span class=\"string\">&#x27;apricot&#x27;</span>,<span class=\"string\">&#x27;nectarine&#x27;</span>,<span class=\"string\">&#x27;orange&#x27;</span>,<span class=\"string\">&#x27;papaya&#x27;</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>([name <span class=\"keyword\">for</span> lst <span class=\"keyword\">in</span> fruits <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> lst <span class=\"keyword\">if</span> name.count(<span class=\"string\">&#x27;a&#x27;</span>) &gt;= <span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拆开</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> lst <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> lst:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> name.count(<span class=\"string\">&#x27;a&#x27;</span>) &gt;= <span class=\"number\">2</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(name,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;avocado&#x27;, &#x27;cantaloupe&#x27;, &#x27;Banana&#x27;, &#x27;papaya&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">avocado cantaloupe Banana papaya</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字典推导式\"><a href=\"#字典推导式\" class=\"headerlink\" title=\"字典推导式\"></a>字典推导式</h4><p>将一个字典的key和value对调</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic1 = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;b&#x27;</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dic2 = &#123;dic1[k]: k <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> dic1&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;1: &#x27;a&#x27;, 2: &#x27;b&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>合并大小写对应的value值，将k统一成小写</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic1 = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;b&#x27;</span>:<span class=\"number\">2</span>,<span class=\"string\">&#x27;y&#x27;</span>:<span class=\"number\">1</span>, <span class=\"string\">&#x27;A&#x27;</span>:<span class=\"number\">4</span>,<span class=\"string\">&#x27;Y&#x27;</span>:<span class=\"number\">9</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dic2 = &#123;k.lower():dic1.get(k.lower(),<span class=\"number\">0</span>) + dic1.get(k.upper(),<span class=\"number\">0</span>) <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> dic1.keys()&#125; <span class=\"comment\"># 大小写字母对应的值相加</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dic2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;a&#x27;: 5, &#x27;b&#x27;: 2, &#x27;y&#x27;: 10&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"集合推导式\"><a href=\"#集合推导式\" class=\"headerlink\" title=\"集合推导式\"></a>集合推导式</h4><p>计算列表中每个值的平方，自带去重功能</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,-<span class=\"number\">1</span>,-<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">squared = &#123;x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> l&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(squared)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;16, 1, 4, 9&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"案例-1\"><a href=\"#案例-1\" class=\"headerlink\" title=\"案例\"></a>案例</h4><p>过滤掉长度小于3的字符串列表，并将剩下的转换成大写字母</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 过滤掉长度小于3的字符串列表，并将剩下的转换成大写字母</span></span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [<span class=\"string\">&quot;eagle&quot;</span>, <span class=\"string\">&quot;cisco&quot;</span>, <span class=\"string\">&quot;huawei&quot;</span>, <span class=\"string\">&quot;huasan&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># l = [str  for str in list1  str.upper() if str.__len__() &lt; 3]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>([i.upper() <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list1 <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(i) &gt;=<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;EAGLE&#x27;, &#x27;CISCO&#x27;, &#x27;HUAWEI&#x27;, &#x27;HUASAN&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>求(x,y)其中x是0-5之间的偶数，y是0-5之间的奇数组成的元祖列表</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>([(x,y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">6</span>) <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">6</span>) <span class=\"keyword\">if</span> x % <span class=\"number\">2</span> == <span class=\"number\">0</span> <span class=\"keyword\">if</span> y % <span class=\"number\">2</span> == <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[(0, 1), (0, 3), (0, 5), (2, 1), (2, 3), (2, 5), (4, 1), (4, 3), (4, 5)]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印九九乘法表</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 案例 一行代码打印 9*9 乘法表</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\n&#x27;</span>.join([<span class=\"string\">&#x27;\\t&#x27;</span>.join([<span class=\"string\">f&#x27;<span class=\"subst\">&#123;i&#125;</span>x<span class=\"subst\">&#123;j&#125;</span>=<span class=\"subst\">&#123;i * j&#125;</span>&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,j+<span class=\"number\">1</span>)]) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>)]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拆解：从后往前 依次嵌套</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, i + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;i&#125;</span>x<span class=\"subst\">&#123;j&#125;</span>=<span class=\"subst\">&#123;i * j&#125;</span>&#x27;</span>,end=<span class=\"string\">&quot;\\t&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Web-框架——Flask\"><a href=\"#Web-框架——Flask\" class=\"headerlink\" title=\"Web 框架——Flask\"></a>Web 框架——Flask</h2><p>特点：</p>\n<ul>\n<li>微框架、简洁、只做他需要做的，给开发者提供了很大的扩展性。</li>\n<li>Flask和相应的插件写得很好，用起来很爽。</li>\n<li>开发效率非常高，比如使用SQLAlchemy的ORM操作数据库可以节省开发者大量书写sql的时间。</li>\n</ul>\n<p>Flask的灵活度非常之高，他不会帮你做太多的决策，一些你都可以按照自己的意愿进行更改。比如：</p>\n<ul>\n<li>使用Flask开发数据库的时候，具体是使用SQLAlchemy还是MongoEngine，选择权完全掌握在你自己的手中。区别于Django，Django内置了非常完善和丰富的功能，并且如果你想替换成你自己想要的，要么不支持，要么非常麻烦。</li>\n<li>把默认的Jinija2模板引擎替换成其他模板引擎都是非常容易的。</li>\n</ul>\n<h3 id=\"安装-Flask\"><a href=\"#安装-Flask\" class=\"headerlink\" title=\"安装 Flask\"></a>安装 Flask</h3><p>Python控制台输入如下命令</p>\n<blockquote>\n<p>pip install flask&#x3D;&#x3D;2.0.3</p>\n</blockquote>\n<h3 id=\"使用-Flask-框架编写简单Python-Web应用程序\"><a href=\"#使用-Flask-框架编写简单Python-Web应用程序\" class=\"headerlink\" title=\"使用 Flask 框架编写简单Python Web应用程序\"></a>使用 Flask 框架编写简单Python Web应用程序</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<p>注释：</p>\n<ul>\n<li>from flask import Flask：这行代码从Flask库中导入Flask类。Flask是一个轻量级的Web应用框架，用于快速开发Web应用程序。</li>\n<li>app &#x3D; Flask(<strong>name</strong>)：创建一个Flask应用实例。__name__是一个特殊的变量，它表示当前Python模块的名称。在这里，它被用作Flask应用的主模块或包名。</li>\n<li>@app.route(‘&#x2F;‘)：这是一个装饰器，用于将URL路由（在本例中是网站的根目录&#x2F;）绑定到下面的函数hello。</li>\n<li>def hello():：定义一个名为hello的函数，它将在用户访问网站根目录时被调用。</li>\n<li>return “Hello World!”：hello函数返回一个字符串”Hello World!”。当用户访问网站根目录时，这个字符串将显示在浏览器中。</li>\n<li>app.run(debug&#x3D;True, host&#x3D;’0.0.0.0’, port&#x3D;5000)：启动Flask应用。以下是参数的说明：<ul>\n<li>debug&#x3D;True：开启调试模式，这样在代码修改后，服务器会自动重新加载，并且在出现错误时提供调试信息。</li>\n<li>host&#x3D;’0.0.0.0’：指定服务器监听的IP地址。0.0.0.0表示监听所有可用的网络接口，这样其他计算机也可以访问这个服务器。</li>\n<li>port&#x3D;5000：指定服务器监听的端口号，本例中为5000。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"URL-与-视图\"><a href=\"#URL-与-视图\" class=\"headerlink\" title=\"URL 与 视图\"></a>URL 与 视图</h3><h4 id=\"URL-与-函数映射\"><a href=\"#URL-与-函数映射\" class=\"headerlink\" title=\"URL 与 函数映射\"></a>URL 与 函数映射</h4><blockquote>\n<p>一个URL要与执行函数进行映射，使用的是@app.route装饰器。@app.route装饰器中，可以指定URL的规则来进行更加详细的映射，</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/test1/&lt;id&gt;&#x27;</span></span>) </span><span class=\"comment\"># 传参</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\"><span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;h1&gt;hello <span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>!&lt;/h1&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/test2/&lt;int:id&gt;&#x27;</span></span>) </span><span class=\"comment\"># 指定参数的数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\"><span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&lt;h1&gt;hello <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(<span class=\"built_in\">id</span>)&#125;</span>!&lt;/h1&gt;&quot;</span> <span class=\"comment\"># 整数拼接会报错，先转换成字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.run(debug=<span class=\"literal\">True</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<p>其中<id>，尖括号是固定写法，语法为<variable>，variable默认的数据类型是字符串。如果需要指定类型，则要写成<a href=\"converter:variable\">converter:variable</a>，其中converter就是类型名称，可以有以下几种：</p>\n<ul>\n<li>string: 默认的数据类型，接受没有任何斜杠&#x2F;的字符串。</li>\n<li>int: 整形</li>\n<li>float: 浮点型。</li>\n<li>path： 和string类似，但是可以传递斜杠&#x2F;。</li>\n<li>uuid： uuid类型的字符串。</li>\n<li>any：可以指定多种路径</li>\n</ul>\n<p>注：如果指定类型为int，如果传入一个不是int类型的，就无法触发这个路由，就会返回404</p>\n<p><em><strong>any</strong></em> 类型</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/user/&lt;any(article,blog):url_path&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"comment\"># 在/user/后面只能是article和blog二选一，并且会被传递到url_path变量</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">url_path</span>(<span class=\"params\">url_path</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;你输入的是<span class=\"subst\">&#123;url_path&#125;</span>,此处只能是article或者blog&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"构造-URL\"><a href=\"#构造-URL\" class=\"headerlink\" title=\"构造 URL\"></a>构造 URL</h4><blockquote>\n<p><strong>url_for</strong> 函数：Flask中的一个非常实用的函数，它用于根据视图函数的名称生成URL</p>\n</blockquote>\n<p>基本用法</p>\n<ul>\n<li><strong>url_for(endpoint,**values)</strong><ul>\n<li>endpoint：视图函数的名称。</li>\n<li>**values：关键字参数，对应于URL中的动态部分。</li>\n</ul>\n</li>\n</ul>\n<p>用途</p>\n<ul>\n<li>当你需要在一个模板中创建指向其他页面的链接时。</li>\n<li>当你的应用程序的路由规则发生变化时，使用 <strong>url_for</strong> 可以确保链接仍然有效，因为函数名不会改变。</li>\n</ul>\n<p>优点</p>\n<ul>\n<li>灵活性：即使你改变了路由规则，只要视图函数的名称保持不变，使用url_for生成的URL仍然是有效的。</li>\n<li>安全性：url_for会自动转义URL参数，这有助于防止跨站脚本攻击（XSS）。</li>\n<li>易于维护：在大型应用程序中，使用url_for意味着你不需要记住所有的URL结构，只需要记住视图函数的名称。</li>\n</ul>\n<p>案例</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, url_for</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 生成指向profile视图的URL</span></span><br><span class=\"line\">    profile_url = url_for(<span class=\"string\">&#x27;profile&#x27;</span>, username=<span class=\"string\">&#x27;alice&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Go to profile: &lt;a href=&quot;<span class=\"subst\">&#123;profile_url&#125;</span>&quot;&gt;<span class=\"subst\">&#123;profile_url&#125;</span>&lt;/a&gt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/user/&lt;username&gt;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">profile</span>(<span class=\"params\">username</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Hello, <span class=\"subst\">&#123;username&#125;</span>!&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>当你访问主页（&#x2F;）时，你会看到一个链接，指向用户Alice的配置文件页面。即使你改变了profile路由的URL结构，主页上的链接仍然会工作，因为它是使用 url_for 生成的。</p>\n<h4 id=\"指定URL末尾的斜杠\"><a href=\"#指定URL末尾的斜杠\" class=\"headerlink\" title=\"指定URL末尾的斜杠\"></a>指定URL末尾的斜杠</h4><p>当访问一个结尾不带斜线的URL：&#x2F;article，会被重定向到带斜线的URL：&#x2F;article&#x2F;上去。但是当我们在定义article的url的时候，如果在末尾没有加上斜杠，但是在访问的时候又加上了斜杠，这时候就会抛出一个404错误页面了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/test&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">haha</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;你好&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>所以还是 URL 末尾还是加上斜杠 <strong>&#x2F;</strong> 比较好</p>\n<h4 id=\"指定HTTP方法\"><a href=\"#指定HTTP方法\" class=\"headerlink\" title=\"指定HTTP方法\"></a>指定HTTP方法</h4><p>在@app.route()中可以传入一个关键字参数 <strong>methods</strong> 来指定本方法支持的HTTP方法，默认情况下，只能使用GET请求，如果使用post提交就会触发错误 “Method Not Allowed”。</p>\n<h4 id=\"页面跳转和重定向\"><a href=\"#页面跳转和重定向\" class=\"headerlink\" title=\"页面跳转和重定向\"></a>页面跳转和重定向</h4><p>重定向分为永久性重定向和暂时性重定向，在页面上体现的操作就是浏览器会从一个页面自动跳转到另外一个页面。比如用户访问了一个需要权限的页面，但是该用户当前并没有登录，因此我们应该给他重定向到登录页面。</p>\n<ul>\n<li>永久性重定向：http的状态码是301，多用于旧网址被废弃了要转到一个新的网址确保用户的访问，最经典的就是京东网站，你输入 <a href=\"http://www.jingdong.com的时候,会被重定向到/\">www.jingdong.com的时候，会被重定向到</a> <a href=\"http://www.jd.com,因为jingdong.com这个网址已经被废弃了,被改成/\">www.jd.com，因为jingdong.com这个网址已经被废弃了，被改成</a> jd.com，所以这种情况下应该用永久重定向。</li>\n<li>暂时性重定向：http的状态码是302，表示页面的暂时性跳转。比如访问一个需要权限的网址，如果当前用户没有登录，应该重定向到登录页面，这种情况下，应该用暂时性重定向。</li>\n</ul>\n<p>在flask中，重定向是通过 <strong>flask.redirect(location,code&#x3D;302)</strong> 这个函数来实现的，location表示需要重定向到的URL，应该配合之前讲的url_for()函数来使用，code表示采用哪个重定向，默认是302也即暂时性重定向，可以修改成301来实现永久性重定向。</p>\n<p>案例</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, session, redirect, url_for</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">&#x27;啦啦啦，我是买糕的小行家&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 使用session的话，需要配置一个secret_key，内容随意，最好别人想不到</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login/&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;username&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> request.form <span class=\"keyword\">and</span> <span class=\"string\">&#x27;password&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> request.form:</span><br><span class=\"line\">        <span class=\"comment\"># 如果没有携带用户名和密码，就显示请登陆</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;请登陆&quot;</span></span><br><span class=\"line\">    username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">    password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> username == <span class=\"string\">&#x27;admin&#x27;</span> <span class=\"keyword\">and</span> password == <span class=\"string\">&#x27;123456&#x27;</span>:</span><br><span class=\"line\">        session[<span class=\"string\">&#x27;username&#x27;</span>] = <span class=\"string\">&#x27;admin&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\"># 登陆成功之后，服务器存储session值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Logged in successfully&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Invalid username or password&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/profile/&quot;</span>,methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">profile</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;username&#x27;</span> <span class=\"keyword\">in</span> session:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">f&quot;欢迎用户<span class=\"subst\">&#123;session[<span class=\"string\">&#x27;username&#x27;</span>]&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 如果已经登陆，就欢迎</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;login&#x27;</span>))</span><br><span class=\"line\">        <span class=\"comment\"># 如果cookie中没有合法的session值，就重定向去登陆</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Jinja2\"><a href=\"#Jinja2\" class=\"headerlink\" title=\"Jinja2\"></a>Jinja2</h2><p>hexo渲染有问题 不传了</p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><h3 id=\"if-name-“-main-”\"><a href=\"#if-name-“-main-”\" class=\"headerlink\" title=\"if __name__ &#x3D;&#x3D; “__main__”\"></a>if __name__ &#x3D;&#x3D; “__main__”</h3><p><strong>if __name__ &#x3D;&#x3D; “__main__”</strong>: 这行代码在Python脚本中非常常见，它的作用是判断当前执行的脚本是否是作为主程序运行的。</p>\n<p>具体来说，Python中的每个模块（即 .py 文件）都拥有一个内置的变量 __name__，当模块被直接运行时，__name__ 的值会设置为 “__main__”；如果模块是被导入到其他模块中时，__name__ 的值会设置为模块的名字。</p>\n<p>以下是一些详细说明：</p>\n<ul>\n<li>作为主程序运行： 当你直接运行一个Python脚本时，比如通过命令行 python script.py，这个脚本的 __name__ 变量会被设置为 “__main__”。此时，if __name__ &#x3D;&#x3D; “__main__”: 下面的代码块将会被执行。</li>\n<li>作为模块导入： 如果另一个Python脚本通过 import script 导入了这个脚本，__name__ 不会被设置为 “__main__”，而是会被设置为 “script”（假设文件名为 script.py）。在这种情况下，if __name__ &#x3D;&#x3D; “__main__”: 下面的代码块不会被执行。</li>\n</ul>\n<p>这个特性通常用于以下几种情况：</p>\n<ul>\n<li>允许脚本同时作为可执行程序和模块使用： 你可以在脚本中定义函数和类，然后在 if __name__ &#x3D;&#x3D; “__main__”: 代码块中调用这些函数和类进行测试或作为程序的主入口。</li>\n<li>避免执行模块导入时的代码： 有时候你不想在模块被导入时执行某些代码，而是只在这些代码作为主程序运行时执行。</li>\n<li>组织代码结构： 通过这种方式，你可以更清晰地分离代码的逻辑部分，使得代码更加模块化和易于维护。</li>\n</ul>\n<h3 id=\"单双引号\"><a href=\"#单双引号\" class=\"headerlink\" title=\"单双引号\"></a>单双引号</h3><blockquote>\n<p>在Python中，单引号(‘)和双引号(“)都可以用来定义字符串。它们之间几乎没有区别，大多数情况下可以根据个人偏好来选择使用。<br>在某些情况下，Python语法规则可能要求使用一种引号而不是另一种。例如，</p>\n<ol>\n<li>在定义<strong>包含变量或表达式的字符串</strong>时，通常使用<strong>双引号</strong>来定义格式化字符（f-string）：<br>name &#x3D; “Alice”<br>f”Hello, {name}!”</li>\n<li>双引号内只能为单引号</li>\n</ol>\n</blockquote>\n<h3 id=\"type-input\"><a href=\"#type-input\" class=\"headerlink\" title=\"type(input())\"></a>type(input())</h3><blockquote>\n<p>&lt;class ‘str’&gt;</p>\n</blockquote>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><blockquote>\n<p><a href=\"https://www.eagleslab.com/\">英格 许文哲老师</a></p>\n</blockquote>\n","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://example.com/tags/Python/"}]},{"title":"7月","date":"2024-07-01T14:52:04.000Z","path":"2024/07/01/2407/","text":"6th周二（7.2）课设差不多了 接着学 Linux 吧慢慢儿来吧 周三（7.3）wcwcwcwcwc 从10点搞到现在 刚才还以为搞好了 还tmd没复原本来想着用代码块做笔记的 然后想搞一下高亮的问题 md 下个插件给搞崩了长个教训吧——非常规操作前先备份！！！！！！！！！！！！！！！！！md 现在 hexo-auto-excerpt 插件不知哪里配置错了 我之前怎么配置的也忘记了算了 手动设置预览吧现在是14:51 早上9点多起的 中午一直在搞这个东西 没睡午觉 生活的魅力吧 辩证看待个体的局限与主观能动性这个点也别睡了 去学会儿吧 今天还没学呢还想着录个搭建博客的视频来着 看是考虑到已经有类似的视频了 以及其他因素 暂时就算了 不下雨且没其他安排的话就去慢跑2公里 再跑跑就能比较轻松破06了现在看上午的发生的意外也就那样吧 收拾一下准备睡了对了，下了个Bandicam，也有Vmware，可以用虚拟机录个博客搭建的视频，差个github的小号 周四（7.4）真好 日和星期正好对应了早上7点20+就醒了 吃个早饭就来图书馆了 果然划水图书馆比较有氛围11:30 部署一下博客 然后去吃个午饭太晒了 不想回宿舍了 在餐车那吃吧 5:18 部署一下 下班儿了先 出去团建一下主要想歇歇 有点儿累 周五（7.5）早上6点20多就醒了 醒了之后一般都睡不着了 不过也不是很困吧 虽说昨天11点半躺到床上 辗转了大概1h才入睡 不过问题不大 玩儿的挺开心的昨晚 今晚没啥安排 可以续上跑步 图书馆8点左右才开馆，还等了半个小时 一直想捡起读书的习惯来着，事不宜迟，就今晚，所有事情都处理好之后，惬意地躺床上看会儿 接着学 Linux 了 11:22 以为不困来着 学着学着感觉就上来了 不过还能抗住吃个午饭 回来再学会儿 然后睡个午觉 外边有点儿晒 13:01 感觉上来了 提前睡会儿 17:20 先去吃个饭吧 吃完饭回来再学会儿 到7点10左右回宿舍 收拾一下顺便恢复一下体力 到8点去慢跑两公里 昨天出去玩儿了 今天给续上 晚上可以看看书课设的事情也得问一下 完善代码准备做汇报ppt 2024年 07月 05日 星期五 18:55:48 CST下班儿下班儿 困得不行 今天就先到这儿了 周六（7.6）近9点醒的 昨晚也辗转了好一会儿 晚上接着去吧白天就接着学 Linux，现在学的都是皮毛的语法，比较简单，学起来也比较轻松 看了其他组的课设，庆幸我们组抽到的比较简单 17:16 先下班儿啦 还有点事儿总是有很多意外 上午没捞着学 中午也没休息好问题不大 周日（7.7）今天是七七事变纪念日来着7月份几日与周几匹配的最后一天8点20多醒的 9:27 接着学吧但行好事 莫问前程 11:26 稍微有点儿小挫折 问题不大 先吃个午饭 17:12 今天提前下班儿好了 正好下面又是新的一节了 而且明天要又开始搞课设了 放松一下甜品打折了 待会儿可以去买点儿 那就去吃饺子了 不去小餐车了运动后 晚上入睡还挺快的好像 被子有点儿厚 换一条 7th周二（7.9）课设忙的差不多了昨天大部分时间都在搞课设，最后剩的时间跑了两把淘汰之王，又去刷了一下战神，还是感觉不然大表哥，远远。最后想去看会儿书，吃了晚饭后倒是去自习室看了，然后又开始刷相册了，然后又发了个说说，然后就到跑步的时间了，然后昨天一天就过去了。早上到来图书馆之前大部分时间在搞报告，现在差不多了。15:57。接着学Linux吧，视频里好像没shell的部分，自己看笔记学吧，都差不多。过两天还有个扫脸支付的项目，可以去试试。 17:58 去吃个晚饭 刚开始的时候还挺困的换了另一个超哥，之前的是老男孩于超，这个是兄弟连的沈超，前一家教培机构不知道是否尚在，后者好像是倒闭了，再听一段时间，看看哪个讲的好点儿沈超的那个播放量最高，当时应该搜的不是“Linux运维”这个词条，要不然应该会选择播放量最高的看吧。而且于超老师的那个，刚开始扯了好多硬件知识，感觉也没讲啥。吃饭吃饭。 周四（7.11）学校的事情，忙的差不多了。还有个5天的课，扫脸支付的项目，了解一下，早回家也没事儿干。9点上课，估计9点半也未必能上课，因为今天下雨了，还挺大的，果然。先学会儿 Linux 吧。哎呀，犹豫就会败北。明天时间合适的票没了，只能后天下午走了。这两天搁学校算是废了，无聊无聊无聊，白天出去倒是在学，一回宿舍算是完蛋了，而且学校都没啥人了。后天走，换个地方，换个心情，换个状态。 周五（7.12）筛选而警惕自恋 理智而切忌上头缘深缘浅 不可强求 明天下午回去 今天接着学这次学Python就把笔记顺便做一下吧 两天把Python最基本的东西学了一下 准确来说是复习了一下 因为之前在学校学过 不过当时没怎么做笔记 做的一点儿笔记还丢了 这次得注意然后项目也可以记录描述一下 周六（7.13）到家了 舟车劳顿 早点儿歇息明天早起去换个牙套 然后回来学项目了 明天项目就结束了 资源得留下 尽快研究掌握 事儿还挺多的 还打算去长安玩儿的 周日（7.14）牙套换好了 生的一副不这么好的牙口 爹娘给的 去不去西安呢 猴子正好在西安但是刚到家 东西刚收拾好 去的话还挺麻烦的 而且舟车劳顿的 项目尽快拿下 从闭包和装饰器开始 闭关修炼 尽快把项目做完 暑假不看几本书不合适一般来说一学期是2本的 这学期的话 刚开学开的是《约翰克里斯朵夫》的上半部 中间穿插了《南渡北归》的第一部南渡 但是《约翰克里斯朵夫》上半部还剩大2&#x2F;5 所以算看了小一部半吧 闲话少唠 开拔 原理不是不困 只是没时间睡且睡不着罢了 回家的第一个午觉睡了2h+ 要不是主动开机感觉能睡死过去是有些无所事事的其实 项目想从头做笔记 但是好像有点儿慢这样 但好像也不是很慢 搞到 闭包 就先歇会儿畏难情绪 还是从头开始做笔记了 那真不会主要是 只能慢慢来了 唉 人的才华好像和这个人如何并没有直接关系 另一种形式的金玉其外吧感觉《童话镇》给我一种平静又忧郁的感觉 没办法 原则问题 零容忍 挣不了多少钱其实 可能一天挣的不如办成一张卡生活呵生活 明天把装饰器、迭代器生成器、推导式研究一下，做做笔记，然后开始Flask别着急 不着急 8th周一（7.15）小孩儿多就是热闹 孩子小的时候很可爱 虽说也会体现出人性的幽暗面 但我以为 小孩子就像像一张并非无暇的白纸 后天的家庭、社会等环境为ta绘上各种色彩 9:14 接着学 上午学的间隙刷b站 刷到《横木世之介》 然后就去看了因为想一口气看完 中午就每睡午觉下午2，3点多看完 又简单记录了一下感想 然后太困了就睡了会儿 定的半小时的闹钟 结果睡了2h醒了差不多就学到现在 19:25 一鼓作气 学完推导式再随便搞点儿东西吃吃 怎么说呢 其实并不是很喜欢打游戏 只是无聊 游戏有及时的反馈 所以打得好会感觉不错 反之则觉得没意思 而且我并不愿意花太多时间、精力 也不愿意学新游戏的玩法 只是无聊罢了 总之不是很喜欢吧而对于不喜欢的人或事物，保持顿感吧思考了一下 还是给卸了吧 或许可以留个地平线4 因为是一个人 而且还算放松吧精力是一定的 有许多更高级的娱乐呀 任何任何成就都是需要不同寻常的努力的 积极的快感也是 下午睡得有点儿晚 且睡的时间挺长的 洗个脸 然后再学会儿吧 不喜欢太晚 准备睡了 明天要发力了 尽量学吧23:20 睡了 周二（7.16）7月份已过去一半了 状态不佳 引以为戒8:33 开始干活儿 13:07昨晚睡前打csgo 就没看书 最后一把还白给了睡得有点儿晚 辗转了好一会儿 昨晚就觉着喉咙不舒服 今天6点半就醒了把 Flask 框架 和 Jinja2 框架走马观花的看了一遍 第一次接触 就算是过了一遍 对我而言仍是不熟悉的名词跟着录屏搓项目吧 自己敲一遍印象更深刻 而且记住了会有助于理解 先睡会儿吧 多定几个闹钟 别睡太久 晚上还得早点儿睡呢 md 又有问题我真干了 不行换博客框架或者主题了了 不好用 代码块老是有问题 现在是14:56 半小时前醒的 还是没解决 无法渲染Jinja2 只能保存本地了 22:04 教程看到了 23.菜单功能 的39:21 明天接着明天应该就能把项目拿下了 然后可以考虑一下长安之行 看会儿《约翰克里斯朵夫》 然后早点儿睡 周三（7.17）8:55喉咙还没好 难绷接着学吧 今天能把这个项目拿下 其实就是照搬而已 先模仿把 13:21还以为是上火呢 才发现一家人全染上了先睡会儿吧 下午再调用一下阿里云的人脸识别接口，然后把登录注册时的人脸认证搞一下 14:31在学校的时候以为江南的雨好频繁 但这两天家里也一直在下雨，而且还挺大的接着学吧 21:25项目差不多了 其实只是跟着写了一遍 很多东西根本不懂感觉在家不比在学校轻松，反而一天到晚窝在屋里在学一样东西，好累呀去西安放松两天吧接下来的话 这个项目收获的首先是眼界吧 很多东西都是第一次接触 比如flask、Jinjia2、一些接口、mysql 知道了有这么回事儿 然后就是Python基本的一些东西 然后就是前端写了好多 趁这个契机边背边查边学然后 Linux 早晚都得学，续上吧 但是喉咙还没好 要不过两天好透了再去吧 那边儿还有小孩儿呢 周四（7.18）8:15说实话 在家的生活质量不比在学校 体现在环境、饮食等等先背个登录注册框的模板吧 然后后端可以用Python 数据库就用 周六（7.20）13:13早上9点多醒的 又下雨了 本来想洗衣服来着把登录注册的代码研究了一下 下午再研究一下前端页面 背一套模板 16:10太阳好晒 洗的衣服能干了 对了还剩几件没洗呢待会儿再锻炼一会儿吧 在家里没操场 不能跑步也不能拉单杠 只能做做平板撑、俯卧撑、跳跳绳吧em… 在家还是会长痘痘 从西安回来去市医院再去看一下吧 大一开学就没去了 镇医院是没有皮肤科的 小地方的医疗资源上午把登录注册的python代码自己写了一遍 下午把前端又跟着写了一遍 再学两节Linux吧 喉咙咋还不好呀 学了两小节Linux 不想学了运动一下吧下了个《素媛》，晚上看，top250从头开始，第一个没看过的非连续剧电影，乱世佳人之前看过一点儿太长了 而且看过原著就pass了 周日（7.21）9:4013号回的家 都8天了 喉咙好的差不多了 差不多可以去长安了反正两个月一直窝在家里肯定不合适 肯定得出去逛逛 大学还有闲 等工作了就没空了在那之前能学多少是多少吧 一个暑假虽然去掉这去掉那也没多少日子 但只要学还是能学不少东西的 学会儿吧","content":"<h2 id=\"6th\"><a href=\"#6th\" class=\"headerlink\" title=\"6th\"></a>6th</h2><h3 id=\"周二（7-2）\"><a href=\"#周二（7-2）\" class=\"headerlink\" title=\"周二（7.2）\"></a>周二（7.2）</h3><p>课设差不多了 接着学 Linux 吧<br>慢慢儿来吧</p>\n<h3 id=\"周三（7-3）\"><a href=\"#周三（7-3）\" class=\"headerlink\" title=\"周三（7.3）\"></a>周三（7.3）</h3><p>wcwcwcwcwc 从10点搞到现在 刚才还以为搞好了 还tmd没复原<br>本来想着用代码块做笔记的 然后想搞一下高亮的问题 md 下个插件给搞崩了<br>长个教训吧——非常规操作前先备份！！！！！！！！！！！！！！！！！<br>md 现在 hexo-auto-excerpt 插件不知哪里配置错了 我之前怎么配置的也忘记了<br>算了 手动设置预览吧<br>现在是14:51 早上9点多起的 中午一直在搞这个东西 没睡午觉</p>\n<p>生活的魅力吧 辩证看待个体的局限与主观能动性<br>这个点也别睡了 去学会儿吧 今天还没学呢还<br>想着录个搭建博客的视频来着 看是考虑到已经有类似的视频了 以及其他因素 暂时就算了</p>\n<p>不下雨且没其他安排的话就去慢跑2公里 再跑跑就能比较轻松破06了<br>现在看上午的发生的意外也就那样吧 收拾一下准备睡了<br>对了，下了个Bandicam，也有Vmware，可以用虚拟机录个博客搭建的视频，差个github的小号</p>\n<span id=\"more\"></span>\n<h3 id=\"周四（7-4）\"><a href=\"#周四（7-4）\" class=\"headerlink\" title=\"周四（7.4）\"></a>周四（7.4）</h3><p>真好 日和星期正好对应了<br>早上7点20+就醒了 吃个早饭就来图书馆了 果然划水图书馆比较有氛围<br>11:30 部署一下博客 然后去吃个午饭<br>太晒了 不想回宿舍了 在餐车那吃吧</p>\n<p>5:18 部署一下 下班儿了先 出去团建一下<br>主要想歇歇 有点儿累</p>\n<h3 id=\"周五（7-5）\"><a href=\"#周五（7-5）\" class=\"headerlink\" title=\"周五（7.5）\"></a>周五（7.5）</h3><p>早上6点20多就醒了 醒了之后一般都睡不着了 不过也不是很困吧 虽说昨天11点半躺到床上 辗转了大概1h才入睡 不过问题不大 玩儿的挺开心的昨晚 今晚没啥安排 可以续上跑步</p>\n<p>图书馆8点左右才开馆，还等了半个小时</p>\n<p>一直想捡起读书的习惯来着，事不宜迟，就今晚，所有事情都处理好之后，惬意地躺床上看会儿</p>\n<p>接着学 Linux 了</p>\n<p>11:22 以为不困来着 学着学着感觉就上来了 不过还能抗住<br>吃个午饭 回来再学会儿 然后睡个午觉 外边有点儿晒</p>\n<p>13:01 感觉上来了 提前睡会儿</p>\n<p>17:20 先去吃个饭吧 吃完饭回来再学会儿 到7点10左右回宿舍 收拾一下顺便恢复一下体力 到8点去慢跑两公里 昨天出去玩儿了 今天给续上 晚上可以看看书<br>课设的事情也得问一下 完善代码准备做汇报ppt</p>\n<p>2024年 07月 05日 星期五 18:55:48 CST<br>下班儿下班儿 困得不行 今天就先到这儿了</p>\n<h3 id=\"周六（7-6）\"><a href=\"#周六（7-6）\" class=\"headerlink\" title=\"周六（7.6）\"></a>周六（7.6）</h3><p>近9点醒的 昨晚也辗转了好一会儿 晚上接着去吧<br>白天就接着学 Linux，现在学的都是皮毛的语法，比较简单，学起来也比较轻松</p>\n<p>看了其他组的课设，庆幸我们组抽到的比较简单</p>\n<p>17:16 先下班儿啦 还有点事儿<br>总是有很多意外 上午没捞着学 中午也没休息好<br>问题不大</p>\n<h3 id=\"周日（7-7）\"><a href=\"#周日（7-7）\" class=\"headerlink\" title=\"周日（7.7）\"></a>周日（7.7）</h3><p>今天是七七事变纪念日来着<br>7月份几日与周几匹配的最后一天<br>8点20多醒的 9:27 接着学吧<br>但行好事 莫问前程</p>\n<p>11:26 稍微有点儿小挫折 问题不大 先吃个午饭</p>\n<p>17:12 今天提前下班儿好了 正好下面又是新的一节了 而且明天要又开始搞课设了 放松一下<br>甜品打折了 待会儿可以去买点儿 那就去吃饺子了 不去小餐车了<br>运动后 晚上入睡还挺快的好像 被子有点儿厚 换一条</p>\n<h2 id=\"7th\"><a href=\"#7th\" class=\"headerlink\" title=\"7th\"></a>7th</h2><h3 id=\"周二（7-9）\"><a href=\"#周二（7-9）\" class=\"headerlink\" title=\"周二（7.9）\"></a>周二（7.9）</h3><p>课设忙的差不多了<br>昨天大部分时间都在搞课设，最后剩的时间跑了两把淘汰之王，又去刷了一下战神，还是感觉不然大表哥，远远。最后想去看会儿书，吃了晚饭后倒是去自习室看了，然后又开始刷相册了，然后又发了个说说，然后就到跑步的时间了，然后昨天一天就过去了。<br>早上到来图书馆之前大部分时间在搞报告，现在差不多了。<br>15:57。接着学Linux吧，视频里好像没shell的部分，自己看笔记学吧，都差不多。过两天还有个扫脸支付的项目，可以去试试。</p>\n<p>17:58 去吃个晚饭 刚开始的时候还挺困的<br>换了另一个超哥，之前的是老男孩于超，这个是兄弟连的沈超，前一家教培机构不知道是否尚在，后者好像是倒闭了，再听一段时间，看看哪个讲的好点儿<br>沈超的那个播放量最高，当时应该搜的不是“Linux运维”这个词条，要不然应该会选择播放量最高的看吧。而且于超老师的那个，刚开始扯了好多硬件知识，感觉也没讲啥。<br>吃饭吃饭。</p>\n<h3 id=\"周四（7-11）\"><a href=\"#周四（7-11）\" class=\"headerlink\" title=\"周四（7.11）\"></a>周四（7.11）</h3><p>学校的事情，忙的差不多了。还有个5天的课，扫脸支付的项目，了解一下，早回家也没事儿干。<br>9点上课，估计9点半也未必能上课，因为今天下雨了，还挺大的，果然。<br>先学会儿 Linux 吧。<br>哎呀，犹豫就会败北。明天时间合适的票没了，只能后天下午走了。<br>这两天搁学校算是废了，无聊无聊无聊，白天出去倒是在学，一回宿舍算是完蛋了，而且学校都没啥人了。后天走，换个地方，换个心情，换个状态。</p>\n<h3 id=\"周五（7-12）\"><a href=\"#周五（7-12）\" class=\"headerlink\" title=\"周五（7.12）\"></a>周五（7.12）</h3><p>筛选而警惕自恋 理智而切忌上头<br>缘深缘浅 不可强求</p>\n<p>明天下午回去 今天接着学<br>这次学Python就把笔记顺便做一下吧 两天把Python最基本的东西学了一下 准确来说是复习了一下 因为之前在学校学过 不过当时没怎么做笔记 做的一点儿笔记还丢了 这次得注意<br>然后项目也可以记录描述一下</p>\n<h3 id=\"周六（7-13）\"><a href=\"#周六（7-13）\" class=\"headerlink\" title=\"周六（7.13）\"></a>周六（7.13）</h3><p>到家了 舟车劳顿 早点儿歇息<br>明天早起去换个牙套 然后回来学项目了 明天项目就结束了 资源得留下 尽快研究掌握</p>\n<p>事儿还挺多的 还打算去长安玩儿的</p>\n<h3 id=\"周日（7-14）\"><a href=\"#周日（7-14）\" class=\"headerlink\" title=\"周日（7.14）\"></a>周日（7.14）</h3><p>牙套换好了 生的一副不这么好的牙口 爹娘给的</p>\n<p>去不去西安呢 猴子正好在西安<br>但是刚到家 东西刚收拾好 去的话还挺麻烦的 而且舟车劳顿的</p>\n<p>项目尽快拿下 从闭包和装饰器开始 闭关修炼 尽快把项目做完</p>\n<p>暑假不看几本书不合适<br>一般来说一学期是2本的 这学期的话 刚开学开的是《约翰克里斯朵夫》的上半部  中间穿插了《南渡北归》的第一部南渡 但是《约翰克里斯朵夫》上半部还剩大2&#x2F;5 所以算看了小一部半吧</p>\n<p>闲话少唠 开拔</p>\n<p>原理不是不困 只是没时间睡且睡不着罢了 回家的第一个午觉睡了2h+ 要不是主动开机感觉能睡死过去<br>是有些无所事事的其实 项目想从头做笔记 但是好像有点儿慢这样 但好像也不是很慢</p>\n<p>搞到 闭包 就先歇会儿<br>畏难情绪 还是从头开始做笔记了 那真不会主要是 只能慢慢来了</p>\n<p>唉 人的才华好像和这个人如何并没有直接关系 另一种形式的金玉其外吧<br>感觉《童话镇》给我一种平静又忧郁的感觉 没办法 原则问题 零容忍</p>\n<p>挣不了多少钱其实 可能一天挣的不如办成一张卡<br>生活呵生活</p>\n<p>明天把装饰器、迭代器生成器、推导式研究一下，做做笔记，然后开始Flask<br>别着急 不着急</p>\n<h2 id=\"8th\"><a href=\"#8th\" class=\"headerlink\" title=\"8th\"></a>8th</h2><h3 id=\"周一（7-15）\"><a href=\"#周一（7-15）\" class=\"headerlink\" title=\"周一（7.15）\"></a>周一（7.15）</h3><p>小孩儿多就是热闹 孩子小的时候很可爱 虽说也会体现出人性的幽暗面 但我以为 小孩子就像像一张并非无暇的白纸 后天的家庭、社会等环境为ta绘上各种色彩</p>\n<p>9:14 接着学</p>\n<p>上午学的间隙刷b站 刷到《横木世之介》 然后就去看了<br>因为想一口气看完 中午就每睡午觉<br>下午2，3点多看完 又简单记录了一下感想 然后太困了就睡了会儿 定的半小时的闹钟 结果睡了2h<br>醒了差不多就学到现在 19:25 一鼓作气 学完推导式再随便搞点儿东西吃吃</p>\n<p>怎么说呢 其实并不是很喜欢打游戏 只是无聊 游戏有及时的反馈 所以打得好会感觉不错 反之则觉得没意思 而且我并不愿意花太多时间、精力 也不愿意学新游戏的玩法 只是无聊罢了 总之不是很喜欢吧<br>而对于不喜欢的人或事物，保持顿感吧<br>思考了一下 还是给卸了吧 或许可以留个地平线4 因为是一个人 而且还算放松吧<br>精力是一定的 有许多更高级的娱乐呀 任何任何成就都是需要不同寻常的努力的 积极的快感也是</p>\n<p>下午睡得有点儿晚 且睡的时间挺长的 洗个脸 然后再学会儿吧</p>\n<p>不喜欢太晚 准备睡了 明天要发力了 尽量学吧<br>23:20 睡了</p>\n<h3 id=\"周二（7-16）\"><a href=\"#周二（7-16）\" class=\"headerlink\" title=\"周二（7.16）\"></a>周二（7.16）</h3><p>7月份已过去一半了 状态不佳 引以为戒<br>8:33 开始干活儿</p>\n<p>13:07<br>昨晚睡前打csgo 就没看书 最后一把还白给了<br>睡得有点儿晚 辗转了好一会儿 昨晚就觉着喉咙不舒服 今天6点半就醒了<br>把 Flask 框架 和 Jinja2 框架走马观花的看了一遍 第一次接触 就算是过了一遍 对我而言仍是不熟悉的名词<br>跟着录屏搓项目吧 自己敲一遍印象更深刻 而且记住了会有助于理解</p>\n<p>先睡会儿吧 多定几个闹钟 别睡太久 晚上还得早点儿睡呢</p>\n<p>md 又有问题我真干了 不行换博客框架或者主题了了 不好用 代码块老是有问题</p>\n<p>现在是14:56 半小时前醒的 还是没解决 无法渲染Jinja2 只能保存本地了</p>\n<p>22:04 教程看到了 23.菜单功能 的39:21 明天接着<br>明天应该就能把项目拿下了 然后可以考虑一下长安之行</p>\n<p>看会儿《约翰克里斯朵夫》 然后早点儿睡</p>\n<h3 id=\"周三（7-17）\"><a href=\"#周三（7-17）\" class=\"headerlink\" title=\"周三（7.17）\"></a>周三（7.17）</h3><p>8:55<br>喉咙还没好 难绷<br>接着学吧 今天能把这个项目拿下 其实就是照搬而已 先模仿把</p>\n<p>13:21<br>还以为是上火呢 才发现一家人全染上了<br>先睡会儿吧 下午再调用一下阿里云的人脸识别接口，然后把登录注册时的人脸认证搞一下</p>\n<p>14:31<br>在学校的时候以为江南的雨好频繁 但这两天家里也一直在下雨，而且还挺大的<br>接着学吧</p>\n<p>21:25<br>项目差不多了 其实只是跟着写了一遍 很多东西根本不懂<br>感觉在家不比在学校轻松，反而一天到晚窝在屋里在学一样东西，好累呀<br>去西安放松两天吧<br>接下来的话 这个项目收获的首先是眼界吧 很多东西都是第一次接触 比如flask、Jinjia2、一些接口、mysql 知道了有这么回事儿 然后就是Python基本的一些东西 然后就是前端写了好多 趁这个契机边背边查边学<br>然后 Linux 早晚都得学，续上吧</p>\n<p>但是喉咙还没好 要不过两天好透了再去吧 那边儿还有小孩儿呢</p>\n<h3 id=\"周四（7-18）\"><a href=\"#周四（7-18）\" class=\"headerlink\" title=\"周四（7.18）\"></a>周四（7.18）</h3><p>8:15<br>说实话 在家的生活质量不比在学校 体现在环境、饮食等等<br>先背个登录注册框的模板吧 然后后端可以用Python 数据库就用</p>\n<h3 id=\"周六（7-20）\"><a href=\"#周六（7-20）\" class=\"headerlink\" title=\"周六（7.20）\"></a>周六（7.20）</h3><p>13:13<br>早上9点多醒的 又下雨了 本来想洗衣服来着<br>把登录注册的代码研究了一下 下午再研究一下前端页面 背一套模板</p>\n<p>16:10<br>太阳好晒 洗的衣服能干了 对了还剩几件没洗呢<br>待会儿再锻炼一会儿吧 在家里没操场 不能跑步也不能拉单杠 只能做做平板撑、俯卧撑、跳跳绳吧<br>em… 在家还是会长痘痘 从西安回来去市医院再去看一下吧 大一开学就没去了 镇医院是没有皮肤科的 小地方的医疗资源<br>上午把登录注册的python代码自己写了一遍 下午把前端又跟着写了一遍 再学两节Linux吧 喉咙咋还不好呀 </p>\n<p>学了两小节Linux 不想学了<br>运动一下吧<br>下了个《素媛》，晚上看，top250从头开始，第一个没看过的非连续剧电影，乱世佳人之前看过一点儿太长了 而且看过原著就pass了</p>\n<h3 id=\"周日（7-21）\"><a href=\"#周日（7-21）\" class=\"headerlink\" title=\"周日（7.21）\"></a>周日（7.21）</h3><p>9:40<br>13号回的家 都8天了 喉咙好的差不多了 差不多可以去长安了<br>反正两个月一直窝在家里肯定不合适 肯定得出去逛逛 大学还有闲 等工作了就没空了<br>在那之前能学多少是多少吧 一个暑假虽然去掉这去掉那也没多少日子 但只要学还是能学不少东西的 学会儿吧</p>\n","categories":[{"name":"打卡","slug":"打卡","permalink":"http://example.com/categories/%E6%89%93%E5%8D%A1/"}],"tags":[]},{"title":"Linux","date":"2024-06-28T10:56:42.000Z","path":"2024/06/28/Linux/","text":"前置知识计算机组成： 中央处理器（CPU）： CPU是计算机的大脑，负责解释和执行程序指令。 它包含了控制单元、算术逻辑单元（ALU）和寄存器。 主板（Motherboard）： 主板是连接和允许各个硬件组件通信的电路板。 它通常包含CPU插座、内存插槽、扩展槽（用于显卡、声卡等）和连接器（用于硬盘驱动器、光驱等）。 内存（RAM）： 随机存取存储器（RAM）用于临时存储正在运行的程序和数据。 RAM的速度非常快，但是断电后数据会丢失。 存储设备： 硬盘驱动器（HDD）和固态驱动器（SSD）用于长期存储数据和程序。 光驱（CD&#x2F;DVD）用于读取和写入光盘数据。 显卡（GPU）： GPU负责处理和输出图像到显示器。 它对于图形密集型应用（如游戏和视频编辑）至关重要。 电源供应（PSU）： 电源供应单元负责为计算机的各个组件提供电力。 输入设备： 键盘和鼠标是最常见的输入设备，用于用户与计算机交互。 其他输入设备包括扫描仪、摄像头和触摸屏。 输出设备： 显示器用于显示计算机的输出。 打印机用于输出纸质文档。 音箱用于输出音频。 网络接口卡（NIC）： 用于连接计算机到网络，实现互联网接入和数据传输。 扩展卡： 声卡、电视调谐卡和其他外围设备的接口卡。 机箱： 用于保护内部组件，并提供散热。 内存的速度远大于硬盘先读取到内存，CPU再执行，然后输出或写入硬盘 读入方式 高并发写入(如微博)：先读入到内存，再写入硬盘 中小企业读取写入：WEB服务器直接写入硬盘，然后再读入内存内存加速——多通道设计 程序、进程与守护进程 程序： 程序是一系列按照特定顺序排列的指令，这些指令被编写来执行特定的任务。程序通常以文件的形式存储在磁盘上，例如可执行文件（在Unix&#x2F;Linux系统中通常以.exe、.app或无扩展名形式存在，在Windows系统中通常以.exe为扩展名）。 程序是静态的，它只是指令的集合，不占用系统资源，只有当程序被加载到内存中并执行时，它才成为进程。 进程： 进程是程序的一次执行实例。当程序被操作系统加载到内存中并开始执行时，它就变成了一个进程。进程具有状态，并且可以被操作系统调度。 每个进程都有独立的地址空间，这意味着一个进程不能直接访问另一个进程的数据。进程可能包含一个或多个线程，线程是进程内的一个执行流。 进程是资源分配的单位，它可能会请求CPU时间、内存空间、文件I&#x2F;O等系统资源。 守护进程： 守护进程（Daemon）是在后台运行的服务进程，通常在系统引导时启动，并在系统关闭时终止。守护进程没有控制终端，也就是说，它们不与任何终端关联，可以在用户登录之前、之后或用户不登录的情况下运行。 守护进程用于执行系统任务，如网络监控、打印服务等，它们通常以超级用户（root）权限运行，以保证有足够的权限来管理系统资源。 在Unix和类Unix系统中，守护进程通常在系统启动时通过init系统或者特定的启动脚本来启动，而在Windows系统中，类似的概念是服务。 在操作系统的管理下，程序、进程和守护进程共同工作，确保计算机系统的稳定运行和高效服务。 存储设备： 机械硬盘：容量大，读写速度慢，价格便宜 固态硬盘：容量小，读写很快，价格贵 软盘：已弃用；DVD：光盘存储介质； U盘：闪存设备； 移动硬盘：类似机械硬盘 在生产环境中，服务器使用AB双电源线路；如果在计算机集群中，可以不使用双电源 服务器： CPU、主板、内存、磁盘、网卡等硬件设备性能更高、安全性更高、更稳定的计算机 在计算机网络中，一个管理资源并为用户提供服务的计算机 分类： 文件服务器：图片、网页文件、视频文件的展示 数据库服务器：提供数据读写的机器 应用程序服务器：开发应用程序的运行机器 机房托管： 服务器运行条件严苛，要求无尘、干燥、低温、五静电 7*24*365 硬件安全防护 hacker入侵 带宽有限 云服务器 云服务器很适合初创公司(阿里云、腾讯云) 优点： 操作和升级部署更方便 访问更快 存储更便捷 更安全、稳定 高性价比 &nbsp; Linux一、前言操作系统：人机交互的中介，是用于控制和管理计算机的各种软、硬件资源的基础系统软件，如检测CPU使用率、内存使用情况、系统磁盘剩余空间 Linux操作系统： 开源、可自由传播 支持多用户同时操作、多任务、支持多CPU、多线程 与Unix操作系统兼容，有其所有优秀特性 移植性高，适用于各种架构的计算机，如PC、服务器、树莓派、嵌入式等环境 Unix操作系统： 成熟、可靠 强大的的网络功能，TCP&#x2F;IP就是基于Unix 支持多种编程语言，C&#x2F;C++、Python 强大的数据库，Oracle、Mysql、DB2 演变 Unix (1969) —— &gt; Linux (1991) ——Android(2007)&gt; - &gt; - &gt; - &gt; - IOS(2007) 拓展 GNU活动：指的是由GNU计划和自由软件基金会（Free Software Foundation, FSF）发起或支持的各种活动，旨在推广自由软件（Free Software）的理念、使用和发展。GNU计划由理查德·斯托曼（Richard Stallman）于1983年发起，目标是创建一个完全由自由软件组成的操作系统——GNU操作系统。 GPL：全称是GNU通用公共许可证（GNU General Public License），是由自由软件基金会（Free Software Foundation, FSF）制定的自由软件许可证。GPL是一种“强”版权许可证，它确保软件的自由性，并允许用户自由地运行、研究、修改和分发软件。 &nbsp;重要的Linux发行版： Red Hat Enterprise Linux (RHEL)： Red Hat Enterprise Linux是Red Hat公司提供的企业级Linux发行版。它以其稳定性和企业支持而受到企业的青睐。 提供收费的技术支持；提供资格认证证书，RHCSA、RHCE、RHCA CentOS： CentOS是RHEL的免费克隆版本，它使用了RHEL的源代码，但去除了Red Hat的商标和商业支持服务。它适合那些需要稳定的服务器环境但没有预算购买商业支持的用户。 Ubuntu： Ubuntu是基于Debian的发行版，由Canonical Ltd.维护。它以用户友好、易于安装和使用的特点而闻名，是桌面和服务器领域的热门选择。 桌面版Linux，也用于物联网、嵌入式领域 openSUSE： openSUSE是一个由社区开发的发行版，由SUSE公司赞助。它提供了两个版本：Leap（稳定版）和Tumbleweed（滚动更新版）。 数据库领域 选择： 需求 选项 服务器端linux系统 Redhat(有钱任性) 或 CentOS Linux桌面系统 Ubuntu开发人员开放平台 安全性要求很高的场景 Debian或FreeBSD 数据库高级服务 SUSE德国 新技术和新功能 Fedora&gt;稳定测试后&gt;redhat(去除logo、收费条款，Centos) 中文版 红旗LinuX、麒麟Linux 主流互联网企业还是 CentOS，所以就学这个 &nbsp; 二、安装用 虚拟机 安装 Linux 系统 VMware Centos7系统iso镜像文件 xshell远程连接工具 &nbsp;虚拟机网络环境: 桥接网络：在当前网络环境下，再分配一个IP地址，让虚拟机和宿主机处于同一个局域网段 网络地址转换(NAT)：在宿主机的网络环境下，再生成一个虚拟局域网，和宿主机处于不同 局域网段 仅主机网络模式：单机模式，无法与外界通信 虚拟终端（TTY）: 在Linux系统中，通常有多个虚拟终端可供使用。你可以通过按下Ctrl + Alt + F1 ~ F7等组合键在不同的虚拟终端之间切换。 Ctrl + Alt + F1：图形化界面(安装过了) Ctrl + Alt + F2：命令行界面 &nbsp; 三、远程连接ssh（安全外壳协议）： 一种网络协议，用于计算机之间的加密登录和执行命令。它为远程登录会话和其他网络服务提供了一种安全传输环境。ssh 命令是用于客户端的，用于建立到远程服务器的安全连接。Windows用户需要单独安装 Xshell 远程连接工具(封装了ssh命令) 步骤： 确保 Linux 虚拟机正确配置了 IP 地址命令行输入 ip addr show 查看网络信息，找到IPV4地址：192.168.197.181 安装 Xshell 软件，进行远程连接建立 会话，即远程操作 Linux 虚拟机的终端，登录账户，实现连接 使用 ssh命令 实现远程连接 基本连接:ssh 用户名@服务器地址 指定端口: (如果服务器不是使用默认的22端口，可以通过-p选项指定端口)ssh -p 端口号 用户名@服务器地址 PC Windows 系统远程连接 Linux 虚拟机(和Xshell一样) ssh 用户名@服务器地址 &nbsp; 四、命令语句Linux命令行 命令 空格 参数(可省) 空格 文件&#x2F;文件夹(可省) ls 缺省’.’，表示当前文件夹的内容 ls -a &#x2F;root ls：列出当前路径下的文件(夹)-a：列出包括隐藏文件在内的所有文件-l：列出详细信息 标准 Linux 命令提示符： 格式： 当前登录的用户名@主机名 当前目录 e.g. [root@localhost ~]# “#” 是超级用户（也称为根用户或root用户）的命令提示符符号 指令： whoami：显示当前登录的用户名 hostname：显示当前的主机名 pwd：显示当前的(绝对)路径 常用命令 ls：列出当前路径下的文件(夹) cd：进入某路径 pwd： 查看当前路径 su：于切换到另一个用户账户并以其身份执行命令 语法： su [选项] [用户名] 如果省略了用户名，su命令默认会切换到根用户（root） 常见选项： su -：以登录shell的方式切换用户，这意味着环境变量和配置文件会被加载，就像用户直接登录一样。 su -l：与su -相同，以登录shell的方式切换用户。 su [用户名]：切换到指定的用户，但不加载该用户的环境变量和配置文件。&gt; - &gt; - logout：退出当前用户 &nbsp; 五、文件结构(一) Windows 与 Linux 操作系统文件结构的区别 根目录结构： Windows： Windows文件系统通常以字母标识的驱动器（如C:、D:等）为根目录，每个驱动器可以有自己的文件系统结构。Windows使用盘符来区分不同的存储设备。 Linux： Linux文件系统有一个单一的根目录（用 &#x2F; 表示），所有的文件和目录都从根目录开始。Linux不使用盘符，而是将所有的存储设备挂载到根目录下的某个目录上，如&#x2F;boot、&#x2F;home、&#x2F;var等。 目录命名约定 Windows： 以 反斜杠 \\ 分割目录 e.g.： C:\\Users\\aj\\blog&gt; Linux： 以 正斜杠 &#x2F; 分割目录，第一个 &#x2F; 表示路径的起点(根目录)，之后的 &#x2F; 表示目录间的分隔符 &#x2F;home&#x2F;aj&#x2F;文档 系统文件和用户文件的位置： Windows： 系统文件通常位于C:\\Windows目录下，用户个人文件通常位于C:\\Users[用户名]目录下。 Linux： 系统文件分布在根目录的多个子目录下，如&#x2F;bin、&#x2F;sbin、&#x2F;etc、&#x2F;lib等，而用户个人文件通常位于&#x2F;home&#x2F;[用户名]目录下。 (二) 常见目录及其含义Linux 常见目录： &#x2F;（根目录）：整个文件系统的起点 dev（Devices）：&#x2F;dev存放抽象硬件 boot（Boot）：&#x2F;boot存放内核与启动文件 lib（Library）：&#x2F;lib存放系统库文件 bin（Binary） :&#x2F;bin 存放基本系统命令的二进制文件，这些命令在任何情况下都必需 sbin（System Binary）：&#x2F;sbin存放系统管理的二进制文件，通常需要超级用户权限才能执行 usr（User） :&#x2F;usr存放安装程序（软件默认目录） var（Variable）：&#x2F;var存放经常变化的文件，如日志文件 mnt：&#x2F;mnt文件挂载目录(u盘、光驱) home（Home）：&#x2F;home普通用户目录 root（Root Home）：&#x2F;root特权用户目录 etc（Etceter）：&#x2F;etc存放配置文件目录 opt（Optional）：&#x2F;opt用于存放第三方软件包和附加应用程序（非强制） proc（Processes）：一个虚拟文件系统，包含系统进程和内核信息 (三) 重要路径 &#x2F;etc &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33：网卡配置文件，包括动态分配 IP、设备名称、启动加载的ONBOOT参数 &#x2F;etc&#x2F;resolv.conf：DNS客户端的配置文件，包括域名解析 &#x2F;etc&#x2F;hostname：主机名配置文件 &#x2F;ect&#x2F;hosts：用于本地名称解析的静态表，它将主机名映射到IP地址 &#x2F;etc&#x2F;motd：“Message of the Day”（每日消息），在用户通过SSH或其他方式登录到系统时会被显示 &#x2F;etc&#x2F;os-release：包含了操作系统的身份信息，如发行版ID、名称、版本号、版本ID和PRETTY_NAME等 &#x2F;proc &#x2F;proc&#x2F;meminfo：系统内存信息 &#x2F;proc&#x2F;cpuinfo：处理器相关信息，如类型、厂家、型号、类型 &#x2F;var var&#x2F;log&#x2F;message：系统级别日志文件 var&#x2F;log&#x2F;secure:用户登录信息日志文件 r&#x2F;log&#x2F;dmesg：记录硬件加载情况的日志信息 (四) 文件管理命令 指令 全称 作用 ls list 列出目录内容 pwd print working directory 打印当前工作目录 cd change directory 改变目录 touch touch 创建新文件或修改文件的时间戳 mkdir make diretory 创建目录 rm remove directory 删除空目录 tree：以树形结构显示⽬录下内容需要单独安装：yum install tree -y 语法 tree [选项] [目录路径] 常⽤参数 C: 在⽂件和⽬录清单加上⾊彩，便于区分各种类型。 d： 显示⽬录名称⽽⾮内容。 D： 列出⽂件或⽬录的更改时间。 f： 在每个⽂件或⽬录之前，显示完整的相对路径名称。 F： 在条⽬后加上⽂件类型的指示符号 (1)cd（change directory） ：改当前工作目录 语法： cd 目标路径 若省略 目标路径 参数，则转到当前用户的主目录，同 cd ~ 几个特殊的目录： . 当前工作目录 .. 上一级工作目录 - 上一次的工作目录 ~ 当前用户的主目录 (2)ls（list）：列出目录内容 语法 ls [选项] [目录或文件] 如果省略了 目录或文件 参数，ls命令会默认列出当前工作目录的内容 常见选项 -l：以长格式列出文件和目录的详细信息，包括权限、所有者、大小和最后修改时间。 -a：列出所有文件，包括以.开头的隐藏文件。 -h：以人类可读的格式显示文件大小，例如K（千字节）、M（兆字节）和G（吉字节）。 -r：逆序列出目录内容。 -t：按文件修改时间排序。 -d：仅列出目录本身，而不是目录的内容。 -S：大写的S，按文件大小排序，默认从大到小。 –full-time：详细输出时间信息 -F：在列出的文件和目录名称后添加指示符，以区分不同类型的文件 &#x2F;：表示目录。 @：表示符号链接。 *：表示可执行文件。 &#x3D;：表示套接字文件。 |：表示FIFO（命名管道） : 普通文件类似结尾为空 -i：显示每个文件的inode编号（ inode 是文件系统中的一种数据结构，用于存储文件的元数据，如权限、所有者、大小和最后修改时间等。inode编号是一个唯一的标识符，用于在文件系统中唯一地识别文件。） ls -l 等效于 ll (3)pwd（print working directory）：打印当前工作目录的绝对路径的命令 (4) 绝对路径与相对路径： 绝对路径：相对于根目录\\ 相对路径：相对于根目录的子目录 touch：创建新文件或改变文件的时间戳如果指定的文件不存在，它将创建一个大小为0的新文件。如果文件已经存在，touch 命令将更新该文件的访问(access)时间和修改(modify)时间为当前时间，而不改变文件的内容。 语法： touch [选项] 文件名 常用选项： -a：只更改访问时间 -m：只更改修改时间 -c：若文件不存在，不创建新文件 -t：指定时间戳，而非当前时间 -r：将指定文件的时间戳（访问时间和修改时间）复制到另一个文件上 (5)mkdir（make directory）：创建目录 语法： mkdir [选项] [目录路径] 常用选项： -m [mode]：设置权限模式 -p：递归创建目录，如果路径中存在，不会报错 (6) mv（move）：移动文件或目录，也可以用来重命名文件或目录 语法： mv [选项] 源文件 目标文件或目录 mv [选项] 当前文件名 新文件名 常见选项 -i：交互式操作，如果目标文件已存在，会询问是否覆盖； -n：不覆盖已存在的目标文件； -v：显示详细的过程信息； -f：强制覆盖已存在的目标文件，不进行提示。 rm（remove）： 语法： rm [选项] 文件或目录 常用选项： -f：强制删除，不提示确认； -i：交互式操作，删除每个文件前提示确认； -r：递归删除，用于删除目录及其内部的文件和子目录； -v：显示详细的过程信息。 rmdir（remove directory）：删除空目录 语法： rmdir [选项] 目录名 常用选项： -p：删除目录及其父级空目录。如果删除的目录是其父目录中唯一的子目录，那么父目录也会被删除。 -v：显示命令执行的详细过程。 -r：递归删除，能删除非空目录 &nbsp; 六、帮助命令 man 指令（Manual）是 Linux 系统中最常用的帮助工具，它提供了命令的详细手册页（man page） 语法： man 命令名 –help 选项显示命令的基本用法和可用的选项 语法： 命令名 –help help 命令只针对bash内置命令 apropos 命令忘记了具体的命令名称，但记得与命令相关的关键词，可以使用 apropos 命令来搜索相关的命令。 语法： apropos 关键词 &nbsp; 七、文件目录管理命令 Vim（Vi IMproved）：是一个高度可配置的文本编辑器，用于在 Unix 和 Linux 系统上进行文本编辑。它是 Vi 编辑器的改进版，Vi 是最早的屏幕编辑器之一，用于在终端环境中编辑文件。 系统默认不安装，须手动安装 yum install vim -y # 通过 yum 软件管理工具，安装 vim，且默认yes vim ⼯作模式 命令模式 : 进⼊ vim 默认的模式 编辑模式 : 按 i 进⼊的 a i o 也可以进⼊ 底⾏模式 : 按下 冒号: 之后进⼊到的模式 vim 打开不存在的文件时，默认会创建文件 基本流程及常用操作： 启动 Vim 并打开文件 vim 文件名 进入插入模式： 按 i 进入插入模式，光标停在当前位置。 按 a 进入插入模式，光标移动到当前字符之后。 按 o 进入插入模式，并在当前行下方新建一行。 按 O (大写) 进入插入模式，并在当前行上方新建一行。 按 ESC 退出编辑模式 退出 Vim： 按 :q：退出 Vim（如果文件未修改）。 按 :q!： 强制退出 Vim，不保存修改。 按 :wq!： 保存修改并强制退出 Vim。 &nbsp;命令模式下 的 导航快捷键： k：向上移动光标。 j：向下移动光标。 h：向左移动光标。 l：向右移动光标。&nbsp; w：移动光标到下⼀个单词 b： 移动到光标上⼀个单词&nbsp; 数字0：移动到本⾏开头 字符$：移动光标到本⾏结尾&nbsp; H：移动光标到屏幕⾸⾏ M：移动到光标到屏幕的中间⼀⾏ L：移动光标到屏幕的尾⾏&nbsp; gg：移动光标到⽂档的⾸⾏ G：移动光标到⽂档尾⾏&nbsp; ctrl + f ：下⼀⻚ ctrl + b ：上⼀⻚&nbsp; &#96;. ：移动光标到上⼀次的修改⾏ &nbsp;命令模式下 的查找（按下 n 查找下⼀处 ,N 上⼀处） &#x2F;xxx：在整篇⽂档向上查找 xxx 字符串 ?xxx：在整篇⽂档向上查找 chaoge 字符串 * 或 #：查找整个⽂档，匹配光标所在的所有单词 gd：找到光标所在单词匹配的单词，并停留在⾮注释的第⼀个匹配上 %：找到括号的另⼀半！！ &nbsp;命令模式下 的 复制、删除、粘贴： yy：拷⻉光标所在⾏ dd：删除光标所在⾏ D：删除当前光标到⾏尾的内容 dG：删除当前⾏到⽂档尾部的内容 p：粘贴 x：向后删除字符 X：先前删除字符 u：撤销上⼀步的操作 .：重复前⼀个执⾏过的动作 批量操作 3yy：拷贝包括光标所在行在内的下3行 2dd：删除包括光标所在行在内的下2行 &nbsp;快捷操作： 删除光标所在位置到⾏尾的内容并进⼊编辑模式 C（⼤写） 在当前⾏下⾯插⼊⼀⾏并进⼊编辑模式 o（⼩写） 在当前⾏上⾯插⼊⼀⾏并进⼊编辑模式 O （⼤写） 快速到达⾏尾并进⼊编辑模式 A 快速保存并退出 ZZ &nbsp;批量增删： 批量删除进⼊批量编辑模式 ( 可视块 ) ctrl+v 选择 上下左右 删除 d 批量增加 :进⼊批量编辑模式 ( 可视块 )ctrl+v 选择区域 输⼊⼤写的 I 进⼊编辑模式 编辑 按两次 ESC 键 批量去掉注释 进⼊命令⾏模式，按 ctrl + v 进⼊ visual block 模式，按字⺟ l 横向选中列 按字⺟ j ，或者 k 选中注释符号 按 d 键就可全部取消注释 批量缩进：:set tabstop&#x3D;4 ：设定 tab 宽度为 4 个字符:set shiftwidth&#x3D;4：设定⾃动缩进为 4 个字符:set expandtab：⽤ space 替代 tab 的输⼊:set noexpandtab：不⽤ space 替代 tab 的输⼊ 命令模式，按下 v ，进⼊可视模式 光标移动选择⾏，输⼊ &gt; ⼤于号，缩进，输⼊ &lt; 缩进 输⼊⾏号缩进： 显示⾏号:set nu # 显示:set nonu # 关闭 ⾏号缩进 :10,20 &gt; #10 到 20 ⾏，缩进⼀次 底线命令模式：在命令模式下输⼊冒号（英⽂的:），就进⼊了底线命令模式，在底线命 令模式下可以输⼊单个或多个字符的命令，常⽤命令有： :q! 强制退出 :wq! 强制写⼊退出 :set nu 显示⾏号 :数字 调到数字那⾏ :set nonu 取消显示⾏号 随时按下 esc 可以退出底线命令模式 &nbsp; 八、交换文件解决方法 .xxx.swp Vi&#x2F;Vim编辑文件正常流程 打开 vim_test.txt 进入编辑模式编辑文件 编辑文件时 Vi 会自动创建一个临时文件 .vim_test.txt.swp 编辑完成，Vi 自动删除临时文件 保存退出 故障原因 及 相应的解决方案 多个窗口同时编辑同一文件 不需要未保存的数据 D 删除临时文件 恢复未保存的数据 R ENTER :wq 恢复未保存的数据 rm -f .vim_test.txt.swp 删除临时文件 多个窗口同时打开一个文件，会有交互界面，若正常退出，临时文件不会保留 &nbsp; 九、文件管理命令重定向符号： 重定向：将数据传到其他地方 输入重定向（Redirecting Input）: &lt; 符号用于从文件读取输入 输出重定向（Redirecting Output）: &gt;：符号用于将输出重定向到一个文件。如果目标文件已存在，它将被覆盖;如果目标文件不存在，它将被创建。 &gt;&gt;：符号用于将输出追加到文件末尾。如果目标文件不存在，它将被创建。 2&gt; 符号用于将标准错误输出重定向到文件。 2&gt;&gt; 符号用于将标准错误输出追加到文件末尾。 &nbsp;cat命令 cat（concatenate） 命令是一个常用的文本查看工具，用于读取文件内容并将其显示在终端中。它也可以用于创建文件、复制文件或合并文件。 语法： cat [选项] 文件名 常用选项： -n：为输出的每一行编号。 -b：与 -n 类似，但是只对非空白行编号。 -s：将多个连续的空白行合并为一个。 -E：在文件结束处显示 $ 字符。 -T：将制表符显示为 ^I。 案例 将 redirecting.test01.txt 的内容覆盖 redirecting.test02.txtcat redirecting.test01.txt &gt; redirecting.test02.txt 将 redirecting.test01.txt 的内容追加到 redirecting.test03.txt 文件结尾cat redirecting.test01.txt &gt;&gt; redirecting.test03.txt 注： 1. 2. 都可合并操作例如：把redirecting_test01.txt和redirecting_test02.txt的内容追加到redirecting_test05.txtcat redirecting_test01.txt redirecting_test02.txt &gt; redirecting_test05.txt 查看文件的内容cat &lt; redirecting.test01.txt（作用同 cat redirecting.test01.txt ） 非交互式编辑 &gt; 或 追加 &gt;&gt; 内容cat &gt;&gt; motto.txt &lt;&lt; EOF&gt; 世界上只有一种英雄主义&gt; 罗曼罗兰&gt; EOF注： &lt;&lt; 将 redirecting.test01.txt 中的内容拆分成多行xargs -n 3 &lt; redirecting_test01.txt xargs 命令：将标准输入的内容转换成命令行参数，并传递给另一个命令执行。它通常用于处理命令的输出，将其内容作为参数传递给其他命令语法： xargs [选项] [命令] 常用选项 -n：指定每次调用命令时传递给命令的参数数量。 清空文件内容cat &#x2F;dev&#x2F;null &gt; file.txt ( &#x2F;dev&#x2F;null 是 linux 系统 的⿊洞⽂件) &nbsp;tac命令与 cat 命令作用相反，反向读取文件内容 &nbsp;管道符 管道符（|）：用于将一个命令的输出作为另一个命令的输入。它允许命令之间进行数据流传递，从而实现复杂的数据处理流程。 常⻅⽤法： #过滤字符串 cat motto.txt | grep “一” #检查 python 程序是否启动 ps -ef | grep “python” #找到 &#x2F;tmp ⽬录下所有 txt ⽂件 ls &#x2F;tmp | grep ‘.txt’ #检查 nginx 的端⼝是否存活 netstat -tunlp | grep nginx &nbsp;grep 命令 grep 是一个强大的文本搜索工具，用于查找文件中匹配指定模式的文本行。它支持正则表达式，可以进行复杂的文本匹配。 语法： grep [选项] [模式] [文件…]模式可为 字符串 常见选项： -i：忽略大小写。 -v：逆向搜索，即显示不包含指定模式的行。 -n：显示匹配行及其行号。 -r：递归搜索目录 -c：只输出匹配行的数量。 -l：只输出包含匹配模式的文件名。 -L：只输出不包含匹配模式的文件名。 -e ：从文件中读取模式。 -E ：支持扩展的正则表达式。 -w：匹配整个单词，而不是字符串中的部分内容 more &amp; less 命令 more 和 less ⽤于分⻚显示（⼀次⼀屏）⽂本，以当前屏幕窗⼝尺⼨ 为准。它们允许用户逐页浏览文件内容，而不会一次性将整个文件加载到内存中 more 命令会显示文件的前几行，然后暂停，等待用户输入命令常用的 more 命令选项： 空格：向下滚动⼀屏 Enter：向下显示⼀⾏ &#x3D;：显示当前⾏号 q： 退出 less 命令提供了比 more 更强大的导航功能和交互式特性 &nbsp;head &amp; tail 命令 head 和 tail 命令用于查看文件的开头和结尾部分。常用于调试和监控文件内容。 head（默认显示前10行，不显示文件名）语法： head [选项] 文件名 常用选项： -n：指定显示前几行，默认是前 10 行。 -q：不显示文件名。 -v：显示文件名 -c：指定字节数 tail 命令：同head特有选项： -f：持续监视文件内容的更新，即文件内容发生变化时自动刷新显示。 echo “测试tail -f 选项” &gt;&gt; &#x2F;home&#x2F;aj&#x2F;文档&#x2F;documents&#x2F;more_test&#x2F;01.txt 常用于监测线上日志文件的请求变动 -F：不断打开文件（对于不存在的文件，-f无法检测，而-F则等待文件建立） cut 命令 cut 命令是一个用于切割文本文件的列或行的工具。它通常用于文本处理和数据提取。 语法 cut 参数 ⽂件 常用选项 -b 以字节为单位分割 -n 取消分割多字节字符，与-b ⼀起⽤ -c 以字符为单位 -d ⾃定义分隔符，默认以 tab 为分隔符 -f 与-d ⼀起使⽤，指定显示哪个区域 参数 N：第 N 个 字节 , 字符 或 字段 , 从 1 计数 起 N-：从 第 N 个 字节 , 字符 或 字段 直⾄ ⾏尾 N-M：从 第 N 到 第 M ( 并包括 第 M) 个 字节 , 字符 或 字段 -M：从 第 1 到 第 M ( 并包括 第 M) 个 字节 , 字符 或 字段 sort 命令 sort 命令用于对文本行进行排序 语法 sort [选项] 文件名 常用的 sort 命令选项包括： 缺省：默认为按字母顺序（比较字符的 ASCLL 值） -n：根据数字值进行排序。 -r：反转排序结果，即从大到小排序。 -u：去重。 -t：指定分隔符，默认为制表符 \\t。 -k：指定要排序的区域。 uniq 命令 uniq 命令可以输出或者忽略⽂件中的重复⾏，常与 sort 排序结合使⽤ 语法： uniq [ 选项 ]… [ ⽂件 ] 从输⼊⽂件或者标准输⼊中筛选相邻的匹配⾏并写⼊到输出⽂件或标准输出。不附加任何选项时匹配⾏将在⾸次出现处被合并。 常用选项： -c：在每⾏前加上表示相应⾏⽬出现次数的前缀编号 -d：只输出重复的⾏ -u：只显示出现过⼀次的⾏ wc 指令 wc 命令⽤于统计⽂件的⾏数、单词、字节数 语法： wc [ 选项 ]… [ ⽂件 ] 常用选项： -c：打印字节数 -m：打印字符数 -l：打印⾏数 -L：打印最⻓⾏的⻓度 -w：打印单词数 echo 命令用于在终端中显示文本或变量值。它是一个简单的命令行工具，用于输出文本到标准输出，即终端屏幕。语法： echo [选项] [输出内容…] 常用选项： -e：启用转义序列 -n：不输出换行符 stat 命令 stat 命令⽤于显示⽂件的状态信息。 stat 命令的输出信息⽐ ls 命令的输出信 息要更详细。 语法 stat [选项] [参数] 选项 -f：显示文件系统的状态而非文件的状态。 -t：以简洁的方式显示时间。 -L：跟随符号链接，显示链接指向文件的信息 find 命令 find 命令是Linux和Unix系统中用于在目录树中搜索文件的强大工具。它允许你根据各种条件来查找文件，并且可以执行相应的操作 语法： find [起始目录] [选项] [操作] 起始目录：指定find命令从哪个目录开始搜索。默认为当前目录。 选项：指定搜索的条件，如文件名、文件类型、大小等。 操作：找到符合条件的文件后执行的操作，如打印文件名、删除文件等。 选项： -maxdepth：设置最⼤⽬录层级； -mindepth：设置最⼩⽬录层级 -atime：按照⽂件访问 access 的时间查找，单位是 天 -ctime：按照⽂件的改变 change 状态来查找⽂件， 单位是天 -mtime：根据⽂件修改 modify 时间查找⽂件（最常 ⽤） -name 按照⽂件名字查找，⽀持 * ? [] 通配符 -group 按照⽂件的所属组查找-perm 按照⽂件的权限查找 -size：按照文件大小搜索。 c: 字节 k: 千字节（ 1024 字节） w: 字（ 2 字节） M: 兆字节（ 1048576 字节） G: 千兆字节（ 1073741824 字节 -perm：按照文件权限搜索。 -type：按照文件类型搜索 d 目录 f 普通文件 -path：配合-prune 参数排除指定⽬录 -prune：使 find 命令不在指定的⽬录寻找 -delete：删除找出的⽂件 -exec 或 -ok：对匹配的⽂件执⾏相应 shell 命令 -print：将匹配的结果标准输出 !：取反 -a：取交集 -o：取并集 案例 按照名字查找 按照时间查找Linux 文件系统 文件的三种时间戳 访问(access)时间（-atime&#x2F;天，-amin&#x2F;分钟）：⽤户最近⼀次访问时间（⽂件 修改了，还未被读取过，则不变）。 修改(modify)时间（-mtime&#x2F;天，-mmin&#x2F;分钟）：⽂件最后⼀次修改时间（数 据变动）。 变化(change)时间（-ctime&#x2F;天，-cmin&#x2F;分钟）：⽂件数据元（例如权限、文件名等）最 后⼀次修改时间。 ⽂件任何数据改变， change 变化，⽆论是元数据变动，或是对⽂件 mv ， cp 等⽂件内容被修改时， modify 和 change 更新当 change 更新后，第⼀次访问该⽂件（ cat ， less 等）， access time ⾸次会更新，之后则不 touch：三种时间都更新touch -a ：仅更新 Access time（同时更新 Change 为 current time ）touch -m ：仅更新 Modify time（同时更新 Change 为 current time ）touch -c ：不创建新⽂件touch -t ：使⽤指定的时间更新时间戳（仅更改 Access time 与 Modify time） 1天以内，被访问 access 过的⽂件find . -atime -1 超过2天，内容变化的⽂件find . -mtime +1 恰好在 7 天内被访问过的⽂件find &#x2F; -maxdepth 3 -type f -atime 7 反向查找最大层级为1，在当前目录下查找非目录文件find . -maxdepth 1 ! -type d 按照访问权限查找在当前目录及其子目录中查找权限为755的文件find . -perm 755 按照文件大小查找在当前目录及其子目录下查找大小超过 150字节 的文件find . -type d -size +150c 指定忽略目录查找find . -path “.&#x2F;dir21” -prune -o -type f -print find .：在当前目录查找命令 -path “.&#x2F;dir21” -prune：忽略指定路径 -o:并 -type f -print：类型为普通文件 执行打印操作 查找并删除在当前目录及其子目录中查找名为”example.txt”的文件并删除它们 find . -name “example.txt” -ok rm {} \\; 注： find命令的 -exec 选项后面的命令需要用 {} 来代替找到的文件名，并且命令的结尾需要用;来表示命令的结束。这是因为分号在shell中有特殊含义，所以需要用反斜杠来转义。 -ok⽐-exec更安全，存在⽤户提示确认 xargs 命令 xargs 常与管道（|）配合使用，将标准输入数据转换成命令行参数。会读取来自标准输入的数据（通常是上一个命令的输出），然后以空格分隔这些数据，并将它们作为参数传递给指定的命令。 语法 xargs [选项] [命令] 选项：xargs 命令的行为可以通过一系列选项来修改。 命令：xargs 将从标准输入接收的数据作为参数传递给这个命令 常用选项： -n：指定每次传递给命令的参数数量。 -d：指定一个定界符，用于分隔输入数据中的字段。 -i：⽤ {} 代替 传递的数据 -I：将输入的每一行替换为指定的替换字符串，然后传递给命令。 -0：以null字符作为输入数据的定界符，适用于处理包含空格、换行符或特殊字符的文件名。 -P：指定并行的进程数量。 示例： 注：xargs 识别字符串的标识是空格或是换⾏符，因此如果遇⻅⽂件名有空格 或是换⾏符， xargs 就会识别为两个字符串，就会报错 -print0：令find 用 NULL(\\0)字符分割文件名，⽽不是换⾏符（ find 默认以 \\n ，因此结果是换⾏输出的），达到”\\0hello world.txt\\0anotherfile.txt\\0”的效果 xargs -0：表示 xargs 以 NULL 作为分隔符 十、文件属性文件或目录的属性主要包括 索引节点 inode ⽂件类型 ⽂件权限 硬链接个数 归属的⽤户和⽤户组 最新修改时间注：文件名不属于文件属性 扩展名Linux ⽂件的扩展名只是⽅便阅读，对⽂件类型不影响Linux 通过⽂件属性区分⽂件类型 Linux 常见扩展名 .txt：⽂本类型 .conf .cfg .configure：配置⽂件 .sh .bash：脚本后缀 .py：脚本后缀 .rpm：红帽系统⼆进制软件包名 .tar .gz .zip：压缩后缀 可以通过 ls -F 给⽂件结尾加上特殊标识ls -l 看第⼀个字符 格式 类型 - 普通⽂件，（⼆进制，图⽚，⽇志， txt 等） d ⽂件夹 directory b 块设备⽂件， &#x2F;dev&#x2F;sda1 ，硬盘，光驱 c 设备⽂件，终端 &#x2F;dev&#x2F;tty1, ⽹络串⼝⽂件 s 套接字⽂件，进程间通信（ socket ）⽂件 p 普通⽂件 管道⽂件 pipe l 链接⽂件 ,link 类型，快捷⽅式 普通⽂件通过如下命令⽣成都是普通⽂件 (windows 中各种扩展名的⽂件，放⼊ linux 也是普通⽂件类型 ) echo touch cat 重定向符号 &gt; cp 特征 ⽂件类型是 “-“ 开头 以内容区分⼀般分为 纯⽂本，可以⽤ cat 命令读取内容，如字符、数字、特殊符号等 ⼆进制⽂件（ binary ）， Linux 中命令属于这种格式，例如 ls 、 cat 等 cp：用于复制文件和目录。其基本用法是将一个或多个文件或目录从一个位置复制到另一个位置。语法 cp [选项] [源文件或目录] [目标文件或目录] 常用选项 -r：递归复制目录及其子目录和文件。 -v：显示复制的详细信息。 -p：保留源文件的属性（权限、修改时间等）。 -d：复制符号链接本身，而不是链接的目标文件。 -a：归档模式，相当于 -dR –preserve&#x3D;all，用于复制目录时保持所有的文件属性。 -i：交互模式，如果目标文件已存在，会提示用户确认是否覆盖。 -n：不覆盖已存在的目标文件。 -f：强制复制，覆盖已存在的目标文件而不提示。 ⽂件夹⽂件权限开头带有 d 字符的⽂件表示⽂件夹，是⼀种特殊的 Linux ⽂件 mkdir cp 拷⻉⽂件夹 链接类型类似 windows 的快捷⽅式 ln 命令创建 ln：于创建文件系统中的链接。链接可以分为两种类型：硬链接（hard link）和符号链接（symbolic link，也称为软链接） 硬链接 类似于引用&#x2F;别名，同物不同名； ln [源文件] [硬链接名] 符号链接(软链接) 类似于指针 ln -s [选项] [源文件或目录] [符号链接名] 选项： -f：如果目标文件已存在，则删除它并创建新的链接。 -v：显示创建链接的详细信息。 注：默认为相对于当前工作目录的相对路径 file 命令 file 确定给定文件或文件系统的类型。它通过检查文件的头部信息、魔术数字和其他特征来尝试猜测文件类型，并输出一个描述性的字符串。 语法： file [选项] [文件或目录…] 常用选项： -b：只输出文件类型，不输出文件名。 -L：跟随符号链接，显示链接指向的文件类型。 which 命令查找 PATH 环境变量中的⽂件， linux 内置命令不在 path 中[root@localhost find_test]# whereis lsls: &#x2F;usr&#x2F;bin&#x2F;ls &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1p&#x2F;ls.1p.gz whereis 命令whereis 命令⽤来定位指令的⼆进制程序、源代码⽂件和 man ⼿册⻚等相 关⽂件的路径[root@localhost find_test]# which python&#x2F;usr&#x2F;bin&#x2F;python &nbsp;tar 命令 tar 是Linux中最常用的归档工具，它可以将多个文件和目录打包成一个单一的归档文件，但不进行压缩。tar 常用于备份和文件传输。 基本用法： tar [选项] [文件或目录…] 常用选项： -c：创建归档文件。 -x：解包归档文件。 -v：显示过程信息。 -f：指定归档文件名。 -t：列出归档文件内容。 -z：通过gzip进行压缩或解压缩。 -C：指定解压缩的目录 –exclude：排除指定文件 案例 仅打包、拆包 注： 参数必须写在最后，后⾯紧跟压缩⽂件名 tar 命令仅打包，习惯⽤ .tar 作为后缀 tar 命令加上 z 参数，⽂件以 .tar.gz 或 .tgz 表示 打包压缩、解压缩拆包 -h 打包链接文件 注：tar 命令的默认行为——即使没有使用 -h 选项，tar 也会尝试跟随符号链接，并将链接指向的文件或目录的内容打包到归档文件中 gzip命令 gzip 是一个常用的文件压缩工具，它使用DEFLATE算法来压缩文件。gzip 通常用于压缩单个文件，而不是目录。 基本用法： gzip [选项] [文件…] 常用选项： -d：解压缩文件。 -v：显示压缩或解压缩过程信息。 -r：递归压缩目录中的所有文件。 -c：将解压缩后的文件写入标准输出，而原始文件保持不变。 注： 文件夹⽆法压缩，必须先 tar 打包 gzip 压缩、解压默认都会删除源⽂件 通过 -c 及重定向实现保留原文件 zip命令 zip 是一个流行的压缩工具，它可以将多个文件和目录压缩成一个单一的ZIP文件。 基本用法： zip [选项] [zip文件] [文件或目录…] 常用选项： -r：递归压缩目录及其子目录。 -m：压缩后删除原始文件。 -v：显示过程信息。 -e：加密压缩文件。 解压缩 unzip l：显示压缩⽂件内所包含的⽂件 d：指定⽂件解压缩后所要存储的⽬录 unzip -d .&#x2F;tmpt song.txt.zip date 命令 date 命令用于显示或设置系统日期和时间的工具。它提供了多种功能，包括显示当前日期和时间、设置日期和时间、执行基于日期的任务等。 语法 date [选项] [+格式] 常用选项 -d：指定日期和时间，可以指定一个字符串表示的时间。 -s：设置系统日期和时间。 -u：使用UTC（协调世界时）时间。 +：指定日期和时间的输出格式。 “%Y-%m-%d %H:%M:%S” shred 命令shred 命令是 Linux 和 Unix 系统中用于安全删除文件的工具。通过多次覆盖文件内容，使用随机数据来确保文件内容无法被恢复。 基本用法： shred [选项] 文件… 常用选项： -n：指定重写次数，默认为25次。 -u：在文件被删除后立即刷新文件系统缓存，确保文件立即从磁盘上删除。 -z：在文件被删除后添加一个0字节的数据块，进一步防止文件被恢复。 -f：强制执行，即使文件无法删除也不会报错。 -v：显示详细信息。 案例： shred -n 25 -uzv song.txt 十一、用户管理用户： root：唯一 权力最大 可以操作任意指令（类似于群主） 普通用户：由root创建 权力有限（类似于群成员 —[sudo 命令提升权限]—&gt; 群管理员） 系统用户：由系统创建 无登录系统功能 系统运行依赖于用户 如bin、ftp等 组：具有相似权限的多个用户的集合 UID &amp; GID在 Linux 系统中，用户和组的管理是通过用户 ID（User ID，UID）和组 ID（Group ID，GID）来实现的。UID 和 GID 是每个用户和组在系统中唯一的标识符。UID： UID 是用来识别系统中的用户。 UID 范围从 0 到 4,294,967,295，其中： UID 0 通常分配给超级用户（root）。 UID 1 到 999 通常分配给系统用户，如邮件、打印服务等。 UID 1000 以上的通常分配给普通用户。 UID 可以是数字，也可以是用户名。 组 ID（GID）：- GID 是用来识别用户所属的组。- GID 范围与 UID 相同，从 0 到 4,294,967,295。- GID 可以是数字，也可以是组名。- 每个用户都属于至少一个组，可以属于多个组。 示例：假设有一个用户名为 user1，其 UID 为 1000，GID 也为 1000。user1 创建了一个名为 group1 的组，其 GID 为 2000。user1 加入了 group1 组，其 GID 列表中包含 1000 和 2000。 注： GID ⽅便为组中的⽤户统⼀规划权限或指定任务 Linux 管理员在创建⽤户时，将⾃动创建⼀个与其同名的⽤户组，这个⽤ 户组只有该⽤户⼀个⼈， 常见命令解释器： &#x2F;bin&#x2F;sh 默认 &#x2F;bin&#x2F;bash 默认 用户的配置文件 (新创建的用户信息，追加到文件尾) &#x2F;etc&#x2F;passwd：⽤户信息 &#x2F;etc&#x2F;shadow：⽤户密码信息 &#x2F;etc&#x2F;group：⽤户组信息 &#x2F;etc&#x2F;gshadow：⽤户组密码信息 &#x2F;etc&#x2F;skel&#x2F;：包含了新用户账户的默认设置的特殊目录 查看配置文件 tail -5 &#x2F;etc&#x2F;passwd 以冒号 “:” 分割 用户家目录：用户登录默认进去的目录，一般为 &#x2F;hmoe&#x2F;用户名 shell解释器： 当前登录⽤户使⽤的解释器。 centos&#x2F;redhat 系统中，默认的 都是 bash 。 若是禁⽌此⽤户登录机器，改为 &#x2F;sbin&#x2F;nologin 即 可 用户管理命令： useradd：创建⽤户 usermod：修改⽤户信息 userdel：删除⽤户及配置⽂件 passwd：更改⽤户密码 chpasswd：批量更新⽤户密码 chage：修改⽤户密码属性 id：查看⽤户 UID 、 GID 、组信息 su：切换⽤户 sudo ⽤ root：身份执⾏命令 visudo：编辑 sudoers 配置⽂件 &#x2F;etc&#x2F;skel&#x2F; 此⽬录存放新⽤户需要的基础环境变量⽂件，添加新⽤户的时候，这个⽬录下所有⽂件⾃动被复制到新家⽬录下，且默认是隐藏⽂件，以点开头 1234567[root@localhost /]# ls -la /etc/skel/总用量 24drwxr-xr-x. 3 root root 78 6月 30 10:51 .drwxr-xr-x. 145 root root 8192 7月 6 15:33 ..-rw-r--r--. 1 root root 18 11月 25 2021 .bash_logout-rw-r--r--. 1 root root 193 11月 25 2021 .bash_profile-rw-r--r--. 1 root root 231 11月 25 2021 .bashrc &nbsp;恢复用户命令提示符 useradd 命令 : useradd 命令⽤于 Linux 中创建的新的系统⽤户。 useradd 可⽤来建⽴⽤户帐号。帐号建好之后，再⽤ passwd 设定帐号的密 码，⽽可⽤ userdel 删除帐号。使⽤ useradd 指令所建⽴的帐号，实际上是保存在 &#x2F;etc&#x2F;passwd ⽂本⽂件 中。 语法： useradd [选项] 用户名 常用选项： -c&lt; 备注 &gt; ：加上备注⽂字。备注⽂字会保存在 passwd 的备注栏位中； -d&lt; 登⼊⽬录 &gt; ：指定⽤户登⼊时的启始⽬录； -D ：变更预设值； -e（有效期限）：指定帐号的有效期限； -f（缓冲天数）：指定在密码过期后多少天即关闭该帐号； -g（群组）：指定⽤户所属的群组； -G（群组）：指定⽤户所属的附加群组； -m ：⾃动建⽴⽤户的登⼊⽬录； -M ：不要⾃动建⽴⽤户的登⼊⽬录； -n ：取消建⽴以⽤户名称为名的群组； -r ：建⽴系统帐号； -s ：指定⽤户登⼊后所使⽤的 shell ； -u ：指定⽤户 id 。 groupadd 命令语法： groupadd [options] groupname常用选项 -g: 指定一个唯一的组ID（GID）。 -r: 创建一个系统组，GID默认小于500。 -f: 如果组已存在，则忽略错误继续执行。示例 usermode 命令 ⽤于修改系统已存在的⽤户信息，只能修改未使⽤中的⽤户 语法 usermod( 选项 )( 参数 ) 选项 -c&lt; 备注 &gt; ：修改⽤户帐号的备注⽂字； -d&lt; 登⼊⽬录 &gt; ：修改⽤户登⼊时的⽬录； -e&lt; 有效期限 &gt; ：修改帐号的有效期限； -f&lt; 缓冲天数 &gt; ：修改在密码过期后多少天即关闭该帐号； -g&lt; 群组 &gt; ：修改⽤户所属的群组； -G&lt; 群组 &gt; ；修改⽤户所属的附加群组； -l&lt; 帐号名称 &gt; ：修改⽤户帐号名称； -L ：锁定⽤户密码，使密码⽆效； -s ：修改⽤户登⼊后所使⽤的 shell ； -u ：修改⽤户 ID ； -U: 解除密码锁定。 案例： -s 禁止用户登录，-M 并不创建家目录 useradd -M -s &#x2F;sbin&#x2F;nologin achao 初始化用户信息指定id为1888 禁止登录 备注 指定组 指定有效期限 指定过期后多久关闭该账号123[root@localhost /]# useradd -u 1888 -s /bin/nologin -c bro -G boy -e &quot;2024/7/10&quot; -f 3 achao[root@localhost /]# id achaouid=1888(achao) gid=1888(achao) 组=1888(achao),1002(boy) 创建⽤户流程 useradd aj 系统读取 &#x2F;etc&#x2F;login.defs （⽤户定义⽂件）和 &#x2F;etc&#x2F;default&#x2F;useradd （⽤户默认配置⽂件）两⽂件中定义的规则创建新⽤户 向 &#x2F;etc&#x2F;passwd 和 &#x2F;etc&#x2F;group ⽂件中添加⽤户和组信息，向 &#x2F;etc&#x2F;shadow 和 &#x2F;etc&#x2F;gshadow 中添加密码信息 根据 &#x2F;etc&#x2F;default&#x2F;useradd ⽂件中配置的信息创建⽤户家⽬录 把 &#x2F;etc&#x2F;skel 中所有的⽂件复制到新⽤户家⽬录中 &#x2F;ect&#x2F;login.defs（用户自定义文件） 和 &#x2F;etc&#x2F;default&#x2F;useradd（用户默认配置文件） 注：过滤命令 grep -v “^#” &#x2F;etc&#x2F;login.defs | grep -v “^$”过滤掉所有以”#”开头的行（注释行）及所有空行 正则表达式： 是一种强大的文本匹配工具，它用于查找、替换或操作文本中符合某个模式的模式。 特殊字符： .：匹配除换行符以外的任意字符。 *：匹配前面的字符零次或多次。 +：匹配前面的字符一次或多次。 ?：匹配前面的字符零次或一次。 {n}：匹配前面的字符恰好 n 次。 {n,}：匹配前面的字符至少 n 次。 {n,m}：匹配前面的字符至少 n 次，但不超过 m 次。 ^：匹配行的开始。 $：匹配行的结束。 |：表示逻辑或，匹配任一字符串。 ()：用于分组，可以用来引用匹配的子串。 […]：表示字符集合，匹配任意一个方括号内的字符。 \\：转义字符，用于匹配特殊字符本身。 &nbsp;userdel 命令：删除⽤户与相关⽂件 建议注释 &#x2F;etc&#x2F;passwd ⽤户信息⽽⾮直接删除⽤户语法： userdel( 选项 )( 参数 )选项： -f ：强制删除⽤户，即使⽤户当前已登录； -r ：删除⽤户的同时，删除与⽤户相关的所有⽂件。 chpasswd 命令：批量改密码 语法： chpasswd用户名1:密码1用户名:密码2ctrl + d 结束输⼊ 用户查询相关命令 1)id 命令语法： id [选项] 用户名 常用选项： -u：显示UID -g：显示GID -un：显示用户名 -gn：显示组名 2)1) whoami:• 该命令用于显示当前登录用户的用户名。• 它简单地输出当前用户的用户名，不需要任何参数。 2) who:• 该命令用于显示登录系统的用户列表。• 默认情况下，它会显示当前登录的所有用户，包括他们的登录名、登录时间、登录的终端（tty）和主机名。• 可以通过添加参数来显示更多信息，例如 -b 显示登录用户的主机名，-q 显示登录用户的数量，-l 显示登录用户的登录名和登录时间。 12345[root@localhost /]# whoaj :0 2024-07-06 12:31 (:0)aj pts/0 2024-07-06 12:31 (:0)root pts/2 2024-07-06 14:55 (192.168.176.244)用户名 用户终端 登录时间 IP 3) w:• 该命令用于显示系统当前的时间、登录用户的列表以及他们正在执行的命令。• 它比 who 命令提供的信息更详细，包括每个用户的登录时间、终端（tty）、主机名、登录的用户名、正在执行的进程 ID（PID）和命令。• 默认情况下，它会显示当前登录的所有用户，以及他们正在执行的命令。 1234567[root@localhost /]# w 16:55:14 up 3:23, 3 users, load average: 0.00, 0.01, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATaj pts/0 :0 12:31 4:23m 0.07s 0.07s bashroot pts/2 192.168.176.244 14:55 2.00s 0.56s 0.04s w⽤户名 终端号 远程主机的 IP 登录时间 终端空闲时间 所有进程以及⼦进程 活动进程使⽤的系统时间 ⽤户执⾏的进程名称 使⽤系统的总时间 第一行：显示当前系统时间、系统从启动到运⾏的时间、系统运⾏中的⽤户数量和1、5、15分钟的平均负荷 （last、lastlog命令查看⽤户详细的登录信息） 4) last:• 显示登录系统的用户的历史记录。• 它显示了每个用户的登录时间、终端（tty）、主机名和登录的用户名。• 默认情况下，它会显示所有用户的最后一次登录信息，但你可以使用参数来显示特定的用户或用户组的信息。 5) lastlog:• 显示系统中所有用户最后一次登录的时间和日期。• 它显示了每个用户的用户名、登录主机名、登录的终端（tty）和最后一次登录的时间。• 默认情况下，它会显示所有用户的最后一次登录信息，但你可以使用参数来显示特定的用户或用户组的信息。 su 用户切换命令用法： su 用户名 #直接切换，没有完全切换环境变量 su - 用户名 #减号 - 代表环境变量也会切换到目标用户的环境，建议使用 注：root 用户切换到普通用户不需要密码，普通用户切换到其他用户需要密码 sudo 提权命令：⽤来以其他身份来执⾏命令，预设的身份为 root。在 &#x2F;etc&#x2F;sudoers 中设置了可执⾏ sudo 指令的⽤户。普通⽤户不需要 root 密码，即可⽤ root 权限执⾏命令 sudo命令在提高系统安全性方面非常重要。它允许系统管理员精细控制用户的权限，减少了root用户的直接使用，从而降低了系统被恶意操作的风险。此外，sudo会记录所有执行的命令和操作者的信息到日志文件中，这有助于审计和追踪。 语法： sudo 命令 # 以root身份执行命令 sudo -u 用户 命令 # 以指定用户的身份执行命令 常用选项： -u：指定要以哪个用户身份执行命令。 -l：列出当前用户可以执行的命令。 -k：清除用户的密码缓存，下次执行sudo时需要重新输入密码。 -s：以指定的用户身份启动一个shell。 visudovisudo ⽤于编辑 &#x2F;etc&#x2F;sudoers ⽂件，且提供语法检测，⽤于配置 sudo 命令 [root@localhost ~]# visudo # 以 root 身份通过 visudo 配置 &#x2F;etc&#x2F;sudoers 文件 &#x2F;root # 搜索 “root” n # next 找到如下部分，yy 复制，p 黏贴，然后 修改用户名1234## Allow root to run any commands anywhereroot ALL=(ALL) ALLaj ALL=(ALL) ALLhouzi ALL=(ALL) ALL aj：指定用户ALL&#x3D;(ALL)：从任何终端，并以任何用户或组的身份执行ALL：执行任何命令（在使用 sudo 时需要输入自己的密码） 十二、文件管理文件属性： 12345[aj@localhost file_test]$ ll总用量 0lrwxrwxrwx. 1 root root 8 7月 7 11:22 test.link -&gt; test.txt-rw-r--r--. 1 root root 0 7月 7 11:19 test.txtdrwxr-xr-x. 2 root root 6 7月 7 11:19 tmp 第1个符号 d：文件夹； - :普通文件 l：软链接，快捷方式 后9个字母表示权限，3个一组，分别表示：属主(owner)、属组(group)、其他人(others)的权限一组权限表示，是否可读(r&#x2F;-) 是否可写(w&#x2F;-) 是否可执行(x&#x2F;-) r：read 可读，可以⽤ cat、more、less、head、tail等命令查看，数字表示为4 w：write 可写，可以vim编辑、使用重定向符号或者删除这个⽂件，数字表示为2 x：executable 可以执⾏，数字表示为1 -：没有权限，数字表示为0 .：通常表示这个文件或目录有额外的属性设置，比如ACLs（Access Control Lists） 2 :这个数字表示硬链接（hard link）的数量。硬链接是指向同一个inode的文件名。在这个例子中，anaconda 目录有两个硬链接，通常这意味着目录本身和目录的父目录中的指向。 root：这是目录的所有者（owner），也就是创建这个目录的用户。 root：这是目录的所属组（group），也就是目录所属的用户组。 232：这个数字表示目录的大小，以字节为单位。注意，目录的大小通常不是目录中文件的总大小，而是目录本身元数据的大小。 6月 30 11:03：这个是目录最后修改时间的日期和时间。 anaconda：这是目录的名称。 附： 常⻅权限对应 ：444 r–r–r– 均只读600 rw——- 仅所有者可读、写644 rw-r–r– 均可读 仅所有者可写666 rw-rw-rw- 均可读、可写700 rwx—— 仅所有者可读、写、运行744 rwxr–r– 可读 仅所有者可写、运行755 rwxr-xr-x 可读、可运行 仅所有者可写777 rwxrwxrwx 均可读、可写、可运行 chmod 命令 chmod（change mode）:用于改变文件或目录权限的命令 语法： chmod [选项] [操作对象] [操作设定] [权限类别] 操作对像： u：⽂件属主权限 g：同组⽤户权限 o：其它⽤户权限 a：所有⽤户（包括以上三种） 权限设定： +：增加权限 -：取消权限 =：唯⼀设定权限 权限类别： r：读权限 w：写权限 x：执⾏权限 文件的r w x 文件夹的r w x chown 命令修改⽂件属主、属组信息 语法 chown 新属主的名字 文件&#x2F;文件夹 # 修改文件的用户名 chown :属组文件 文件&#x2F;文件夹 # 修改文件的用户组 chown 属主:属组文件 文件&#x2F;文件夹 # 同时修改文件的属主，属组 参数 -R：递归处理所有的⽂件及⼦⽬录 -v：为处理的所有⽂件显示诊断信息只有超级用户（root）或者具有相应 sudo 权限的用户可以更改文件的所有者，即使您是文件的所有者 umask 命令 用于设置文件和目录创建时默认权限掩码的命令 也称之为遮罩码，防⽌⽂件、⽂件夹创建的时候,权限过⼤。当新⽂件被创建时，其最初的权限由⽂件创建掩码决定。⽤户每次注册进⼊系统时，umask 命令都被执⾏，并⾃动设置掩码改变默认值，新的权限将会把旧的覆盖。 umask 默认配置在 &#x2F;etc&#x2F;profile 61-64 ⾏ 基本用法 查看当前的 umask 值： umask 设置新的 umask 值： umask [value] 语法参数 -S: 以字符的形势显示当前的掩码。 -p ：带 umask 开头以数字的形势显示当前掩码 Linux 默认设置：新创建文件的权限是666(出于安全考虑，默认非可执行) 文件夹是777 实际权限 &#x3D; 默认权限 - umask （root 和 普通用户的umask不同） 123456789101112131415161718192021[monkey@localhost umask_test]$ touch 01.txt[monkey@localhost umask_test]$ mkdir dir[monkey@localhost umask_test]$ ll总用量 0-rw-r--r--. 1 monkey girl 0 7月 7 16:16 01.txtdrwxr-xr-x. 2 monkey girl 6 7月 7 16:16 dir# 普通用户的umask[monkey@localhost umask_test]$ umask0022[monkey@localhost umask_test]$ umask -Su=rwx,g=rx,o=rx[monkey@localhost umask_test]$ umask -pumask 0022# root 用户的umask[root@localhost ~]# umask0022[root@localhost ~]# umask -Su=rwx,g=rx,o=rx[root@localhost ~]# umask -pumask 0022 Linux 默认权限 文件： 文件夹： 注： umask 值不得⼤于 6 umask 计算出的 ⽂件权限 不得拥有执⾏权限 x ，如果计算结果中有执⾏权限(–x)，则需要将其加⼀(-w-)123456-rw-r---w-. 1 monkey girl 0 7月 7 16:34 02.txt[monkey@localhost umask_test]$ umask 0025[monkey@localhost umask_test]$ touch 02.txt[monkey@localhost umask_test]$ ll总用量 0-rw-r---w-. 1 monkey girl 0 7月 7 16:34 02.txt chattr lsattr 命令 chattr 和 lsattr 是Linux系统中用于查看和修改文件或目录的扩展属性（attributes）的命令。这些扩展属性可以影响文件的行为，例如是否可以被修改或删除。 chattr（Change Attribute） 命令用于改变文件或目录的扩展属性。基本用法 chattr [模式] 扩展属性 文件 模式 +：增加参数 -：移除参数 =：更新为指定参数 扩展属性 i：不可变（immutable），文件不能被修改、删除或链接。 a：只追加（append only），只能向文件中添加数据，不能删除或修改。 A：不让系统修改⽂件最后访问时间 c：压缩（compressed），文件在写入时会被自动压缩。 s：安全删除（secure deletion），文件被删除时会被覆盖以防止数据恢复。 u：undelete，允许文件被恢复。 lsattr（List Attribute）：命令用于列出文件或目录的扩展属性。基本用法 lsattr [options] file 注： chaddr命令通常需要有 root 权限 使用这些命令时需要小心，因为它们可能会影响文件系统的正常操作。 十三、shell（一）shell 概述 shell 命令解释器，用户与操作系统交互的界面 解释型编程语言，可以直接调用 Linux 系统命令；一个强大的脚本编程环境，用户可以通过编写脚本来执行复杂的任务 外出应用程序——shell命令解释器——系统内核——硬件 Linux 系统常见的 shell： sh（Bourne Shell）：由 Steve Bourne 开发，是 UNIX 系统上的原始 shell。许多后来的 shell 都尝试保持与 sh 的兼容性。 Bash（Bourne-Again SHell）：这是大多数 Linux 发行版中最常见的默认 shell。Bash 是一个改进版的 Bourne shell（sh），添加了许多新特性，同时保持与 sh 的脚本兼容。 注： 系统支持的 shell 可在 &#x2F;etc&#x2F;shells 查看 1234567[root@localhost /]# cat /etc/shells/bin/sh/bin/bash/usr/bin/sh/usr/bin/bash/bin/tcsh/bin/csh 可输入 shell 名称切换指定 shell，并通过输入 exit 退回到默认的 bash 123456[root@localhost /]# shsh-4.2# exitexit[root@localhost /]# csh[root@localhost /]# exitexit &nbsp; （二）shell 脚本的执行方式echo echo 命令用于在终端上输出文本，可以将字符串或指定变量显示在屏幕上。 语法： echo [选项] [字符串] 常用选项： -n：取消输出末尾的换行符。 -e：启用反斜杠转义解释，允许使用转义字符。 [root@localhost /]# echo -e &quot;ab\\bc&quot; # \\b 退格，即向左删除 ac [root@localhost /]# echo -e &quot;a\\tb\\tc\\n1\\t2\\t3&quot; # \\t tab制表键 \\n 换行键 a b c 1 2 3 [root@localhost /]# echo -e &quot;\\x61\\t\\x62\\t\\x63\\n\\x64\\t\\x65\\t\\x66&quot; # \\xhh 按照十六进制ASC码输出 a b c d e f [root@localhost /]# echo -e &quot;\\e[1;36m abcd \\e[0m&quot; # abcd [root@localhost /]# 注：\\e[1 和 \\e[0m 分别表示开启和结束颜色输出#30m&#x3D;黑色，31m&#x3D;红色，32m&#x3D;绿色，33m&#x3D;黄色#34m&#x3D;蓝色，35m&#x3D;洋红，36m&#x3D;青色，37m&#x3D;白色 shebang 一个由两个字符 #! 组成的行，出现在脚本文件的第一行。**#!** 后通常跟着一个路径，指向解释该脚本内容的程序。 脚本案例案例 12345678910111213141516[aj@localhost tmp]$ cat test.sh#!/bin/bashecho &quot;超哥强呀，奥⼒给&quot;#!/bin/bash 这⾥就是注释的作⽤了[aj@localhost tmp]$ test.shbash: test.sh: 未找到命令...[aj@localhost tmp]$ chmod u+x test.sh[aj@localhost tmp]$ test.shbash: test.sh: 未找到命令...[aj@localhost tmp]$ ./test.sh超哥强呀，奥⼒给[aj@localhost tmp]$ 系统自带的bash脚本，开机启动脚本 12[aj@localhost tmp]$ head -1 /etc/rc.d/init.d/network#! /bin/bash 注： 如果脚本未指定 shebang ，脚本执⾏的时候，默认⽤当前 shell 去解释脚本，即 $SHELL #! 之后的解释程序，需要写其绝对路径 养成注释脚本，规范开发的习惯 脚本执行 赋予脚本执行权限，通过绝对路径或相对路径调用（不能直接写文件名） chmod 755 test.sh .&#x2F;test.sh 通过 Bash 调用执行脚本（ bash 直接加 文件名，不赋予执行权限也能执行：本质是用 bash 解释脚本） bash test.sh 注：习惯上先赋予脚本执行权限，再通过相对路径或绝对路径调用执行 dos2unix 用于转换 Windows 系统中编写的脚本 为 Unix 的格式 yum -y install dos2unix #可能需要通过 yum 手动安装 &nbsp; （三）Bash 基本功能(1) 历史命令与补全历史命令 history 命令 语法： history [选项] [历史命令保存文件] 常用选项： -c： 清空历史命令 -w： 把缓存中的历史命令写入历史命令保存文件 ~&#x2F;.bash_history 注： -c 会把缓存和文件中保存的历史命令都删除（不建议） -w 默认情况下是等正常退出之后，缓存中的命令才会写入 ~&#x2F;.bash_history 历史命令默认会保存1000条,可以在环境变量配置文件&#x2F;etc&#x2F;profile “HISTSIZE&#x3D;1000” 中进行修改，重新登录后生效。若历史记录超过设置的数量，则从头开始删除来给新命令让位。 历史命令的调用： 使用上、下箭头调用以前的历史命令 使用“!n”重复执行第n条历史命令（调用 history 命令，会给历史命令编号） 使用“!!”重复执行上一条命令 使用“!字串”重复执行最后一条以该字串开头的命令 自动补全在Bash中，命令与文件补全是非常方便与常用的功能，我们只要在输入命令或文件时，按 “Tab” 键就会自动进行补全 若以当前字符串开头的命令或目录不止一个，按两下 Tab 键，会显示出所有以当前字符串开头的命令 (2) 命令别名与常用快捷键命令别名指令 设定命令别名[root@localhost ~]# alias 别名&#x3D;’原命令’ 查询命令别名[root@localhost ~]# alias 让别名永久生效（alias方式 重启系统别名就会失效）[root@localhost ~]# vim &#x2F;root&#x2F;.bashrc 删除别名[root@localhost ~]# unalias 别名 命令执行时顺序：1 第一顺位执行用绝对路径或相对路径执行的命令。2 第二顺位执行别名。3 第三顺位执行Bash的内部命令。4 第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令。 常用快捷键注：均小写 快捷键 作用 Ctrl + C 强制终止当前命令 Ctrl + L 清屏，相当于clear Ctrl + D 退出当前终端，相当于logout Ctrl + R 在历史命令中搜索，按下ctrl+R之后，就会出现搜索界面，只要输入搜索内容，就会从历史命令中搜索 Ctrl + A&#x2F;E 把光标移动到命令行开头&#x2F;结尾 Ctrl + U&#x2F;K 删除或剪切光标之前&#x2F;后的内容 Ctrl + Y 粘贴 Ctrl + Z 暂停并放入后台 Ctrl + S 暂停屏幕输出 Ctrl + Q 恢复屏幕输出 (3) 输入输出重定向标准输入输出 输出重定向 注： 命令要有输出（像cd命令，路径正确的情况下无输出，就不行） 2与&gt;无空格 输出内容无意义的命令 &amp;&gt; &#x2F;dev&#x2F;null（只执行命令 无论有无输出） 同理也存在 命令 &gt; 文件1 2&gt; 文件2 输入重定向 命令&lt;文件 把文件作为命令的输入 命令&lt;&lt; 标识符…标识符 把标识符之间内容作为命令的输入 例如：搭配 wc (4) 多命令顺序执行与管道符多命令顺序执行dd 命令：用于复制和转换文件 dd if&#x3D;输入文件 of&#x3D;输出文件 bs&#x3D;字节数 count&#x3D;个数 if&#x3D;输入文件 指定源文件或源设备 of&#x3D;输出文件 指定目标文件或目标设备 bs&#x3D;字节数 指定一次输入&#x2F;输出多少字节，即把这些字节看做一个数据块 count&#x3D;个数 指定输入&#x2F;输出多少个数据块 例子：[root@localhost ~]# date ; dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;root&#x2F;testfile bs&#x3D;1k count&#x3D;100000 ; date 测试命令执行时间 date; 待测试命令; date [root@localhost ~]# ls anaconda-ks.cfg &amp;&amp; echo yes[root@localhost ~]# ls &#x2F;root&#x2F;test || echo no 判断一个命令是否正确 [root@localhost ~]# 命令 &amp;&amp; echo yes || echo no 管道符命令1的正确输出作为命令2的操作对象 命令1 | 命令2 注：命令1 必须有正确的输出 例子：[root@localhost ~]# ll -a &#x2F;etc&#x2F; | more[root@localhost ~]# netstat -an | grep “ESTABLISHED” netstat：用于显示各种网络相关信息，如网络连接、路由表、接口统计信息、伪装连接以及多播成员的工具 grep [选项] “搜索内容” 文件名选项：-i： 忽略大小写-n： 输出行号-v： 反向查找–color&#x3D;auto 搜索出的关键字用颜色显示 (5) 通配符与其他特殊符号通配符通配符用于匹配文件名，与正则表达式相似但不同 Bash中其他特殊符号 参考 shell 前： 老男孩 于超 shell 及之后：兄弟连 沈超","content":"<h1 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h1><p><strong>计算机组成</strong>：</p>\n<ul>\n<li>中央处理器（CPU）：<ul>\n<li>CPU是计算机的大脑，负责解释和执行程序指令。</li>\n<li>它包含了控制单元、算术逻辑单元（ALU）和寄存器。</li>\n</ul>\n</li>\n<li>主板（Motherboard）：<ul>\n<li>主板是连接和允许各个硬件组件通信的电路板。</li>\n<li>它通常包含CPU插座、内存插槽、扩展槽（用于显卡、声卡等）和连接器（用于硬盘驱动器、光驱等）。</li>\n</ul>\n</li>\n<li>内存（RAM）：<ul>\n<li>随机存取存储器（RAM）用于临时存储正在运行的程序和数据。</li>\n<li>RAM的速度非常快，但是断电后数据会丢失。<span id=\"more\"></span></li>\n</ul>\n</li>\n<li>存储设备：<ul>\n<li>硬盘驱动器（HDD）和固态驱动器（SSD）用于长期存储数据和程序。</li>\n<li>光驱（CD&#x2F;DVD）用于读取和写入光盘数据。</li>\n</ul>\n</li>\n<li>显卡（GPU）：<ul>\n<li>GPU负责处理和输出图像到显示器。</li>\n<li>它对于图形密集型应用（如游戏和视频编辑）至关重要。</li>\n</ul>\n</li>\n<li>电源供应（PSU）：<ul>\n<li>电源供应单元负责为计算机的各个组件提供电力。</li>\n</ul>\n</li>\n<li>输入设备：<ul>\n<li>键盘和鼠标是最常见的输入设备，用于用户与计算机交互。</li>\n<li>其他输入设备包括扫描仪、摄像头和触摸屏。</li>\n</ul>\n</li>\n<li>输出设备：<ul>\n<li>显示器用于显示计算机的输出。</li>\n<li>打印机用于输出纸质文档。</li>\n<li>音箱用于输出音频。</li>\n</ul>\n</li>\n<li>网络接口卡（NIC）：<ul>\n<li>用于连接计算机到网络，实现互联网接入和数据传输。</li>\n</ul>\n</li>\n<li>扩展卡：<ul>\n<li>声卡、电视调谐卡和其他外围设备的接口卡。</li>\n</ul>\n</li>\n<li>机箱：<ul>\n<li>用于保护内部组件，并提供散热。</li>\n</ul>\n</li>\n</ul>\n<p>内存的速度远大于硬盘<br>先读取到内存，CPU再执行，然后输出或写入硬盘</p>\n<p>读入方式</p>\n<ul>\n<li>高并发写入(如微博)：先读入到内存，再写入硬盘</li>\n<li>中小企业读取写入：WEB服务器直接写入硬盘，然后再读入内存<br>内存加速——多通道设计</li>\n</ul>\n<p>程序、进程与守护进程</p>\n<p>程序：</p>\n<ul>\n<li>程序是一系列按照特定顺序排列的指令，这些指令被编写来执行特定的任务。程序通常以文件的形式存储在磁盘上，例如可执行文件（在Unix&#x2F;Linux系统中通常以.exe、.app或无扩展名形式存在，在Windows系统中通常以.exe为扩展名）。</li>\n<li>程序是静态的，它只是指令的集合，不占用系统资源，只有当程序被加载到内存中并执行时，它才成为进程。</li>\n</ul>\n<p>进程：</p>\n<ul>\n<li>进程是程序的一次执行实例。当程序被操作系统加载到内存中并开始执行时，它就变成了一个进程。进程具有状态，并且可以被操作系统调度。</li>\n<li>每个进程都有独立的地址空间，这意味着一个进程不能直接访问另一个进程的数据。进程可能包含一个或多个线程，线程是进程内的一个执行流。</li>\n<li>进程是资源分配的单位，它可能会请求CPU时间、内存空间、文件I&#x2F;O等系统资源。</li>\n</ul>\n<p>守护进程：</p>\n<ul>\n<li>守护进程（Daemon）是在后台运行的服务进程，通常在系统引导时启动，并在系统关闭时终止。守护进程没有控制终端，也就是说，它们不与任何终端关联，可以在用户登录之前、之后或用户不登录的情况下运行。</li>\n<li>守护进程用于执行系统任务，如网络监控、打印服务等，它们通常以超级用户（root）权限运行，以保证有足够的权限来管理系统资源。</li>\n<li>在Unix和类Unix系统中，守护进程通常在系统启动时通过init系统或者特定的启动脚本来启动，而在Windows系统中，类似的概念是服务。</li>\n</ul>\n<p>在操作系统的管理下，程序、进程和守护进程共同工作，确保计算机系统的稳定运行和高效服务。</p>\n<p>存储设备：</p>\n<ul>\n<li>机械硬盘：容量大，读写速度慢，价格便宜</li>\n<li>固态硬盘：容量小，读写很快，价格贵</li>\n<li>软盘：已弃用；DVD：光盘存储介质； U盘：闪存设备； 移动硬盘：类似机械硬盘</li>\n</ul>\n<p>在生产环境中，服务器使用AB双电源线路；<br>如果在计算机集群中，可以不使用双电源</p>\n<p>服务器：</p>\n<ul>\n<li>CPU、主板、内存、磁盘、网卡等硬件设备性能更高、安全性更高、更稳定的计算机</li>\n<li>在计算机网络中，一个管理资源并为用户提供服务的计算机<br> 分类：</li>\n<li>文件服务器：图片、网页文件、视频文件的展示</li>\n<li>数据库服务器：提供数据读写的机器</li>\n<li>应用程序服务器：开发应用程序的运行机器</li>\n</ul>\n<p>机房托管：</p>\n<ul>\n<li>服务器运行条件严苛，要求无尘、干燥、低温、五静电</li>\n<li>7*24*365  </li>\n<li>硬件安全防护 hacker入侵</li>\n<li>带宽有限</li>\n</ul>\n<p>云服务器</p>\n<p>云服务器很适合初创公司(阿里云、腾讯云)</p>\n<ul>\n<li>优点：<ul>\n<li>操作和升级部署更方便</li>\n<li>访问更快</li>\n<li>存储更便捷</li>\n<li>更安全、稳定</li>\n<li>高性价比</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;</p>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><h2 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h2><p>操作系统：<br>人机交互的中介，是用于控制和管理计算机的各种软、硬件资源的基础系统软件，如检测CPU使用率、内存使用情况、系统磁盘剩余空间</p>\n<p>Linux操作系统：</p>\n<ul>\n<li>开源、可自由传播</li>\n<li>支持多用户同时操作、多任务、支持多CPU、多线程</li>\n<li>与Unix操作系统兼容，有其所有优秀特性</li>\n<li>移植性高，适用于各种架构的计算机，如PC、服务器、树莓派、嵌入式等环境</li>\n</ul>\n<p>Unix操作系统：</p>\n<ul>\n<li>成熟、可靠</li>\n<li>强大的的网络功能，TCP&#x2F;IP就是基于Unix</li>\n<li>支持多种编程语言，C&#x2F;C++、Python</li>\n<li>强大的数据库，Oracle、Mysql、DB2</li>\n</ul>\n<p>演变</p>\n<p>Unix (1969)  —— &gt;</p>\n<ol>\n<li>Linux (1991) ——Android(2007)&gt; - &gt; - &gt; - &gt; -  </li>\n<li>IOS(2007)</li>\n</ol>\n<p>拓展</p>\n<p>GNU活动：指的是由GNU计划和自由软件基金会（Free Software Foundation, FSF）发起或支持的各种活动，旨在推广自由软件（Free Software）的理念、使用和发展。GNU计划由理查德·斯托曼（Richard Stallman）于1983年发起，目标是创建一个完全由自由软件组成的操作系统——GNU操作系统。</p>\n<p>GPL：全称是GNU通用公共许可证（GNU General Public License），是由自由软件基金会（Free Software Foundation, FSF）制定的自由软件许可证。GPL是一种“强”版权许可证，它确保软件的自由性，并允许用户自由地运行、研究、修改和分发软件。</p>\n<p>&nbsp;<br>重要的Linux发行版：</p>\n<p>Red Hat Enterprise Linux (RHEL)：</p>\n<ul>\n<li>Red Hat Enterprise Linux是Red Hat公司提供的企业级Linux发行版。它以其稳定性和企业支持而受到企业的青睐。</li>\n<li>提供收费的技术支持；提供资格认证证书，RHCSA、RHCE、RHCA</li>\n</ul>\n<p>CentOS：</p>\n<ul>\n<li>CentOS是RHEL的免费克隆版本，它使用了RHEL的源代码，但去除了Red Hat的商标和商业支持服务。它适合那些需要稳定的服务器环境但没有预算购买商业支持的用户。</li>\n</ul>\n<p>Ubuntu：</p>\n<ul>\n<li>Ubuntu是基于Debian的发行版，由Canonical Ltd.维护。它以用户友好、易于安装和使用的特点而闻名，是桌面和服务器领域的热门选择。</li>\n<li>桌面版Linux，也用于物联网、嵌入式领域</li>\n</ul>\n<p>openSUSE：</p>\n<ul>\n<li>openSUSE是一个由社区开发的发行版，由SUSE公司赞助。它提供了两个版本：Leap（稳定版）和Tumbleweed（滚动更新版）。</li>\n<li>数据库领域</li>\n</ul>\n<p>选择：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">需求</th>\n<th align=\"center\">选项</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">服务器端linux系统</td>\n<td align=\"center\">Redhat(有钱任性) 或 CentOS</td>\n</tr>\n<tr>\n<td align=\"center\">Linux桌面系统</td>\n<td align=\"center\">Ubuntu开发人员开放平台</td>\n</tr>\n<tr>\n<td align=\"center\">安全性要求很高的场景</td>\n<td align=\"center\">Debian或FreeBSD</td>\n</tr>\n<tr>\n<td align=\"center\">数据库高级服务</td>\n<td align=\"center\">SUSE德国</td>\n</tr>\n<tr>\n<td align=\"center\">新技术和新功能</td>\n<td align=\"center\">Fedora&gt;稳定测试后&gt;redhat(去除logo、收费条款，Centos)</td>\n</tr>\n<tr>\n<td align=\"center\">中文版</td>\n<td align=\"center\">红旗LinuX、麒麟Linux</td>\n</tr>\n</tbody></table>\n<p>主流互联网企业还是 CentOS，所以就学这个</p>\n<p>&nbsp;</p>\n<h2 id=\"二、安装\"><a href=\"#二、安装\" class=\"headerlink\" title=\"二、安装\"></a>二、安装</h2><p>用 虚拟机 安装 Linux 系统</p>\n<ul>\n<li>VMware</li>\n<li>Centos7系统iso镜像文件</li>\n<li>xshell远程连接工具</li>\n</ul>\n<p>&nbsp;<br>虚拟机网络环境:</p>\n<ul>\n<li>桥接网络：在当前网络环境下，再分配一个IP地址，让虚拟机和宿主机处于同一个局域网段</li>\n<li>网络地址转换(NAT)：在宿主机的网络环境下，再生成一个虚拟局域网，和宿主机处于不同 局域网段</li>\n<li>仅主机网络模式：单机模式，无法与外界通信</li>\n</ul>\n<p>虚拟终端（TTY）:</p>\n<p>在Linux系统中，通常有多个虚拟终端可供使用。你可以通过按下Ctrl + Alt + F1 ~ F7等组合键在不同的虚拟终端之间切换。</p>\n<ul>\n<li>Ctrl + Alt + F1：图形化界面(安装过了)</li>\n<li>Ctrl + Alt + F2：命令行界面</li>\n</ul>\n<p>&nbsp;</p>\n<h2 id=\"三、远程连接\"><a href=\"#三、远程连接\" class=\"headerlink\" title=\"三、远程连接\"></a>三、远程连接</h2><p>ssh（安全外壳协议）：</p>\n<p>一种网络协议，用于计算机之间的加密登录和执行命令。它为远程登录会话和其他网络服务提供了一种安全传输环境。ssh 命令是用于客户端的，用于建立到远程服务器的安全连接。<br>Windows用户需要单独安装 Xshell 远程连接工具(封装了ssh命令)</p>\n<p>步骤：</p>\n<ol>\n<li>确保 Linux 虚拟机正确配置了 IP 地址<br>命令行输入 ip addr show 查看网络信息，找到IPV4地址：192.168.197.181</li>\n<li>安装 Xshell 软件，进行远程连接<br>建立 会话，即远程操作 Linux 虚拟机的终端，登录账户，实现连接</li>\n<li>使用 ssh命令 实现远程连接</li>\n</ol>\n<ul>\n<li>基本连接:<br>ssh 用户名@服务器地址</li>\n<li>指定端口: (如果服务器不是使用默认的22端口，可以通过-p选项指定端口)<br>ssh -p 端口号 用户名@服务器地址</li>\n</ul>\n<ol start=\"4\">\n<li>PC Windows 系统远程连接 Linux 虚拟机(和Xshell一样)<br>  ssh 用户名@服务器地址</li>\n</ol>\n<p>&nbsp;</p>\n<h2 id=\"四、命令语句\"><a href=\"#四、命令语句\" class=\"headerlink\" title=\"四、命令语句\"></a>四、命令语句</h2><p>Linux命令行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>空格</th>\n<th align=\"center\">参数(可省)</th>\n<th>空格</th>\n<th align=\"center\">文件&#x2F;文件夹(可省)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ls</td>\n<td></td>\n<td align=\"center\"></td>\n<td></td>\n<td align=\"center\">缺省’.’，表示当前文件夹的内容</td>\n</tr>\n<tr>\n<td align=\"center\">ls</td>\n<td></td>\n<td align=\"center\">-a</td>\n<td></td>\n<td align=\"center\">&#x2F;root</td>\n</tr>\n</tbody></table>\n<p>ls：列出当前路径下的文件(夹)<br>-a：列出包括隐藏文件在内的所有文件<br>-l：列出详细信息</p>\n<p>标准 Linux 命令提示符：</p>\n<ul>\n<li>格式：<ul>\n<li>当前登录的用户名@主机名 当前目录</li>\n</ul>\n</li>\n<li>e.g.<ul>\n<li>[root@localhost ~]#</li>\n</ul>\n</li>\n</ul>\n<p>“#” 是超级用户（也称为根用户或root用户）的命令提示符符号</p>\n<ul>\n<li>指令：<ul>\n<li>whoami：显示当前登录的用户名</li>\n<li>hostname：显示当前的主机名</li>\n<li>pwd：显示当前的(绝对)路径</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../images/070201.png\"></p>\n<p>常用命令</p>\n<ul>\n<li><p>ls：列出当前路径下的文件(夹)</p>\n</li>\n<li><p>cd：进入某路径</p>\n</li>\n<li><p>pwd： 查看当前路径</p>\n</li>\n<li><p>su：于切换到另一个用户账户并以其身份执行命令</p>\n<ul>\n<li>语法：<ul>\n<li>su [选项] [用户名]</li>\n<li>如果省略了用户名，su命令默认会切换到根用户（root）</li>\n</ul>\n</li>\n<li>常见选项：<ul>\n<li>su -：以登录shell的方式切换用户，这意味着环境变量和配置文件会被加载，就像用户直接登录一样。</li>\n<li>su -l：与su -相同，以登录shell的方式切换用户。</li>\n<li>su [用户名]：切换到指定的用户，但不加载该用户的环境变量和配置文件。&gt; - &gt; -</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>logout：退出当前用户</p>\n</li>\n</ul>\n<p>&nbsp;</p>\n<h2 id=\"五、文件结构\"><a href=\"#五、文件结构\" class=\"headerlink\" title=\"五、文件结构\"></a>五、文件结构</h2><h3 id=\"一-Windows-与-Linux-操作系统文件结构的区别\"><a href=\"#一-Windows-与-Linux-操作系统文件结构的区别\" class=\"headerlink\" title=\"(一) Windows 与 Linux 操作系统文件结构的区别\"></a>(一) Windows 与 Linux 操作系统文件结构的区别</h3><ol>\n<li>根目录结构：</li>\n</ol>\n<ul>\n<li>Windows：<ul>\n<li>Windows文件系统通常以字母标识的驱动器（如C:、D:等）为根目录，每个驱动器可以有自己的文件系统结构。Windows使用盘符来区分不同的存储设备。</li>\n</ul>\n</li>\n<li>Linux：<ul>\n<li>Linux文件系统有一个单一的根目录（用 &#x2F; 表示），所有的文件和目录都从根目录开始。Linux不使用盘符，而是将所有的存储设备挂载到根目录下的某个目录上，如&#x2F;boot、&#x2F;home、&#x2F;var等。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>目录命名约定</li>\n</ol>\n<ul>\n<li><p>Windows：</p>\n<ul>\n<li>以 反斜杠 \\ 分割目录</li>\n<li>e.g.：<blockquote>\n<ul>\n<li><ul>\n<li>C:\\Users\\aj\\blog&gt;</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>Linux：</p>\n</li>\n<li><p>以 正斜杠 &#x2F; 分割目录，第一个 &#x2F; 表示路径的起点(根目录)，之后的 &#x2F; 表示目录间的分隔符</p>\n</li>\n<li><p>&#x2F;home&#x2F;aj&#x2F;文档</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>系统文件和用户文件的位置：</li>\n</ol>\n<ul>\n<li>Windows：<ul>\n<li>系统文件通常位于C:\\Windows目录下，用户个人文件通常位于C:\\Users[用户名]目录下。</li>\n</ul>\n</li>\n<li>Linux：<ul>\n<li>系统文件分布在根目录的多个子目录下，如&#x2F;bin、&#x2F;sbin、&#x2F;etc、&#x2F;lib等，而用户个人文件通常位于&#x2F;home&#x2F;[用户名]目录下。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"二-常见目录及其含义\"><a href=\"#二-常见目录及其含义\" class=\"headerlink\" title=\"(二) 常见目录及其含义\"></a>(二) 常见目录及其含义</h3><p><strong>Linux 常见目录</strong>：</p>\n<ul>\n<li>&#x2F;（根目录）：整个文件系统的起点</li>\n<li>dev（Devices）：&#x2F;dev存放抽象硬件</li>\n<li>boot（Boot）：&#x2F;boot存放内核与启动文件</li>\n<li>lib（Library）：&#x2F;lib存放系统库文件</li>\n<li>bin（Binary） :&#x2F;bin 存放基本系统命令的二进制文件，这些命令在任何情况下都必需</li>\n<li>sbin（System Binary）：&#x2F;sbin存放系统管理的二进制文件，通常需要超级用户权限才能执行</li>\n<li>usr（User） :&#x2F;usr存放安装程序（软件默认目录）</li>\n<li>var（Variable）：&#x2F;var存放经常变化的文件，如日志文件</li>\n<li>mnt：&#x2F;mnt文件挂载目录(u盘、光驱)</li>\n<li>home（Home）：&#x2F;home普通用户目录</li>\n<li>root（Root Home）：&#x2F;root特权用户目录</li>\n<li>etc（Etceter）：&#x2F;etc存放配置文件目录</li>\n<li>opt（Optional）：&#x2F;opt用于存放第三方软件包和附加应用程序（非强制）</li>\n<li>proc（Processes）：一个虚拟文件系统，包含系统进程和内核信息</li>\n</ul>\n<h3 id=\"三-重要路径\"><a href=\"#三-重要路径\" class=\"headerlink\" title=\"(三) 重要路径\"></a>(三) 重要路径</h3><ul>\n<li><p><strong>&#x2F;etc</strong></p>\n</li>\n<li><p>&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33：网卡配置文件，包括动态分配 IP、设备名称、启动加载的ONBOOT参数 </p>\n</li>\n<li><p>&#x2F;etc&#x2F;resolv.conf：DNS客户端的配置文件，包括域名解析</p>\n</li>\n<li><p>&#x2F;etc&#x2F;hostname：主机名配置文件</p>\n</li>\n<li><p>&#x2F;ect&#x2F;hosts：用于本地名称解析的静态表，它将主机名映射到IP地址</p>\n</li>\n<li><p>&#x2F;etc&#x2F;motd：“Message of the Day”（每日消息），在用户通过SSH或其他方式登录到系统时会被显示</p>\n</li>\n<li><p>&#x2F;etc&#x2F;os-release：包含了操作系统的身份信息，如发行版ID、名称、版本号、版本ID和PRETTY_NAME等</p>\n</li>\n<li><p><strong>&#x2F;proc</strong></p>\n</li>\n<li><p>&#x2F;proc&#x2F;meminfo：系统内存信息</p>\n</li>\n<li><p>&#x2F;proc&#x2F;cpuinfo：处理器相关信息，如类型、厂家、型号、类型</p>\n</li>\n<li><p><strong>&#x2F;var</strong></p>\n</li>\n<li><p>var&#x2F;log&#x2F;message：系统级别日志文件</p>\n</li>\n<li><p>var&#x2F;log&#x2F;secure:用户登录信息日志文件</p>\n</li>\n<li><p>r&#x2F;log&#x2F;dmesg：记录硬件加载情况的日志信息</p>\n</li>\n</ul>\n<h3 id=\"四-文件管理命令\"><a href=\"#四-文件管理命令\" class=\"headerlink\" title=\"(四) 文件管理命令\"></a>(四) 文件管理命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">指令</th>\n<th align=\"center\">全称</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ls</td>\n<td align=\"center\">list</td>\n<td align=\"center\">列出目录内容</td>\n</tr>\n<tr>\n<td align=\"center\">pwd</td>\n<td align=\"center\">print working directory</td>\n<td align=\"center\">打印当前工作目录</td>\n</tr>\n<tr>\n<td align=\"center\">cd</td>\n<td align=\"center\">change directory</td>\n<td align=\"center\">改变目录</td>\n</tr>\n<tr>\n<td align=\"center\">touch</td>\n<td align=\"center\">touch</td>\n<td align=\"center\">创建新文件或修改文件的时间戳</td>\n</tr>\n<tr>\n<td align=\"center\">mkdir</td>\n<td align=\"center\">make diretory</td>\n<td align=\"center\">创建目录</td>\n</tr>\n<tr>\n<td align=\"center\">rm</td>\n<td align=\"center\">remove directory</td>\n<td align=\"center\">删除空目录</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>tree</strong>：以树形结构显示⽬录下内容<br>需要单独安装：yum install tree -y</p>\n<ul>\n<li>语法<ul>\n<li><strong>tree [选项] [目录路径]</strong></li>\n</ul>\n</li>\n<li>常⽤参数<ul>\n<li><strong>C</strong>: 在⽂件和⽬录清单加上⾊彩，便于区分各种类型。</li>\n<li><strong>d</strong>： 显示⽬录名称⽽⾮内容。</li>\n<li><strong>D</strong>： 列出⽂件或⽬录的更改时间。</li>\n<li><strong>f</strong>： 在每个⽂件或⽬录之前，显示完整的相对路径名称。</li>\n<li><strong>F</strong>： 在条⽬后加上⽂件类型的指示符号</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>(1)<br><strong>cd（change directory）</strong> ：改当前工作目录</p>\n<ul>\n<li>语法：<ul>\n<li>cd 目标路径</li>\n<li>若省略 目标路径 参数，则转到当前用户的主目录，同 cd ~</li>\n</ul>\n</li>\n<li>几个特殊的目录：<ul>\n<li>. 当前工作目录</li>\n<li>.. 上一级工作目录</li>\n<li>- 上一次的工作目录</li>\n<li>~ 当前用户的主目录</li>\n</ul>\n</li>\n</ul>\n<p>(2)<br><strong>ls（list）</strong>：列出目录内容</p>\n<ul>\n<li>语法<ul>\n<li>ls [选项] [目录或文件]</li>\n<li>如果省略了 目录或文件 参数，ls命令会默认列出当前工作目录的内容</li>\n</ul>\n</li>\n<li>常见选项<ul>\n<li>-l：以长格式列出文件和目录的详细信息，包括权限、所有者、大小和最后修改时间。</li>\n<li>-a：列出所有文件，包括以.开头的隐藏文件。</li>\n<li>-h：以人类可读的格式显示文件大小，例如K（千字节）、M（兆字节）和G（吉字节）。</li>\n<li>-r：逆序列出目录内容。</li>\n<li>-t：按文件修改时间排序。</li>\n<li>-d：仅列出目录本身，而不是目录的内容。</li>\n<li>-S：大写的S，按文件大小排序，默认从大到小。</li>\n<li>–full-time：详细输出时间信息</li>\n<li>-F：在列出的文件和目录名称后添加指示符，以区分不同类型的文件<blockquote>\n<ul>\n<li><ul>\n<li>&#x2F;：表示目录。</li>\n</ul>\n</li>\n<li><ul>\n<li>@：表示符号链接。</li>\n</ul>\n</li>\n<li><ul>\n<li>*：表示可执行文件。</li>\n</ul>\n</li>\n<li><ul>\n<li>&#x3D;：表示套接字文件。</li>\n</ul>\n</li>\n<li><ul>\n<li>|：表示FIFO（命名管道）</li>\n</ul>\n</li>\n<li><ul>\n<li>: 普通文件类似结尾为空</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n<li>-i：显示每个文件的inode编号（ inode 是文件系统中的一种数据结构，用于存储文件的元数据，如权限、所有者、大小和最后修改时间等。inode编号是一个唯一的标识符，用于在文件系统中唯一地识别文件。）</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ls -l 等效于 ll</p>\n</blockquote>\n<p>(3)<br><strong>pwd（print working directory）</strong>：打印当前工作目录的绝对路径的命令</p>\n<p>(4)</p>\n<blockquote>\n<p>绝对路径与相对路径：</p>\n<ul>\n<li>绝对路径：相对于根目录\\</li>\n<li>相对路径：相对于根目录的子目录</li>\n</ul>\n</blockquote>\n<p><strong>touch</strong>：创建新文件或改变文件的时间戳<br>如果指定的文件不存在，它将创建一个大小为0的新文件。如果文件已经存在，touch 命令将更新该文件的访问(access)时间和修改(modify)时间为当前时间，而不改变文件的内容。</p>\n<ul>\n<li>语法：<ul>\n<li>touch [选项] 文件名</li>\n</ul>\n</li>\n<li>常用选项：</li>\n<li><strong>-a</strong>：只更改访问时间</li>\n<li><strong>-m</strong>：只更改修改时间</li>\n<li><strong>-c</strong>：若文件不存在，不创建新文件</li>\n<li><strong>-t</strong>：指定时间戳，而非当前时间</li>\n<li><strong>-r</strong>：将指定文件的时间戳（访问时间和修改时间）复制到另一个文件上<br><img src=\"/../images/070301.png\"></li>\n</ul>\n<p>(5)<br><strong>mkdir（make directory）</strong>：创建目录</p>\n<ul>\n<li>语法：<blockquote>\n<ul>\n<li><ul>\n<li><strong>mkdir [选项] [目录路径]</strong></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n<li>常用选项：<blockquote>\n<ul>\n<li><ul>\n<li>-m [mode]：设置权限模式</li>\n</ul>\n</li>\n<li><ul>\n<li>-p：递归创建目录，如果路径中存在，不会报错</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"/../images/070202.png\"></p>\n<p>(6)</p>\n<ol>\n<li><strong>mv（move）</strong>：移动文件或目录，也可以用来重命名文件或目录</li>\n</ol>\n<ul>\n<li><p>语法：</p>\n<ul>\n<li><strong>mv [选项] 源文件 目标文件或目录</strong></li>\n<li><strong>mv [选项] 当前文件名 新文件名</strong></li>\n</ul>\n</li>\n<li><p>常见选项</p>\n<ul>\n<li><strong>-i</strong>：交互式操作，如果目标文件已存在，会询问是否覆盖；</li>\n<li><strong>-n</strong>：不覆盖已存在的目标文件；</li>\n<li><strong>-v</strong>：显示详细的过程信息；</li>\n<li><strong>-f</strong>：强制覆盖已存在的目标文件，不进行提示。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../images/070302.png\"></p>\n<ol start=\"2\">\n<li><strong>rm（remove）</strong>：</li>\n</ol>\n<ul>\n<li>语法：<ul>\n<li><strong>rm [选项] 文件或目录</strong></li>\n</ul>\n</li>\n<li>常用选项：<ul>\n<li><strong>-f</strong>：强制删除，不提示确认；</li>\n<li><strong>-i</strong>：交互式操作，删除每个文件前提示确认；</li>\n<li><strong>-r</strong>：递归删除，用于删除目录及其内部的文件和子目录；</li>\n<li><strong>-v</strong>：显示详细的过程信息。<br><img src=\"/../images/070303.png\"></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><strong>rmdir（remove directory）</strong>：删除空目录</li>\n</ol>\n<ul>\n<li>语法：<ul>\n<li><strong>rmdir [选项] 目录名</strong></li>\n</ul>\n</li>\n<li>常用选项：<ul>\n<li><strong>-p</strong>：删除目录及其父级空目录。如果删除的目录是其父目录中唯一的子目录，那么父目录也会被删除。</li>\n<li><strong>-v</strong>：显示命令执行的详细过程。</li>\n<li><strong>-r</strong>：递归删除，能删除非空目录</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;</p>\n<h2 id=\"六、帮助命令\"><a href=\"#六、帮助命令\" class=\"headerlink\" title=\"六、帮助命令\"></a>六、帮助命令</h2><ol>\n<li><strong>man</strong> 指令（Manual）<br>是 Linux 系统中最常用的帮助工具，它提供了命令的详细手册页（man page）</li>\n</ol>\n<ul>\n<li>语法：<ul>\n<li><strong>man 命令名</strong></li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li><strong>–help</strong> 选项<br>显示命令的基本用法和可用的选项</li>\n</ol>\n<ul>\n<li>语法：<ul>\n<li><strong>命令名 –help</strong></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><p><strong>help</strong> 命令<br>只针对bash内置命令</p>\n</li>\n<li><p><strong>apropos</strong> 命令<br>忘记了具体的命令名称，但记得与命令相关的关键词，可以使用 apropos 命令来搜索相关的命令。</p>\n</li>\n</ol>\n<ul>\n<li>语法：<ul>\n<li>apropos 关键词</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;</p>\n<h2 id=\"七、文件目录管理命令\"><a href=\"#七、文件目录管理命令\" class=\"headerlink\" title=\"七、文件目录管理命令\"></a>七、文件目录管理命令</h2><blockquote>\n<p><strong>Vim（Vi IMproved）</strong>：是一个高度可配置的文本编辑器，用于在 Unix 和 Linux 系统上进行文本编辑。它是 Vi 编辑器的改进版，Vi 是最早的屏幕编辑器之一，用于在终端环境中编辑文件。</p>\n</blockquote>\n<blockquote>\n<p>系统默认不安装，须手动安装</p>\n<ul>\n<li><strong>yum install vim -y</strong> # 通过 yum 软件管理工具，安装 vim，且默认yes</li>\n</ul>\n</blockquote>\n<p>vim ⼯作模式</p>\n<ul>\n<li>命令模式 : 进⼊ vim 默认的模式 </li>\n<li>编辑模式 : 按 i 进⼊的 a i o 也可以进⼊ </li>\n<li>底⾏模式 : 按下 冒号: 之后进⼊到的模式</li>\n</ul>\n<blockquote>\n<p>vim 打开不存在的文件时，默认会创建文件</p>\n</blockquote>\n<p><img src=\"/../images/070304.png\"></p>\n<p><em><strong>基本流程及常用操作</strong></em>：</p>\n<ul>\n<li>启动 Vim 并打开文件<ul>\n<li><strong>vim 文件名</strong></li>\n</ul>\n</li>\n<li>进入插入模式：<ul>\n<li>按 <strong>i</strong> 进入插入模式，光标停在当前位置。</li>\n<li>按 <strong>a</strong> 进入插入模式，光标移动到当前字符之后。</li>\n<li>按 <strong>o</strong> 进入插入模式，并在当前行下方新建一行。</li>\n<li>按 <strong>O (大写)</strong> 进入插入模式，并在当前行上方新建一行。</li>\n</ul>\n</li>\n<li>按 <strong>ESC</strong> 退出编辑模式</li>\n<li>退出 Vim：<ul>\n<li>按 <strong>:q</strong>：退出 Vim（如果文件未修改）。</li>\n<li>按 <strong>:q!</strong>： 强制退出 Vim，不保存修改。</li>\n<li>按 <strong>:wq!</strong>： 保存修改并强制退出 Vim。</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;<br><em><strong>命令模式下 的 导航快捷键</strong></em>：</p>\n<ul>\n<li><strong>k</strong>：向上移动光标。</li>\n<li><strong>j</strong>：向下移动光标。</li>\n<li><strong>h</strong>：向左移动光标。</li>\n<li><strong>l</strong>：向右移动光标。<br>&nbsp;</li>\n<li><strong>w</strong>：移动光标到下⼀个单词 </li>\n<li><strong>b</strong>： 移动到光标上⼀个单词<br>&nbsp;</li>\n<li><strong>数字0</strong>：移动到本⾏开头 </li>\n<li><strong>字符$</strong>：移动光标到本⾏结尾<br>&nbsp;</li>\n<li><strong>H</strong>：移动光标到屏幕⾸⾏ </li>\n<li><strong>M</strong>：移动到光标到屏幕的中间⼀⾏ </li>\n<li><strong>L</strong>：移动光标到屏幕的尾⾏<br>&nbsp;</li>\n<li><strong>gg</strong>：移动光标到⽂档的⾸⾏ </li>\n<li><strong>G</strong>：移动光标到⽂档尾⾏<br>&nbsp;</li>\n<li><strong>ctrl + f</strong> ：下⼀⻚</li>\n<li><strong>ctrl + b</strong> ：上⼀⻚<br>&nbsp;</li>\n<li><strong>&#96;.</strong> ：移动光标到上⼀次的修改⾏</li>\n</ul>\n<p>&nbsp;<br><em><strong>命令模式下 的查找（按下 n 查找下⼀处 ,N 上⼀处）</strong></em></p>\n<ul>\n<li><em><strong>&#x2F;xxx</strong></em>：在整篇⽂档向上查找 xxx 字符串</li>\n<li><strong>?xxx</strong>：在整篇⽂档向上查找 chaoge 字符串</li>\n<li><strong>*</strong> 或 <strong>#</strong>：查找整个⽂档，匹配光标所在的所有单词</li>\n<li><strong>gd</strong>：找到光标所在单词匹配的单词，并停留在⾮注释的第⼀个匹配上 </li>\n<li><strong>%</strong>：找到括号的另⼀半！！</li>\n</ul>\n<p>&nbsp;<br><em><strong>命令模式下 的 复制、删除、粘贴</strong></em>：</p>\n<ul>\n<li><strong>yy</strong>：拷⻉光标所在⾏</li>\n<li><strong>dd</strong>：删除光标所在⾏</li>\n<li><strong>D</strong>：删除当前光标到⾏尾的内容</li>\n<li><strong>dG</strong>：删除当前⾏到⽂档尾部的内容</li>\n<li><strong>p</strong>：粘贴</li>\n<li><strong>x</strong>：向后删除字符</li>\n<li><strong>X</strong>：先前删除字符</li>\n<li><strong>u</strong>：撤销上⼀步的操作</li>\n<li><strong>.</strong>：重复前⼀个执⾏过的动作</li>\n<li>批量操作<ul>\n<li>3yy：拷贝包括光标所在行在内的下3行</li>\n<li>2dd：删除包括光标所在行在内的下2行</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;<br><em><strong>快捷操作</strong></em>：</p>\n<ul>\n<li>删除光标所在位置到⾏尾的内容并进⼊编辑模式 <strong>C</strong>（⼤写） </li>\n<li>在当前⾏下⾯插⼊⼀⾏并进⼊编辑模式 <strong>o</strong>（⼩写）</li>\n<li>在当前⾏上⾯插⼊⼀⾏并进⼊编辑模式 <strong>O</strong> （⼤写） </li>\n<li>快速到达⾏尾并进⼊编辑模式 <strong>A</strong> </li>\n<li>快速保存并退出 <strong>ZZ</strong></li>\n</ul>\n<p>&nbsp;<br><em><strong>批量增删</strong></em>：</p>\n<ul>\n<li>批量删除<br>进⼊批量编辑模式 ( 可视块 ) ctrl+v 选择 上下左右 删除 d </li>\n<li>批量增加 :<br>进⼊批量编辑模式 ( 可视块 )ctrl+v 选择区域 输⼊⼤写的 I 进⼊编辑模式 编辑 按两次 ESC 键 </li>\n<li>批量去掉注释</li>\n</ul>\n<ol>\n<li>进⼊命令⾏模式，按 ctrl + v 进⼊ visual block 模式，按字⺟ l 横向选中列</li>\n<li>按字⺟ j ，或者 k 选中注释符号 </li>\n<li>按 d 键就可全部取消注释</li>\n</ol>\n<p><em><strong>批量缩进</strong></em>：<br>:set tabstop&#x3D;4 ：设定 tab 宽度为 4 个字符<br>:set shiftwidth&#x3D;4：设定⾃动缩进为 4 个字符<br>:set expandtab：⽤ space 替代 tab 的输⼊<br>:set noexpandtab：不⽤ space 替代 tab 的输⼊ </p>\n<ol>\n<li>命令模式，按下 v ，进⼊可视模式 </li>\n<li>光标移动选择⾏，输⼊ &gt; ⼤于号，缩进，输⼊ &lt; 缩进</li>\n</ol>\n<p>输⼊⾏号缩进： </p>\n<ol>\n<li>显示⾏号<br>:set nu # 显示<br>:set nonu # 关闭 </li>\n<li>⾏号缩进 :10,20 &gt; #10 到 20 ⾏，缩进⼀次</li>\n</ol>\n<p><em><strong>底线命令模式</strong></em>：<br>在命令模式下输⼊冒号（英⽂的:），就进⼊了底线命令模式，在底线命 令模式下可以输⼊单个或多个字符的命令，常⽤命令有：</p>\n<ul>\n<li>:q! 强制退出 </li>\n<li>:wq! 强制写⼊退出 </li>\n<li>:set nu 显示⾏号 </li>\n<li>:数字 调到数字那⾏ </li>\n<li>:set nonu 取消显示⾏号</li>\n</ul>\n<p>随时按下 esc 可以退出底线命令模式</p>\n<p>&nbsp;</p>\n<h2 id=\"八、交换文件解决方法\"><a href=\"#八、交换文件解决方法\" class=\"headerlink\" title=\"八、交换文件解决方法\"></a>八、交换文件解决方法</h2><blockquote>\n<p>.xxx.swp  </p>\n</blockquote>\n<p>Vi&#x2F;Vim编辑文件正常流程</p>\n<ol>\n<li>打开 vim_test.txt</li>\n<li>进入编辑模式编辑文件</li>\n<li>编辑文件时 Vi 会自动创建一个临时文件 .vim_test.txt.swp</li>\n<li>编辑完成，Vi 自动删除临时文件</li>\n<li>保存退出</li>\n</ol>\n<p>故障原因 及 相应的解决方案</p>\n<ul>\n<li>多个窗口同时编辑同一文件<ul>\n<li><p>不需要未保存的数据</p>\n<blockquote>\n<ul>\n<li><ul>\n<li>D 删除临时文件</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>恢复未保存的数据</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li><ul>\n<li>R ENTER :wq 恢复未保存的数据</li>\n</ul>\n</li>\n<li><ul>\n<li>rm -f .vim_test.txt.swp 删除临时文件</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>多个窗口同时打开一个文件，会有交互界面，若正常退出，临时文件不会保留</p>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"九、文件管理命令\"><a href=\"#九、文件管理命令\" class=\"headerlink\" title=\"九、文件管理命令\"></a>九、文件管理命令</h2><p><em><strong>重定向符号</strong></em>：</p>\n<blockquote>\n<p>重定向：将数据传到其他地方</p>\n</blockquote>\n<p>输入重定向（Redirecting Input）:</p>\n<ul>\n<li>&lt; 符号用于从文件读取输入</li>\n</ul>\n<p>输出重定向（Redirecting Output）:</p>\n<ul>\n<li><strong>&gt;</strong>：符号用于将输出重定向到一个文件。如果目标文件已存在，它将被覆盖;如果目标文件不存在，它将被创建。</li>\n<li><strong>&gt;&gt;</strong>：符号用于将输出追加到文件末尾。如果目标文件不存在，它将被创建。</li>\n<li>2&gt; 符号用于将标准错误输出重定向到文件。</li>\n<li>2&gt;&gt; 符号用于将标准错误输出追加到文件末尾。</li>\n</ul>\n<p>&nbsp;<br><em><strong>cat命令</strong></em></p>\n<blockquote>\n<p><strong>cat（concatenate）</strong> 命令是一个常用的文本查看工具，用于读取文件内容并将其显示在终端中。它也可以用于创建文件、复制文件或合并文件。</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li><strong>cat [选项] 文件名</strong></li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-n：为输出的每一行编号。</li>\n<li>-b：与 -n 类似，但是只对非空白行编号。</li>\n<li>-s：将多个连续的空白行合并为一个。</li>\n<li>-E：在文件结束处显示 $ 字符。</li>\n<li>-T：将制表符显示为 ^I。</li>\n</ul>\n<p>案例</p>\n<ol>\n<li><p>将 redirecting.test01.txt 的内容覆盖 redirecting.test02.txt<br>cat redirecting.test01.txt &gt; redirecting.test02.txt </p>\n</li>\n<li><p>将 redirecting.test01.txt 的内容追加到 redirecting.test03.txt 文件结尾<br>cat redirecting.test01.txt &gt;&gt; redirecting.test03.txt</p>\n</li>\n</ol>\n<p><strong>注</strong>： 1. 2. 都可合并操作<br>例如：把redirecting_test01.txt和redirecting_test02.txt的内容追加到redirecting_test05.txt<br>cat redirecting_test01.txt redirecting_test02.txt &gt; redirecting_test05.txt</p>\n<ol start=\"3\">\n<li><p>查看文件的内容<br>cat &lt; redirecting.test01.txt（作用同 cat redirecting.test01.txt ）</p>\n</li>\n<li><p>非交互式编辑 &gt; 或 追加 &gt;&gt; 内容<br>cat &gt;&gt; motto.txt &lt;&lt; EOF<br>&gt; 世界上只有一种英雄主义<br>&gt; 罗曼罗兰<br>&gt; EOF<br>注： <strong>&lt;&lt;</strong></p>\n</li>\n<li><p>将  redirecting.test01.txt 中的内容拆分成多行<br><strong>xargs</strong> -n 3 &lt; redirecting_test01.txt</p>\n</li>\n</ol>\n<blockquote>\n<p><strong>xargs</strong> 命令：将标准输入的内容转换成命令行参数，并传递给另一个命令执行。它通常用于处理命令的输出，将其内容作为参数传递给其他命令<br>语法：</p>\n<ul>\n<li>xargs [选项] [命令]</li>\n</ul>\n<p>常用选项</p>\n<ul>\n<li>-n：指定每次调用命令时传递给命令的参数数量。</li>\n</ul>\n</blockquote>\n<ol start=\"7\">\n<li>清空文件内容<br>cat &#x2F;dev&#x2F;null &gt; file.txt  ( &#x2F;dev&#x2F;null 是 linux 系统 的⿊洞⽂件)</li>\n</ol>\n<p>&nbsp;<br><em><strong>tac命令</strong></em><br>与 <strong>cat</strong> 命令作用相反，反向读取文件内容</p>\n<p>&nbsp;<br><em><strong>管道符</strong></em></p>\n<blockquote>\n<p><strong>管道符（|）</strong>：用于将一个命令的输出作为另一个命令的输入。它允许命令之间进行数据流传递，从而实现复杂的数据处理流程。</p>\n</blockquote>\n<p>常⻅⽤法： </p>\n<ul>\n<li>#过滤字符串<ul>\n<li>cat motto.txt | grep “一”</li>\n</ul>\n</li>\n<li>#检查 python 程序是否启动 <ul>\n<li>ps -ef | grep “python”</li>\n</ul>\n</li>\n<li>#找到 &#x2F;tmp ⽬录下所有 txt ⽂件 <ul>\n<li>ls &#x2F;tmp | grep ‘.txt’</li>\n</ul>\n</li>\n<li>#检查 nginx 的端⼝是否存活 <ul>\n<li>netstat -tunlp | grep nginx</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../images/070401.png\"></p>\n<p>&nbsp;<br><em><strong>grep 命令</strong></em> </p>\n<blockquote>\n<p>grep 是一个强大的文本搜索工具，用于查找文件中匹配指定模式的文本行。它支持正则表达式，可以进行复杂的文本匹配。</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>grep [选项] [模式] [文件…]<br>模式可为 字符串</li>\n</ul>\n<p>常见选项：</p>\n<ul>\n<li>-i：忽略大小写。</li>\n<li>-v：逆向搜索，即显示不包含指定模式的行。</li>\n<li>-n：显示匹配行及其行号。</li>\n<li>-r：递归搜索目录</li>\n<li>-c：只输出匹配行的数量。</li>\n<li>-l：只输出包含匹配模式的文件名。</li>\n<li>-L：只输出不包含匹配模式的文件名。</li>\n<li>-e ：从文件中读取模式。</li>\n<li>-E ：支持扩展的正则表达式。</li>\n<li>-w：匹配整个单词，而不是字符串中的部分内容</li>\n</ul>\n<p><em><strong>more &amp; less 命令</strong></em></p>\n<blockquote>\n<p><strong>more</strong> 和 <strong>less</strong> ⽤于分⻚显示（⼀次⼀屏）⽂本，以当前屏幕窗⼝尺⼨ 为准。它们允许用户逐页浏览文件内容，而不会一次性将整个文件加载到内存中</p>\n</blockquote>\n<p>more 命令会显示文件的前几行，然后暂停，等待用户输入命令<br>常用的 more 命令选项：</p>\n<ul>\n<li>空格：向下滚动⼀屏 </li>\n<li>Enter：向下显示⼀⾏ </li>\n<li>&#x3D;：显示当前⾏号 </li>\n<li>q： 退出</li>\n</ul>\n<p>less 命令提供了比 more 更强大的导航功能和交互式特性</p>\n<p>&nbsp;<br><em><strong>head &amp; tail 命令</strong></em></p>\n<blockquote>\n<p>head 和 tail 命令用于查看文件的开头和结尾部分。常用于调试和监控文件内容。</p>\n</blockquote>\n<p><strong>head</strong>（默认显示前10行，不显示文件名）<br>语法：</p>\n<ul>\n<li>head [选项] 文件名</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-n：指定显示前几行，默认是前 10 行。</li>\n<li>-q：不显示文件名。</li>\n<li>-v：显示文件名</li>\n<li>-c：指定字节数</li>\n</ul>\n<p><strong>tail 命令</strong>：<br>同head<br>特有选项：</p>\n<ul>\n<li>-f：持续监视文件内容的更新，即文件内容发生变化时自动刷新显示。<ul>\n<li>echo “测试tail -f 选项” &gt;&gt; &#x2F;home&#x2F;aj&#x2F;文档&#x2F;documents&#x2F;more_test&#x2F;01.txt</li>\n<li>常用于监测线上日志文件的请求变动</li>\n</ul>\n</li>\n<li>-F：不断打开文件（对于不存在的文件，-f无法检测，而-F则等待文件建立）</li>\n</ul>\n<p><em><strong>cut 命令</strong></em></p>\n<blockquote>\n<p>cut 命令是一个用于切割文本文件的列或行的工具。它通常用于文本处理和数据提取。</p>\n</blockquote>\n<p>语法</p>\n<ul>\n<li>cut 参数 ⽂件</li>\n</ul>\n<p>常用选项</p>\n<ul>\n<li>-b 以字节为单位分割 </li>\n<li>-n 取消分割多字节字符，与-b ⼀起⽤ </li>\n<li>-c 以字符为单位 </li>\n<li>-d ⾃定义分隔符，默认以 tab 为分隔符 </li>\n<li>-f 与-d ⼀起使⽤，指定显示哪个区域</li>\n</ul>\n<p>参数</p>\n<ul>\n<li>N：第 N 个 字节 , 字符 或 字段 , 从 1 计数 起 </li>\n<li>N-：从 第 N 个 字节 , 字符 或 字段 直⾄ ⾏尾 </li>\n<li>N-M：从 第 N 到 第 M ( 并包括 第 M) 个 字节 , 字符 或 字段 </li>\n<li>-M：从 第 1 到 第 M ( 并包括 第 M) 个 字节 , 字符 或 字段</li>\n</ul>\n<p><img src=\"/../images/070402.png\"><br><img src=\"/../images/070403.png\"></p>\n<p><em><strong>sort 命令</strong></em></p>\n<blockquote>\n<p><strong>sort</strong> 命令用于对文本行进行排序</p>\n</blockquote>\n<p>语法</p>\n<ul>\n<li>sort [选项] 文件名</li>\n</ul>\n<p>常用的 sort 命令选项包括：</p>\n<ul>\n<li>缺省：默认为按字母顺序（比较字符的 ASCLL 值）</li>\n<li>-n：根据数字值进行排序。</li>\n<li>-r：反转排序结果，即从大到小排序。</li>\n<li>-u：去重。</li>\n<li>-t：指定分隔符，默认为制表符 \\t。</li>\n<li>-k：指定要排序的区域。</li>\n</ul>\n<p><img src=\"/../images/070404.png\"></p>\n<p><em><strong>uniq 命令</strong></em></p>\n<blockquote>\n<p>uniq 命令可以输出或者忽略⽂件中的重复⾏，常与 sort 排序结合使⽤</p>\n</blockquote>\n<p>语法： </p>\n<ul>\n<li>uniq [ 选项 ]… [ ⽂件 ]</li>\n</ul>\n<p>从输⼊⽂件或者标准输⼊中筛选相邻的匹配⾏并写⼊到输出⽂件或标准输出。<br>不附加任何选项时匹配⾏将在⾸次出现处被合并。 </p>\n<p>常用选项：</p>\n<ul>\n<li>-c：在每⾏前加上表示相应⾏⽬出现次数的前缀编号 </li>\n<li>-d：只输出重复的⾏ </li>\n<li>-u：只显示出现过⼀次的⾏</li>\n</ul>\n<p><img src=\"/../images/070405.png\"></p>\n<p><em><strong>wc 指令</strong></em></p>\n<blockquote>\n<p>wc 命令⽤于统计⽂件的⾏数、单词、字节数</p>\n</blockquote>\n<p>语法： </p>\n<ul>\n<li>wc [ 选项 ]… [ ⽂件 ]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-c：打印字节数 </li>\n<li>-m：打印字符数 </li>\n<li>-l：打印⾏数 </li>\n<li>-L：打印最⻓⾏的⻓度 </li>\n<li>-w：打印单词数</li>\n</ul>\n<p><img src=\"/../images/070406.png\"></p>\n<blockquote>\n<p><strong>echo</strong> 命令用于在终端中显示文本或变量值。它是一个简单的命令行工具，用于输出文本到标准输出，即终端屏幕。<br>语法：</p>\n<ul>\n<li>echo [选项] [输出内容…]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-e：启用转义序列</li>\n<li>-n：不输出换行符</li>\n</ul>\n</blockquote>\n<p><img src=\"/../images/070407.png\"></p>\n<!-- 查找命令 -->\n<p><em><strong>stat 命令</strong></em></p>\n<blockquote>\n<p>stat 命令⽤于显示⽂件的状态信息。 stat 命令的输出信息⽐ ls 命令的输出信 息要更详细。</p>\n</blockquote>\n<p>语法</p>\n<ul>\n<li>stat [选项]  [参数]</li>\n</ul>\n<p>选项</p>\n<ul>\n<li>-f：显示文件系统的状态而非文件的状态。</li>\n<li>-t：以简洁的方式显示时间。</li>\n<li>-L：跟随符号链接，显示链接指向文件的信息</li>\n</ul>\n<p><img src=\"/../images/070501.png\"></p>\n<p><em><strong>find 命令</strong></em></p>\n<blockquote>\n<p><strong>find</strong> 命令是Linux和Unix系统中用于在目录树中搜索文件的强大工具。它允许你根据各种条件来查找文件，并且可以执行相应的操作</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>find [起始目录] [选项] [操作]<ul>\n<li>起始目录：指定find命令从哪个目录开始搜索。默认为当前目录。</li>\n<li>选项：指定搜索的条件，如文件名、文件类型、大小等。</li>\n<li>操作：找到符合条件的文件后执行的操作，如打印文件名、删除文件等。</li>\n</ul>\n</li>\n</ul>\n<p>选项：</p>\n<ul>\n<li>-maxdepth：设置最⼤⽬录层级；</li>\n<li>-mindepth：设置最⼩⽬录层级</li>\n<li>-atime：按照⽂件访问 access 的时间查找，单位是 天</li>\n<li>-ctime：按照⽂件的改变 change 状态来查找⽂件， 单位是天</li>\n<li>-mtime：根据⽂件修改 modify 时间查找⽂件（最常 ⽤）</li>\n<li>-name 按照⽂件名字查找，⽀持 * ? [] 通配符</li>\n<li>-group 按照⽂件的所属组查找-perm 按照⽂件的权限查找</li>\n<li>-size：按照文件大小搜索。<ul>\n<li>c: 字节</li>\n<li>k: 千字节（ 1024 字节）</li>\n<li>w: 字（ 2 字节）</li>\n<li>M: 兆字节（ 1048576 字节）</li>\n<li>G: 千兆字节（ 1073741824 字节</li>\n</ul>\n</li>\n<li>-perm：按照文件权限搜索。</li>\n<li>-type：按照文件类型搜索<ul>\n<li>d 目录</li>\n<li>f 普通文件</li>\n</ul>\n</li>\n<li>-path：配合-prune 参数排除指定⽬录</li>\n<li>-prune：使 find 命令不在指定的⽬录寻找</li>\n<li>-delete：删除找出的⽂件</li>\n<li>-exec 或 -ok：对匹配的⽂件执⾏相应 shell 命令</li>\n<li>-print：将匹配的结果标准输出</li>\n<li>!：取反</li>\n<li>-a：取交集</li>\n<li>-o：取并集</li>\n</ul>\n<p>案例</p>\n<ol>\n<li><p>按照名字查找<br><img src=\"/../images/070502.png\"></p>\n</li>\n<li><p>按照时间查找<br>Linux 文件系统 文件的三种时间戳</p>\n</li>\n</ol>\n<ul>\n<li>访问(access)时间（-atime&#x2F;天，-amin&#x2F;分钟）：⽤户最近⼀次访问时间（⽂件 修改了，还未被读取过，则不变）。 </li>\n<li>修改(modify)时间（-mtime&#x2F;天，-mmin&#x2F;分钟）：⽂件最后⼀次修改时间（数 据变动）。 </li>\n<li>变化(change)时间（-ctime&#x2F;天，-cmin&#x2F;分钟）：⽂件数据元（例如权限、文件名等）最 后⼀次修改时间。</li>\n</ul>\n<p>⽂件任何数据改变， change 变化，⽆论是元数据变动，或是对⽂件 mv ， cp 等<br>⽂件内容被修改时， modify 和 change 更新<br>当 change 更新后，第⼀次访问该⽂件（ cat ， less 等）， access time ⾸次会更新，之后则不</p>\n<p>touch：三种时间都更新<br>touch -a ：仅更新 Access time（同时更新 Change 为 current time ）<br>touch -m ：仅更新 Modify time（同时更新 Change 为 current time ）<br>touch -c ：不创建新⽂件<br>touch -t ：使⽤指定的时间更新时间戳（仅更改 Access time 与 Modify time）</p>\n<ul>\n<li>1天以内，被访问 access 过的⽂件<br>find . -atime -1</li>\n<li>超过2天，内容变化的⽂件<br>find . -mtime +1 </li>\n<li>恰好在 7 天内被访问过的⽂件<br>find &#x2F; -maxdepth 3 -type f -atime 7</li>\n</ul>\n<ol start=\"3\">\n<li><p>反向查找<br>最大层级为1，在当前目录下查找非目录文件<br>find . -maxdepth 1  ! -type d</p>\n</li>\n<li><p>按照访问权限查找<br>在当前目录及其子目录中查找权限为755的文件<br>find . -perm 755</p>\n</li>\n<li><p>按照文件大小查找<br>在当前目录及其子目录下查找大小超过 150字节 的文件<br>find . -type d -size +150c</p>\n</li>\n<li><p>指定忽略目录查找<br>find . -path “.&#x2F;dir21” -prune -o -type f -print</p>\n</li>\n</ol>\n<ul>\n<li>find .：在当前目录查找命令</li>\n<li>-path “.&#x2F;dir21” -prune：忽略指定路径</li>\n<li>-o:并</li>\n<li>-type f -print：类型为普通文件 执行打印操作</li>\n</ul>\n<ol start=\"7\">\n<li>查找并删除<br>在当前目录及其子目录中查找名为”example.txt”的文件并删除它们</li>\n</ol>\n<ul>\n<li>find . -name “example.txt” -ok rm {} \\;</li>\n</ul>\n<p>注：</p>\n<ul>\n<li>find命令的 -exec 选项后面的命令需要用 {} 来代替找到的文件名，并且命令的结尾需要用;来表示命令的结束。这是因为分号在shell中有特殊含义，所以需要用反斜杠来转义。</li>\n<li>-ok⽐-exec更安全，存在⽤户提示确认</li>\n</ul>\n<p><em><strong>xargs 命令</strong></em></p>\n<blockquote>\n<p><strong>xargs</strong> 常与管道（|）配合使用，将标准输入数据转换成命令行参数。会读取来自标准输入的数据（通常是上一个命令的输出），然后以空格分隔这些数据，并将它们作为参数传递给指定的命令。</p>\n</blockquote>\n<p>语法</p>\n<ul>\n<li>xargs [选项] [命令]<ul>\n<li>选项：xargs 命令的行为可以通过一系列选项来修改。</li>\n<li>命令：xargs 将从标准输入接收的数据作为参数传递给这个命令</li>\n</ul>\n</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-n：指定每次传递给命令的参数数量。</li>\n<li>-d：指定一个定界符，用于分隔输入数据中的字段。</li>\n<li>-i：⽤ {} 代替 传递的数据</li>\n<li>-I：将输入的每一行替换为指定的替换字符串，然后传递给命令。</li>\n<li>-0：以null字符作为输入数据的定界符，适用于处理包含空格、换行符或特殊字符的文件名。</li>\n<li>-P：指定并行的进程数量。</li>\n</ul>\n<p>示例：<br><img src=\"/../images/070503.png\"></p>\n<p><em><strong>注</strong></em>：<br>xargs 识别字符串的标识是空格或是换⾏符，因此如果遇⻅⽂件名有空格 或是换⾏符， xargs 就会识别为两个字符串，就会报错</p>\n<ul>\n<li>-print0：令find 用 NULL(\\0)字符分割文件名，⽽不是换⾏符（ find 默认以 \\n ，因此结果是换⾏输出的），达到”\\0hello world.txt\\0anotherfile.txt\\0”的效果</li>\n<li>xargs -0：表示 xargs 以 NULL 作为分隔符</li>\n</ul>\n<p><img src=\"/../images/070504.png\"></p>\n<h2 id=\"十、文件属性\"><a href=\"#十、文件属性\" class=\"headerlink\" title=\"十、文件属性\"></a>十、文件属性</h2><p><em><strong>文件或目录的属性主要包括</strong></em></p>\n<ul>\n<li>索引节点 inode </li>\n<li>⽂件类型 </li>\n<li>⽂件权限 </li>\n<li>硬链接个数 </li>\n<li>归属的⽤户和⽤户组 </li>\n<li>最新修改时间<br>注：文件名不属于文件属性</li>\n</ul>\n<p><img src=\"/../images/070505.png\"></p>\n<p><em><strong>扩展名</strong></em><br>Linux ⽂件的扩展名只是⽅便阅读，对⽂件类型不影响<br>Linux 通过⽂件属性区分⽂件类型</p>\n<p>Linux 常见扩展名</p>\n<ul>\n<li>.txt：⽂本类型</li>\n<li>.conf .cfg .configure：配置⽂件 </li>\n<li>.sh .bash：脚本后缀 </li>\n<li>.py：脚本后缀 </li>\n<li>.rpm：红帽系统⼆进制软件包名 </li>\n<li>.tar .gz .zip：压缩后缀</li>\n</ul>\n<p>可以通过 ls -F 给⽂件结尾加上特殊标识<br>ls -l 看第⼀个字符 </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">格式</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">-</td>\n<td align=\"center\">普通⽂件，（⼆进制，图⽚，⽇志， txt 等）</td>\n</tr>\n<tr>\n<td align=\"center\">d</td>\n<td align=\"center\">⽂件夹 directory</td>\n</tr>\n<tr>\n<td align=\"center\">b</td>\n<td align=\"center\">块设备⽂件， &#x2F;dev&#x2F;sda1 ，硬盘，光驱</td>\n</tr>\n<tr>\n<td align=\"center\">c</td>\n<td align=\"center\">设备⽂件，终端 &#x2F;dev&#x2F;tty1, ⽹络串⼝⽂件</td>\n</tr>\n<tr>\n<td align=\"center\">s</td>\n<td align=\"center\">套接字⽂件，进程间通信（ socket ）⽂件</td>\n</tr>\n<tr>\n<td align=\"center\">p</td>\n<td align=\"center\">普通⽂件 管道⽂件 pipe</td>\n</tr>\n<tr>\n<td align=\"center\">l</td>\n<td align=\"center\">链接⽂件 ,link 类型，快捷⽅式</td>\n</tr>\n</tbody></table>\n<p><em><strong>普通⽂件</strong></em><br>通过如下命令⽣成都是普通⽂件 (windows 中各种扩展名的⽂件，放⼊ linux 也是普通⽂件类型 ) </p>\n<ul>\n<li>echo </li>\n<li>touch </li>\n<li>cat </li>\n<li>重定向符号 &gt; </li>\n<li>cp</li>\n</ul>\n<p>特征</p>\n<ul>\n<li>⽂件类型是 “-“ 开头</li>\n<li>以内容区分⼀般分为 <ul>\n<li>纯⽂本，可以⽤ cat 命令读取内容，如字符、数字、特殊符号等 </li>\n<li>⼆进制⽂件（ binary ）， Linux 中命令属于这种格式，例如 ls 、 cat 等</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong>cp</strong>：<br>用于复制文件和目录。其基本用法是将一个或多个文件或目录从一个位置复制到另一个位置。<br>语法</p>\n<ul>\n<li>cp [选项] [源文件或目录] [目标文件或目录]</li>\n</ul>\n<p>常用选项</p>\n<ul>\n<li>-r：递归复制目录及其子目录和文件。</li>\n<li>-v：显示复制的详细信息。</li>\n<li>-p：保留源文件的属性（权限、修改时间等）。</li>\n<li>-d：复制符号链接本身，而不是链接的目标文件。</li>\n<li>-a：归档模式，相当于 -dR –preserve&#x3D;all，用于复制目录时保持所有的文件属性。</li>\n<li>-i：交互模式，如果目标文件已存在，会提示用户确认是否覆盖。</li>\n<li>-n：不覆盖已存在的目标文件。</li>\n<li>-f：强制复制，覆盖已存在的目标文件而不提示。</li>\n</ul>\n</blockquote>\n<p><em><strong>⽂件夹</strong></em><br>⽂件权限开头带有 d 字符的⽂件表示⽂件夹，是⼀种特殊的 Linux ⽂件</p>\n<ul>\n<li>mkdir </li>\n<li>cp 拷⻉⽂件夹</li>\n</ul>\n<p><em><strong>链接类型</strong></em><br>类似 windows 的快捷⽅式</p>\n<ul>\n<li>ln 命令创建</li>\n</ul>\n<blockquote>\n<p><strong>ln</strong>：<br>于创建文件系统中的链接。链接可以分为两种类型：硬链接（hard link）和符号链接（symbolic link，也称为软链接）</p>\n<ul>\n<li>硬链接 类似于引用&#x2F;别名，同物不同名；<ul>\n<li>ln [源文件] [硬链接名]</li>\n</ul>\n</li>\n<li>符号链接(软链接) 类似于指针<ul>\n<li>ln -s [选项] [源文件或目录] [符号链接名]</li>\n<li>选项：<ul>\n<li>-f：如果目标文件已存在，则删除它并创建新的链接。</li>\n<li>-v：显示创建链接的详细信息。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>注：默认为相对于当前工作目录的相对路径</p>\n</blockquote>\n<p><em><strong>file 命令</strong></em></p>\n<blockquote>\n<p><strong>file</strong> 确定给定文件或文件系统的类型。它通过检查文件的头部信息、魔术数字和其他特征来尝试猜测文件类型，并输出一个描述性的字符串。</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>file [选项] [文件或目录…]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-b：只输出文件类型，不输出文件名。</li>\n<li>-L：跟随符号链接，显示链接指向的文件类型。</li>\n</ul>\n<p><em><strong>which 命令</strong></em><br>查找 PATH 环境变量中的⽂件， linux 内置命令不在 path 中<br>[root@localhost find_test]# whereis ls<br>ls: &#x2F;usr&#x2F;bin&#x2F;ls &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1p&#x2F;ls.1p.gz</p>\n<p><em><strong>whereis 命令</strong></em><br>whereis 命令⽤来定位指令的⼆进制程序、源代码⽂件和 man ⼿册⻚等相 关⽂件的路径<br>[root@localhost find_test]# which python<br>&#x2F;usr&#x2F;bin&#x2F;python</p>\n<p>&nbsp;<br><em><strong>tar 命令</strong></em></p>\n<blockquote>\n<p><strong>tar</strong> 是Linux中最常用的归档工具，它可以将多个文件和目录打包成一个单一的归档文件，但不进行压缩。tar 常用于备份和文件传输。</p>\n</blockquote>\n<p>基本用法：</p>\n<ul>\n<li>tar [选项] [文件或目录…]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-c：创建归档文件。</li>\n<li>-x：解包归档文件。</li>\n<li>-v：显示过程信息。</li>\n<li>-f：指定归档文件名。</li>\n<li>-t：列出归档文件内容。</li>\n<li>-z：通过gzip进行压缩或解压缩。</li>\n<li>-C：指定解压缩的目录</li>\n<li>–exclude：排除指定文件</li>\n</ul>\n<p>案例</p>\n<ol>\n<li>仅打包、拆包<br><img src=\"/../images/070506.png\"></li>\n</ol>\n<p>注：</p>\n<ul>\n<li>参数必须写在最后，后⾯紧跟压缩⽂件名</li>\n<li>tar 命令仅打包，习惯⽤ .tar 作为后缀</li>\n<li>tar 命令加上 z 参数，⽂件以 .tar.gz 或 .tgz 表示</li>\n</ul>\n<ol start=\"2\">\n<li><p>打包压缩、解压缩拆包<br><img src=\"/../images/070507.png\"></p>\n</li>\n<li><p>-h 打包链接文件<br><img src=\"/../images/070508.png\"></p>\n</li>\n</ol>\n<p>注：tar 命令的默认行为——即使没有使用 -h 选项，tar 也会尝试跟随符号链接，并将链接指向的文件或目录的内容打包到归档文件中</p>\n<p><em><strong>gzip命令</strong></em></p>\n<blockquote>\n<p><strong>gzip</strong> 是一个常用的文件压缩工具，它使用DEFLATE算法来压缩文件。gzip 通常用于压缩单个文件，而不是目录。</p>\n</blockquote>\n<p>基本用法：</p>\n<ul>\n<li>gzip [选项] [文件…]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-d：解压缩文件。</li>\n<li>-v：显示压缩或解压缩过程信息。</li>\n<li>-r：递归压缩目录中的所有文件。</li>\n<li>-c：将解压缩后的文件写入标准输出，而原始文件保持不变。</li>\n</ul>\n<p><img src=\"/../images/070509.png\"></p>\n<p>注：</p>\n<ul>\n<li>文件夹⽆法压缩，必须先 tar 打包</li>\n<li>gzip 压缩、解压默认都会删除源⽂件</li>\n<li>通过 -c 及重定向实现保留原文件</li>\n</ul>\n<p><em><strong>zip命令</strong></em></p>\n<blockquote>\n<p><strong>zip</strong> 是一个流行的压缩工具，它可以将多个文件和目录压缩成一个单一的ZIP文件。</p>\n</blockquote>\n<p>基本用法：</p>\n<ul>\n<li>zip [选项] [zip文件] [文件或目录…]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-r：递归压缩目录及其子目录。</li>\n<li>-m：压缩后删除原始文件。</li>\n<li>-v：显示过程信息。</li>\n<li>-e：加密压缩文件。</li>\n</ul>\n<p>解压缩</p>\n<ul>\n<li>unzip<ul>\n<li>l：显示压缩⽂件内所包含的⽂件</li>\n<li>d：指定⽂件解压缩后所要存储的⽬录<blockquote>\n<ul>\n<li><ul>\n<li>unzip -d .&#x2F;tmpt song.txt.zip</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../images/070510.png\"></p>\n<hr>\n<p><em><strong>date 命令</strong></em></p>\n<blockquote>\n<p><strong>date</strong> 命令用于显示或设置系统日期和时间的工具。它提供了多种功能，包括显示当前日期和时间、设置日期和时间、执行基于日期的任务等。</p>\n</blockquote>\n<p>语法</p>\n<ul>\n<li>date [选项] [+格式]</li>\n</ul>\n<p>常用选项</p>\n<ul>\n<li>-d：指定日期和时间，可以指定一个字符串表示的时间。</li>\n<li>-s：设置系统日期和时间。</li>\n<li>-u：使用UTC（协调世界时）时间。</li>\n<li>+：指定日期和时间的输出格式。<ul>\n<li>“%Y-%m-%d %H:%M:%S”</li>\n</ul>\n</li>\n</ul>\n<p><em><strong>shred 命令</strong></em><br>shred 命令是 Linux 和 Unix 系统中用于安全删除文件的工具。通过多次覆盖文件内容，使用随机数据来确保文件内容无法被恢复。</p>\n<p>基本用法：</p>\n<ul>\n<li>shred [选项] 文件…</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-n：指定重写次数，默认为25次。</li>\n<li>-u：在文件被删除后立即刷新文件系统缓存，确保文件立即从磁盘上删除。</li>\n<li>-z：在文件被删除后添加一个0字节的数据块，进一步防止文件被恢复。</li>\n<li>-f：强制执行，即使文件无法删除也不会报错。</li>\n<li>-v：显示详细信息。</li>\n</ul>\n<p>案例：</p>\n<ul>\n<li>shred -n 25 -uzv song.txt</li>\n</ul>\n<h2 id=\"十一、用户管理\"><a href=\"#十一、用户管理\" class=\"headerlink\" title=\"十一、用户管理\"></a>十一、用户管理</h2><p><em><strong>用户</strong></em>：</p>\n<ul>\n<li>root：唯一 权力最大 可以操作任意指令（类似于群主）</li>\n<li>普通用户：由root创建 权力有限（类似于群成员 —[sudo 命令提升权限]—&gt; 群管理员）</li>\n<li>系统用户：由系统创建 无登录系统功能 系统运行依赖于用户 如bin、ftp等</li>\n</ul>\n<p><em><strong>组</strong></em>：<br>具有相似权限的多个用户的集合</p>\n<p><em><strong>UID</strong></em> &amp; <em><strong>GID</strong></em><br>在 Linux 系统中，用户和组的管理是通过用户 ID（User ID，UID）和组 ID（Group ID，GID）来实现的。UID 和 GID 是每个用户和组在系统中唯一的标识符。<br>UID：</p>\n<ul>\n<li>UID 是用来识别系统中的用户。</li>\n<li>   UID 范围从 0 到 4,294,967,295，其中：<ul>\n<li>   UID 0 通常分配给超级用户（root）。</li>\n<li>   UID 1 到 999 通常分配给系统用户，如邮件、打印服务等。</li>\n<li>   UID 1000 以上的通常分配给普通用户。</li>\n</ul>\n</li>\n<li>   UID 可以是数字，也可以是用户名。</li>\n</ul>\n<p>组 ID（GID）：<br>-\tGID 是用来识别用户所属的组。<br>-\tGID 范围与 UID 相同，从 0 到 4,294,967,295。<br>-\tGID 可以是数字，也可以是组名。<br>-\t每个用户都属于至少一个组，可以属于多个组。</p>\n<p>示例：<br>假设有一个用户名为 user1，其 UID 为 1000，GID 也为 1000。<br>user1 创建了一个名为 group1 的组，其 GID 为 2000。<br>user1 加入了 group1 组，其 GID 列表中包含 1000 和 2000。</p>\n<p>注：</p>\n<ul>\n<li>GID ⽅便为组中的⽤户统⼀规划权限或指定任务</li>\n<li>Linux 管理员在创建⽤户时，将⾃动创建⼀个与其同名的⽤户组，这个⽤ 户组只有该⽤户⼀个⼈，</li>\n</ul>\n<p><em><strong>常见命令解释器</strong></em>：</p>\n<ul>\n<li>&#x2F;bin&#x2F;sh 默认</li>\n<li>&#x2F;bin&#x2F;bash 默认</li>\n</ul>\n<p><em><strong>用户的配置文件</strong></em> (新创建的用户信息，追加到文件尾)</p>\n<ul>\n<li>&#x2F;etc&#x2F;passwd：⽤户信息 </li>\n<li>&#x2F;etc&#x2F;shadow：⽤户密码信息</li>\n<li>&#x2F;etc&#x2F;group：⽤户组信息 </li>\n<li>&#x2F;etc&#x2F;gshadow：⽤户组密码信息</li>\n<li>&#x2F;etc&#x2F;skel&#x2F;：包含了新用户账户的默认设置的特殊目录</li>\n</ul>\n<p>查看配置文件</p>\n<ul>\n<li>tail -5 &#x2F;etc&#x2F;passwd</li>\n</ul>\n<p><img src=\"/../images/070601.png\"></p>\n<ul>\n<li>以冒号 “:” 分割</li>\n<li>用户家目录：用户登录默认进去的目录，一般为 &#x2F;hmoe&#x2F;用户名</li>\n<li>shell解释器：<ul>\n<li>当前登录⽤户使⽤的解释器。 centos&#x2F;redhat 系统中，默认的 都是 bash 。</li>\n<li>若是禁⽌此⽤户登录机器，改为 &#x2F;sbin&#x2F;nologin 即 可</li>\n</ul>\n</li>\n</ul>\n<p><em><strong>用户管理命令</strong></em>：</p>\n<ul>\n<li>useradd：创建⽤户 </li>\n<li>usermod：修改⽤户信息 </li>\n<li>userdel：删除⽤户及配置⽂件 </li>\n<li>passwd：更改⽤户密码  </li>\n<li>chpasswd：批量更新⽤户密码 </li>\n<li>chage：修改⽤户密码属性 </li>\n<li>id：查看⽤户 UID 、 GID 、组信息 </li>\n<li>su：切换⽤户 sudo ⽤ </li>\n<li>root：身份执⾏命令 </li>\n<li>visudo：编辑 sudoers 配置⽂件</li>\n</ul>\n<p><strong>&#x2F;etc&#x2F;skel&#x2F;</strong> 此⽬录存放新⽤户需要的基础环境变量⽂件，添加新⽤户的时候，这个⽬<br>录下所有⽂件⾃动被复制到新家⽬录下，且默认是隐藏⽂件，以点开头</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# ls -la /etc/skel/</span><br><span class=\"line\">总用量 24</span><br><span class=\"line\">drwxr-xr-x.   3 root root   78 6月  30 10:51 .</span><br><span class=\"line\">drwxr-xr-x. 145 root root 8192 7月   6 15:33 ..</span><br><span class=\"line\">-rw-r--r--.   1 root root   18 11月 25 2021 .bash_logout</span><br><span class=\"line\">-rw-r--r--.   1 root root  193 11月 25 2021 .bash_profile</span><br><span class=\"line\">-rw-r--r--.   1 root root  231 11月 25 2021 .bashrc</span><br></pre></td></tr></table></figure>\n\n<p>&nbsp;<br><em><strong>恢复用户命令提示符</strong></em><br><img src=\"/../images/070602.png\"></p>\n<p><em><strong>useradd 命令</strong></em> :</p>\n<blockquote>\n<p><strong>useradd</strong> 命令⽤于 Linux 中创建的新的系统⽤户。 useradd 可⽤来建⽴⽤户帐号。帐号建好之后，再⽤ passwd 设定帐号的密 码，⽽可⽤ userdel 删除帐号。<br>使⽤ useradd 指令所建⽴的帐号，实际上是保存在 &#x2F;etc&#x2F;passwd ⽂本⽂件 中。</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>useradd [选项] 用户名</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-c&lt; 备注 &gt; ：加上备注⽂字。备注⽂字会保存在 passwd 的备注栏位中；</li>\n<li>-d&lt; 登⼊⽬录 &gt; ：指定⽤户登⼊时的启始⽬录； </li>\n<li>-D ：变更预设值； </li>\n<li>-e（有效期限）：指定帐号的有效期限； </li>\n<li>-f（缓冲天数）：指定在密码过期后多少天即关闭该帐号； </li>\n<li>-g（群组）：指定⽤户所属的群组； </li>\n<li>-G（群组）：指定⽤户所属的附加群组； </li>\n<li>-m ：⾃动建⽴⽤户的登⼊⽬录； </li>\n<li>-M ：不要⾃动建⽴⽤户的登⼊⽬录； </li>\n<li>-n ：取消建⽴以⽤户名称为名的群组； </li>\n<li>-r ：建⽴系统帐号； </li>\n<li>-s ：指定⽤户登⼊后所使⽤的 shell ； </li>\n<li>-u ：指定⽤户 id 。</li>\n</ul>\n<p><em><strong>groupadd 命令</strong></em><br>语法：</p>\n<ul>\n<li>groupadd [options] groupname<br>常用选项</li>\n<li>-g: 指定一个唯一的组ID（GID）。</li>\n<li>-r: 创建一个系统组，GID默认小于500。</li>\n<li>-f: 如果组已存在，则忽略错误继续执行。<br>示例</li>\n</ul>\n<p><em><strong>usermode 命令</strong></em> </p>\n<blockquote>\n<p>⽤于修改系统已存在的⽤户信息，只能修改未使⽤中的⽤户</p>\n</blockquote>\n<p>语法 </p>\n<ul>\n<li>usermod( 选项 )( 参数 )</li>\n</ul>\n<p>选项 </p>\n<ul>\n<li>-c&lt; 备注 &gt; ：修改⽤户帐号的备注⽂字； </li>\n<li>-d&lt; 登⼊⽬录 &gt; ：修改⽤户登⼊时的⽬录； </li>\n<li>-e&lt; 有效期限 &gt; ：修改帐号的有效期限； </li>\n<li>-f&lt; 缓冲天数 &gt; ：修改在密码过期后多少天即关闭该帐号； </li>\n<li>-g&lt; 群组 &gt; ：修改⽤户所属的群组； </li>\n<li>-G&lt; 群组 &gt; ；修改⽤户所属的附加群组； </li>\n<li>-l&lt; 帐号名称 &gt; ：修改⽤户帐号名称； </li>\n<li>-L ：锁定⽤户密码，使密码⽆效； </li>\n<li>-s ：修改⽤户登⼊后所使⽤的 shell ； </li>\n<li>-u ：修改⽤户 ID ； </li>\n<li>-U: 解除密码锁定。</li>\n</ul>\n<p>案例：</p>\n<ol>\n<li>-s 禁止用户登录，-M 并不创建家目录</li>\n</ol>\n<ul>\n<li>useradd -M -s &#x2F;sbin&#x2F;nologin achao</li>\n</ul>\n<ol start=\"2\">\n<li>初始化用户信息<br>指定id为1888 禁止登录 备注 指定组 指定有效期限 指定过期后多久关闭该账号<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# useradd -u 1888 -s /bin/nologin -c bro -G boy -e &quot;2024/7/10&quot; -f 3 achao</span><br><span class=\"line\">[root@localhost /]# id achao</span><br><span class=\"line\">uid=1888(achao) gid=1888(achao) 组=1888(achao),1002(boy)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>创建⽤户流程</strong> </p>\n<ol>\n<li>useradd aj </li>\n<li>系统读取 &#x2F;etc&#x2F;login.defs （⽤户定义⽂件）和 &#x2F;etc&#x2F;default&#x2F;useradd （⽤户默认配置⽂件）两⽂件中定义的规则创建新⽤户 </li>\n<li>向 &#x2F;etc&#x2F;passwd 和 &#x2F;etc&#x2F;group ⽂件中添加⽤户和组信息，向 &#x2F;etc&#x2F;shadow 和 &#x2F;etc&#x2F;gshadow 中添加密码信息 </li>\n<li>根据 &#x2F;etc&#x2F;default&#x2F;useradd ⽂件中配置的信息创建⽤户家⽬录 </li>\n<li>把 &#x2F;etc&#x2F;skel 中所有的⽂件复制到新⽤户家⽬录中</li>\n</ol>\n<p>&#x2F;ect&#x2F;login.defs（用户自定义文件） 和 &#x2F;etc&#x2F;default&#x2F;useradd（用户默认配置文件）<br><img src=\"/../images/070603.png\"></p>\n<p>注：<br>过滤命令 grep -v “^#” &#x2F;etc&#x2F;login.defs | grep -v “^$”<br>过滤掉所有以”#”开头的行（注释行）及所有空行</p>\n<blockquote>\n<p>正则表达式：</p>\n<ul>\n<li>是一种强大的文本匹配工具，它用于查找、替换或操作文本中符合某个模式的模式。</li>\n</ul>\n<p>特殊字符：</p>\n<ul>\n<li>.：匹配除换行符以外的任意字符。</li>\n<li>*：匹配前面的字符零次或多次。</li>\n<li>+：匹配前面的字符一次或多次。</li>\n<li>?：匹配前面的字符零次或一次。</li>\n<li>{n}：匹配前面的字符恰好 n 次。</li>\n<li>{n,}：匹配前面的字符至少 n 次。</li>\n<li>{n,m}：匹配前面的字符至少 n 次，但不超过 m 次。</li>\n<li>^：匹配行的开始。</li>\n<li>$：匹配行的结束。</li>\n<li>|：表示逻辑或，匹配任一字符串。</li>\n<li>()：用于分组，可以用来引用匹配的子串。</li>\n<li>[…]：表示字符集合，匹配任意一个方括号内的字符。</li>\n<li>\\：转义字符，用于匹配特殊字符本身。</li>\n</ul>\n</blockquote>\n<p>&nbsp;<br><em><strong>userdel 命令</strong></em>：<br>删除⽤户与相关⽂件 </p>\n<ul>\n<li>建议注释 &#x2F;etc&#x2F;passwd ⽤户信息⽽⾮直接删除⽤户<br>语法：</li>\n<li>userdel( 选项 )( 参数 )<br>选项：</li>\n<li>-f ：强制删除⽤户，即使⽤户当前已登录； </li>\n<li>-r ：删除⽤户的同时，删除与⽤户相关的所有⽂件。</li>\n</ul>\n<p><em><strong>chpasswd 命令</strong></em>：<br>批量改密码</p>\n<p>语法：</p>\n<blockquote>\n<p>chpasswd<br>用户名1:密码1<br>用户名:密码2<br>ctrl + d 结束输⼊</p>\n</blockquote>\n<p><em><strong>用户查询相关命令</strong></em></p>\n<p>1)<br><strong>id 命令</strong><br>语法：</p>\n<ul>\n<li>id [选项] 用户名</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-u：显示UID</li>\n<li>-g：显示GID</li>\n<li>-un：显示用户名</li>\n<li>-gn：显示组名</li>\n</ul>\n<p>2)<br>1)\twhoami:<br>•\t该命令用于显示当前登录用户的用户名。<br>•\t它简单地输出当前用户的用户名，不需要任何参数。</p>\n<p>2)\twho:<br>•\t该命令用于显示登录系统的用户列表。<br>•\t默认情况下，它会显示当前登录的所有用户，包括他们的登录名、登录时间、登录的终端（tty）和主机名。<br>•\t可以通过添加参数来显示更多信息，例如 -b 显示登录用户的主机名，-q 显示登录用户的数量，-l 显示登录用户的登录名和登录时间。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# who</span><br><span class=\"line\">aj       :0           2024-07-06 12:31 (:0)</span><br><span class=\"line\">aj       pts/0        2024-07-06 12:31 (:0)</span><br><span class=\"line\">root     pts/2        2024-07-06 14:55 (192.168.176.244)</span><br><span class=\"line\">用户名    用户终端      登录时间          IP</span><br></pre></td></tr></table></figure>\n\n\n\n<p>3)\tw:<br>•\t该命令用于显示系统当前的时间、登录用户的列表以及他们正在执行的命令。<br>•\t它比 who 命令提供的信息更详细，包括每个用户的登录时间、终端（tty）、主机名、登录的用户名、正在执行的进程 ID（PID）和命令。<br>•\t默认情况下，它会显示当前登录的所有用户，以及他们正在执行的命令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# w</span><br><span class=\"line\"> 16:55:14 up  3:23,  3 users,  load average: 0.00, 0.01, 0.05</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE          JCPU                PCPU                    WHAT</span><br><span class=\"line\">aj       pts/0    :0               12:31    4:23m         0.07s               0.07s bash</span><br><span class=\"line\">root     pts/2    192.168.176.244  14:55    2.00s         0.56s               0.04s w</span><br><span class=\"line\">⽤户名    终端号    远程主机的 IP   登录时间   终端空闲时间   所有进程以及⼦进程    活动进程使⽤的系统时间  ⽤户执⾏的进程名称</span><br><span class=\"line\">                                                          使⽤系统的总时间</span><br></pre></td></tr></table></figure>\n<p>第一行：<br>显示当前系统时间、系统从启动到运⾏的时间、系统运⾏中的⽤户数量和1、5、15分钟的平均负荷</p>\n<p>（last、lastlog命令查看⽤户详细的登录信息）</p>\n<p>4)\tlast:<br>•\t显示登录系统的用户的历史记录。<br>•\t它显示了每个用户的登录时间、终端（tty）、主机名和登录的用户名。<br>•\t默认情况下，它会显示所有用户的最后一次登录信息，但你可以使用参数来显示特定的用户或用户组的信息。</p>\n<p>5)\tlastlog:<br>•\t显示系统中所有用户最后一次登录的时间和日期。<br>•\t它显示了每个用户的用户名、登录主机名、登录的终端（tty）和最后一次登录的时间。<br>•\t默认情况下，它会显示所有用户的最后一次登录信息，但你可以使用参数来显示特定的用户或用户组的信息。</p>\n<p><em><strong>su 用户切换命令</strong></em><br>用法：</p>\n<ul>\n<li>su 用户名   #直接切换，没有完全切换环境变量</li>\n<li>su - 用户名   #减号 - 代表环境变量也会切换到目标用户的环境，建议使用</li>\n</ul>\n<p>注：<br>root 用户切换到普通用户不需要密码，普通用户切换到其他用户需要密码</p>\n<p><em><strong>sudo 提权命令</strong></em>：<br>⽤来以其他身份来执⾏命令，预设的身份为 root。<br>在 &#x2F;etc&#x2F;sudoers 中设置了可执⾏ sudo 指令的⽤户。<br>普通⽤户不需要 root 密码，即可⽤ root 权限执⾏命令</p>\n<p>sudo命令在提高系统安全性方面非常重要。它允许系统管理员精细控制用户的权限，减少了root用户的直接使用，从而降低了系统被恶意操作的风险。此外，sudo会记录所有执行的命令和操作者的信息到日志文件中，这有助于审计和追踪。</p>\n<p>语法：</p>\n<ul>\n<li>sudo 命令 # 以root身份执行命令</li>\n<li>sudo -u 用户 命令 # 以指定用户的身份执行命令</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-u：指定要以哪个用户身份执行命令。</li>\n<li>-l：列出当前用户可以执行的命令。</li>\n<li>-k：清除用户的密码缓存，下次执行sudo时需要重新输入密码。</li>\n<li>-s：以指定的用户身份启动一个shell。</li>\n</ul>\n<p><em><strong>visudo</strong></em><br>visudo ⽤于编辑 &#x2F;etc&#x2F;sudoers ⽂件，且提供语法检测，⽤于配置 sudo 命令</p>\n<ul>\n<li>[root@localhost ~]# visudo # 以 root 身份通过 visudo 配置 &#x2F;etc&#x2F;sudoers 文件</li>\n<li>&#x2F;root # 搜索 “root”</li>\n<li>n # next</li>\n<li>找到如下部分，yy 复制，p 黏贴，然后 修改用户名<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Allow root to run any commands anywhere</span><br><span class=\"line\">root    ALL=(ALL)       ALL</span><br><span class=\"line\">aj      ALL=(ALL)       ALL</span><br><span class=\"line\">houzi   ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure>\naj：指定用户<br>ALL&#x3D;(ALL)：从任何终端，并以任何用户或组的身份执行<br>ALL：执行任何命令（在使用 sudo 时需要输入自己的密码）</li>\n</ul>\n<p><img src=\"/../images/070701.png\"></p>\n<h2 id=\"十二、文件管理\"><a href=\"#十二、文件管理\" class=\"headerlink\" title=\"十二、文件管理\"></a>十二、文件管理</h2><p>文件属性：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[aj@localhost file_test]$ ll</span><br><span class=\"line\">总用量 0</span><br><span class=\"line\">lrwxrwxrwx. 1 root root 8 7月   7 11:22 test.link -&gt; test.txt</span><br><span class=\"line\">-rw-r--r--. 1 root root 0 7月   7 11:19 test.txt</span><br><span class=\"line\">drwxr-xr-x. 2 root root 6 7月   7 11:19 tmp</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li><p>第1个符号</p>\n<ul>\n<li>d：文件夹；</li>\n<li>- :普通文件</li>\n<li>l：软链接，快捷方式</li>\n</ul>\n</li>\n<li><p>后9个字母表示权限，3个一组，分别表示：属主(owner)、属组(group)、其他人(others)的权限<br>一组权限表示，是否可读(r&#x2F;-) 是否可写(w&#x2F;-) 是否可执行(x&#x2F;-)</p>\n<ul>\n<li>r：read 可读，可以⽤ cat、more、less、head、tail等命令查看，数字表示为4</li>\n<li>w：write 可写，可以vim编辑、使用重定向符号或者删除这个⽂件，数字表示为2</li>\n<li>x：executable  可以执⾏，数字表示为1</li>\n<li>-：没有权限，数字表示为0</li>\n</ul>\n</li>\n<li><p>.：通常表示这个文件或目录有额外的属性设置，比如ACLs（Access Control Lists）</p>\n</li>\n<li><p>2 :这个数字表示硬链接（hard link）的数量。硬链接是指向同一个inode的文件名。在这个例子中，anaconda 目录有两个硬链接，通常这意味着目录本身和目录的父目录中的指向。</p>\n</li>\n<li><p>root：这是目录的所有者（owner），也就是创建这个目录的用户。</p>\n</li>\n<li><p>root：这是目录的所属组（group），也就是目录所属的用户组。</p>\n</li>\n<li><p>232：这个数字表示目录的大小，以字节为单位。注意，目录的大小通常不是目录中文件的总大小，而是目录本身元数据的大小。</p>\n</li>\n<li><p>6月 30 11:03：这个是目录最后修改时间的日期和时间。</p>\n</li>\n<li><p>anaconda：这是目录的名称。</p>\n</li>\n</ul>\n</blockquote>\n<p>附：</p>\n<blockquote>\n<p>常⻅权限对应 ：<br>444 r–r–r– 均只读<br>600 rw——- 仅所有者可读、写<br>644 rw-r–r– 均可读 仅所有者可写<br>666 rw-rw-rw- 均可读、可写<br>700 rwx—— 仅所有者可读、写、运行<br>744 rwxr–r– 可读 仅所有者可写、运行<br>755 rwxr-xr-x 可读、可运行 仅所有者可写<br>777 rwxrwxrwx 均可读、可写、可运行</p>\n</blockquote>\n<p><em><strong>chmod 命令</strong></em></p>\n<blockquote>\n<p><strong>chmod</strong>（change mode）:用于改变文件或目录权限的命令</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>chmod [选项] [操作对象] [操作设定] [权限类别]</li>\n</ul>\n<p>操作对像：</p>\n<ul>\n<li>u：⽂件属主权限 </li>\n<li>g：同组⽤户权限 </li>\n<li>o：其它⽤户权限 </li>\n<li>a：所有⽤户（包括以上三种）</li>\n</ul>\n<p>权限设定：</p>\n<ul>\n<li>+：增加权限 </li>\n<li>-：取消权限 </li>\n<li>=：唯⼀设定权限</li>\n</ul>\n<p>权限类别：</p>\n<ul>\n<li>r：读权限 </li>\n<li>w：写权限 </li>\n<li>x：执⾏权限</li>\n</ul>\n<p>文件的r w x<br><img src=\"/../images/070702.png\"></p>\n<p>文件夹的r w x<br><img src=\"/../images/070703.png\"></p>\n<p><em><strong>chown 命令</strong></em><br>修改⽂件属主、属组信息</p>\n<p>语法</p>\n<ul>\n<li>chown 新属主的名字 文件&#x2F;文件夹 # 修改文件的用户名</li>\n<li>chown :属组文件 文件&#x2F;文件夹 # 修改文件的用户组</li>\n<li>chown 属主:属组文件 文件&#x2F;文件夹 # 同时修改文件的属主，属组</li>\n</ul>\n<p>参数 </p>\n<ul>\n<li>-R：递归处理所有的⽂件及⼦⽬录</li>\n<li>-v：为处理的所有⽂件显示诊断信息<br>只有超级用户（root）或者具有相应 sudo 权限的用户可以更改文件的所有者，即使您是文件的所有者</li>\n</ul>\n<p><img src=\"/../images/070704.png\"></p>\n<p><em><strong>umask 命令</strong></em></p>\n<blockquote>\n<p>用于设置文件和目录创建时默认权限掩码的命令</p>\n</blockquote>\n<ul>\n<li>也称之为遮罩码，防⽌⽂件、⽂件夹创建的时候,权限过⼤。当新⽂件被创建时，其最初的权限由⽂件创建掩码决定。⽤户每次注册进⼊系统时，umask 命令都被执⾏，并⾃动设置掩码改变默认值，新的权限将会把旧的覆盖。</li>\n<li>umask 默认配置在 &#x2F;etc&#x2F;profile 61-64 ⾏</li>\n</ul>\n<p>基本用法</p>\n<ul>\n<li>查看当前的 umask 值：<ul>\n<li>umask</li>\n</ul>\n</li>\n<li>设置新的 umask 值：<ul>\n<li>umask [value]</li>\n</ul>\n</li>\n</ul>\n<p>语法参数 </p>\n<ul>\n<li>-S: 以字符的形势显示当前的掩码。 </li>\n<li>-p ：带 umask 开头以数字的形势显示当前掩码</li>\n</ul>\n<p>Linux 默认设置：新创建文件的权限是666(出于安全考虑，默认非可执行) 文件夹是777</p>\n<p>实际权限 &#x3D; 默认权限 - umask （root 和 普通用户的umask不同）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[monkey@localhost umask_test]$ touch 01.txt</span><br><span class=\"line\">[monkey@localhost umask_test]$ mkdir dir</span><br><span class=\"line\">[monkey@localhost umask_test]$ ll</span><br><span class=\"line\">总用量 0</span><br><span class=\"line\">-rw-r--r--. 1 monkey girl 0 7月   7 16:16 01.txt</span><br><span class=\"line\">drwxr-xr-x. 2 monkey girl 6 7月   7 16:16 dir</span><br><span class=\"line\"></span><br><span class=\"line\"># 普通用户的umask</span><br><span class=\"line\">[monkey@localhost umask_test]$ umask</span><br><span class=\"line\">0022</span><br><span class=\"line\">[monkey@localhost umask_test]$ umask -S</span><br><span class=\"line\">u=rwx,g=rx,o=rx</span><br><span class=\"line\">[monkey@localhost umask_test]$ umask -p</span><br><span class=\"line\">umask 0022</span><br><span class=\"line\"># root 用户的umask</span><br><span class=\"line\">[root@localhost ~]# umask</span><br><span class=\"line\">0022</span><br><span class=\"line\">[root@localhost ~]# umask -S</span><br><span class=\"line\">u=rwx,g=rx,o=rx</span><br><span class=\"line\">[root@localhost ~]# umask -p</span><br><span class=\"line\">umask 0022</span><br></pre></td></tr></table></figure>\n<p>Linux 默认权限</p>\n<ul>\n<li>文件：</li>\n<li>文件夹：</li>\n</ul>\n<p>注：</p>\n<ul>\n<li>umask 值不得⼤于 6 </li>\n<li>umask 计算出的 ⽂件权限 不得拥有执⾏权限 x ，如果计算结果中有执⾏权限(–x)，则需要将其加⼀(-w-)<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rw-r---w-. 1 monkey girl 0 7月   7 16:34 02.txt</span><br><span class=\"line\">[monkey@localhost umask_test]$ umask 0025</span><br><span class=\"line\">[monkey@localhost umask_test]$ touch 02.txt</span><br><span class=\"line\">[monkey@localhost umask_test]$ ll</span><br><span class=\"line\">总用量 0</span><br><span class=\"line\">-rw-r---w-. 1 monkey girl 0 7月   7 16:34 02.txt</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><em><strong>chattr lsattr 命令</strong></em></p>\n<blockquote>\n<p>chattr 和 lsattr 是Linux系统中用于查看和修改文件或目录的扩展属性（attributes）的命令。这些扩展属性可以影响文件的行为，例如是否可以被修改或删除。</p>\n</blockquote>\n<p><strong>chattr（Change Attribute）</strong> 命令用于改变文件或目录的扩展属性。<br>基本用法</p>\n<ul>\n<li>chattr [模式] 扩展属性 文件</li>\n</ul>\n<p>模式</p>\n<ul>\n<li>+：增加参数 </li>\n<li>-：移除参数 </li>\n<li>=：更新为指定参数</li>\n</ul>\n<p>扩展属性</p>\n<ul>\n<li>i：不可变（immutable），文件不能被修改、删除或链接。</li>\n<li>a：只追加（append only），只能向文件中添加数据，不能删除或修改。</li>\n<li>A：不让系统修改⽂件最后访问时间</li>\n<li>c：压缩（compressed），文件在写入时会被自动压缩。</li>\n<li>s：安全删除（secure deletion），文件被删除时会被覆盖以防止数据恢复。</li>\n<li>u：undelete，允许文件被恢复。</li>\n</ul>\n<p><strong>lsattr（List Attribute）</strong>：命令用于列出文件或目录的扩展属性。<br>基本用法</p>\n<ul>\n<li>lsattr [options] file</li>\n</ul>\n<p><img src=\"/../images/070705.png\"></p>\n<p>注：</p>\n<ul>\n<li>chaddr命令通常需要有 root 权限</li>\n<li>使用这些命令时需要小心，因为它们可能会影响文件系统的正常操作。</li>\n</ul>\n<h2 id=\"十三、shell\"><a href=\"#十三、shell\" class=\"headerlink\" title=\"十三、shell\"></a>十三、shell</h2><h3 id=\"（一）shell-概述\"><a href=\"#（一）shell-概述\" class=\"headerlink\" title=\"（一）shell 概述\"></a>（一）shell 概述</h3><blockquote>\n<p><strong>shell</strong></p>\n<ul>\n<li>命令解释器，用户与操作系统交互的界面</li>\n<li>解释型编程语言，可以直接调用 Linux 系统命令；一个强大的脚本编程环境，用户可以通过编写脚本来执行复杂的任务</li>\n</ul>\n</blockquote>\n<p>外出应用程序——shell命令解释器——系统内核——硬件</p>\n<p>Linux 系统常见的 shell：</p>\n<ul>\n<li>sh（Bourne Shell）：由 Steve Bourne 开发，是 UNIX 系统上的原始 shell。许多后来的 shell 都尝试保持与 sh 的兼容性。</li>\n<li>Bash（Bourne-Again SHell）：这是大多数 Linux 发行版中最常见的默认 shell。Bash 是一个改进版的 Bourne shell（sh），添加了许多新特性，同时保持与 sh 的脚本兼容。</li>\n</ul>\n<p>注：</p>\n<ul>\n<li>系统支持的 shell 可在 <strong>&#x2F;etc&#x2F;shells</strong> 查看</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# cat /etc/shells</span><br><span class=\"line\">/bin/sh</span><br><span class=\"line\">/bin/bash</span><br><span class=\"line\">/usr/bin/sh</span><br><span class=\"line\">/usr/bin/bash</span><br><span class=\"line\">/bin/tcsh</span><br><span class=\"line\">/bin/csh</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>可输入 shell 名称切换指定 shell，并通过输入 <strong>exit</strong> 退回到默认的 <strong>bash</strong></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# sh</span><br><span class=\"line\">sh-4.2# exit</span><br><span class=\"line\">exit</span><br><span class=\"line\">[root@localhost /]# csh</span><br><span class=\"line\">[root@localhost /]# exit</span><br><span class=\"line\">exit</span><br></pre></td></tr></table></figure>\n\n<p>&nbsp;</p>\n<h3 id=\"（二）shell-脚本的执行方式\"><a href=\"#（二）shell-脚本的执行方式\" class=\"headerlink\" title=\"（二）shell 脚本的执行方式\"></a>（二）shell 脚本的执行方式</h3><h4 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"echo\"></a>echo</h4><blockquote>\n<p><strong>echo</strong> 命令用于在终端上输出文本，可以将字符串或指定变量显示在屏幕上。</p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>echo [选项] [字符串]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-n：取消输出末尾的换行符。</li>\n<li>-e：启用反斜杠转义解释，允许使用转义字符。</li>\n</ul>\n<p><img src=\"/../images/070901.png\"></p>\n<pre><code>[root@localhost /]# echo -e &quot;ab\\bc&quot; # \\b 退格，即向左删除\nac\n[root@localhost /]# echo -e &quot;a\\tb\\tc\\n1\\t2\\t3&quot; # \\t tab制表键 \\n 换行键\na       b       c\n1       2       3\n[root@localhost /]# echo -e   &quot;\\x61\\t\\x62\\t\\x63\\n\\x64\\t\\x65\\t\\x66&quot; # \\xhh 按照十六进制ASC码输出\na       b       c\nd       e       f\n[root@localhost /]# echo -e &quot;\\e[1;36m  abcd \\e[0m&quot; # \n  abcd\n[root@localhost /]#  \n</code></pre>\n<p>注：<br>\\e[1 和 \\e[0m 分别表示开启和结束颜色输出<br>#30m&#x3D;黑色，31m&#x3D;红色，32m&#x3D;绿色，33m&#x3D;黄色<br>#34m&#x3D;蓝色，35m&#x3D;洋红，36m&#x3D;青色，37m&#x3D;白色</p>\n<h4 id=\"shebang\"><a href=\"#shebang\" class=\"headerlink\" title=\"shebang\"></a>shebang</h4><blockquote>\n<p>一个由两个字符 <strong>#!</strong> 组成的行，出现在脚本文件的第一行。**#!** 后通常跟着一个路径，指向解释该脚本内容的程序。</p>\n</blockquote>\n<h4 id=\"脚本案例\"><a href=\"#脚本案例\" class=\"headerlink\" title=\"脚本案例\"></a>脚本案例</h4><p>案例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[aj@localhost tmp]$ cat test.sh</span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">超哥强呀，奥⼒给</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">#!/bin/bash 这⾥就是注释的作⽤了</span><br><span class=\"line\">[aj@localhost tmp]$ test.sh</span><br><span class=\"line\">bash: test.sh: 未找到命令...</span><br><span class=\"line\">[aj@localhost tmp]$ chmod u+x test.sh</span><br><span class=\"line\">[aj@localhost tmp]$ test.sh</span><br><span class=\"line\">bash: test.sh: 未找到命令...</span><br><span class=\"line\">[aj@localhost tmp]$ ./test.sh</span><br><span class=\"line\"></span><br><span class=\"line\">超哥强呀，奥⼒给</span><br><span class=\"line\"></span><br><span class=\"line\">[aj@localhost tmp]$</span><br></pre></td></tr></table></figure>\n\n<p>系统自带的bash脚本，开机启动脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[aj@localhost tmp]$ head -1 /etc/rc.d/init.d/network</span><br><span class=\"line\">#! /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>注：</p>\n<ul>\n<li>如果脚本未指定 shebang ，脚本执⾏的时候，默认⽤当前 shell 去解释脚本，即 $SHELL</li>\n<li>#! 之后的解释程序，需要写其绝对路径</li>\n<li>养成注释脚本，规范开发的习惯</li>\n</ul>\n<h4 id=\"脚本执行\"><a href=\"#脚本执行\" class=\"headerlink\" title=\"脚本执行\"></a>脚本执行</h4><ul>\n<li>赋予脚本执行权限，通过绝对路径或相对路径调用（不能直接写文件名）<ul>\n<li>chmod 755 test.sh</li>\n<li>.&#x2F;test.sh</li>\n</ul>\n</li>\n<li>通过 Bash 调用执行脚本（ bash 直接加 文件名，不赋予执行权限也能执行：本质是用 bash 解释脚本）<ul>\n<li>bash test.sh</li>\n</ul>\n</li>\n</ul>\n<p>注：习惯上先赋予脚本执行权限，再通过相对路径或绝对路径调用执行</p>\n<blockquote>\n<p><strong>dos2unix</strong> 用于转换 Windows 系统中编写的脚本 为 Unix 的格式</p>\n<p>yum -y install dos2unix  #可能需要通过 yum 手动安装</p>\n</blockquote>\n<p>&nbsp;</p>\n<h3 id=\"（三）Bash-基本功能\"><a href=\"#（三）Bash-基本功能\" class=\"headerlink\" title=\"（三）Bash 基本功能\"></a>（三）Bash 基本功能</h3><h4 id=\"1-历史命令与补全\"><a href=\"#1-历史命令与补全\" class=\"headerlink\" title=\"(1) 历史命令与补全\"></a>(1) 历史命令与补全</h4><h5 id=\"历史命令\"><a href=\"#历史命令\" class=\"headerlink\" title=\"历史命令\"></a>历史命令</h5><blockquote>\n<p><strong>history 命令</strong></p>\n</blockquote>\n<p>语法：</p>\n<ul>\n<li>history [选项] [历史命令保存文件]</li>\n</ul>\n<p>常用选项：</p>\n<ul>\n<li>-c：  清空历史命令  </li>\n<li>-w： 把缓存中的历史命令写入历史命令保存文件 ~&#x2F;.bash_history</li>\n</ul>\n<p>注：</p>\n<ul>\n<li>-c 会把缓存和文件中保存的历史命令都删除（不建议）</li>\n<li>-w 默认情况下是等正常退出之后，缓存中的命令才会写入 ~&#x2F;.bash_history</li>\n<li>历史命令默认会保存1000条,可以在环境变量配置文件&#x2F;etc&#x2F;profile “HISTSIZE&#x3D;1000” 中进行修改，重新登录后生效。若历史记录超过设置的数量，则从头开始删除来给新命令让位。</li>\n</ul>\n<p>历史命令的调用：</p>\n<ul>\n<li>使用上、下箭头调用以前的历史命令 </li>\n<li>使用“!n”重复执行第n条历史命令（调用 history 命令，会给历史命令编号）</li>\n<li>使用“!!”重复执行上一条命令 </li>\n<li>使用“!字串”重复执行最后一条以该字串开头的命令</li>\n</ul>\n<h5 id=\"自动补全\"><a href=\"#自动补全\" class=\"headerlink\" title=\"自动补全\"></a>自动补全</h5><p>在Bash中，命令与文件补全是非常方便与常用的功能，我们只要在输入命令或文件时，按 “<strong>Tab</strong>” 键就会自动进行补全</p>\n<ul>\n<li>若以当前字符串开头的命令或目录不止一个，按两下 <strong>Tab</strong> 键，会显示出所有以当前字符串开头的命令</li>\n</ul>\n<h4 id=\"2-命令别名与常用快捷键\"><a href=\"#2-命令别名与常用快捷键\" class=\"headerlink\" title=\"(2) 命令别名与常用快捷键\"></a>(2) 命令别名与常用快捷键</h4><h5 id=\"命令别名\"><a href=\"#命令别名\" class=\"headerlink\" title=\"命令别名\"></a>命令别名</h5><p>指令</p>\n<ul>\n<li>设定命令别名<br>[root@localhost ~]# alias 别名&#x3D;’原命令’ </li>\n<li>查询命令别名<br>[root@localhost ~]# alias </li>\n<li>让别名永久生效（alias方式 重启系统别名就会失效）<br>[root@localhost ~]# vim &#x2F;root&#x2F;.bashrc </li>\n<li>删除别名<br>[root@localhost ~]# unalias 别名</li>\n</ul>\n<p>命令执行时顺序：<br>1 第一顺位执行用绝对路径或相对路径执行的命令。<br>2 第二顺位执行别名。<br>3 第三顺位执行Bash的内部命令。<br>4 第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令。</p>\n<h5 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h5><p>注：均小写</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">快捷键</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Ctrl + C</td>\n<td align=\"center\">强制终止当前命令</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + L</td>\n<td align=\"center\">清屏，相当于clear</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + D</td>\n<td align=\"center\">退出当前终端，相当于logout</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + R</td>\n<td align=\"center\">在历史命令中搜索，按下ctrl+R之后，就会出现搜索界面，只要输入搜索内容，就会从历史命令中搜索</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + A&#x2F;E</td>\n<td align=\"center\">把光标移动到命令行开头&#x2F;结尾</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + U&#x2F;K</td>\n<td align=\"center\">删除或剪切光标之前&#x2F;后的内容</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + Y</td>\n<td align=\"center\">粘贴</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + Z</td>\n<td align=\"center\">暂停并放入后台</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + S</td>\n<td align=\"center\">暂停屏幕输出</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + Q</td>\n<td align=\"center\">恢复屏幕输出</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-输入输出重定向\"><a href=\"#3-输入输出重定向\" class=\"headerlink\" title=\"(3) 输入输出重定向\"></a>(3) 输入输出重定向</h4><h5 id=\"标准输入输出\"><a href=\"#标准输入输出\" class=\"headerlink\" title=\"标准输入输出\"></a>标准输入输出</h5><p><img src=\"/../images/072001.png\"></p>\n<h5 id=\"输出重定向\"><a href=\"#输出重定向\" class=\"headerlink\" title=\"输出重定向\"></a>输出重定向</h5><p><img src=\"/../images/072002.png\"></p>\n<p>注：</p>\n<ul>\n<li>命令要有输出（像cd命令，路径正确的情况下无输出，就不行）</li>\n<li>2与&gt;无空格</li>\n<li>输出内容无意义的命令 &amp;&gt; &#x2F;dev&#x2F;null（只执行命令 无论有无输出）</li>\n<li>同理也存在 命令 &gt; 文件1 2&gt; 文件2</li>\n</ul>\n<h5 id=\"输入重定向\"><a href=\"#输入重定向\" class=\"headerlink\" title=\"输入重定向\"></a>输入重定向</h5><ul>\n<li>命令&lt;文件  把文件作为命令的输入 </li>\n<li><blockquote>\n<p>命令&lt;&lt; 标识符<br>…<br>标识符   把标识符之间内容作为命令的输入</p>\n</blockquote>\n</li>\n</ul>\n<p>例如：搭配 wc</p>\n<h4 id=\"4-多命令顺序执行与管道符\"><a href=\"#4-多命令顺序执行与管道符\" class=\"headerlink\" title=\"(4) 多命令顺序执行与管道符\"></a>(4) 多命令顺序执行与管道符</h4><h5 id=\"多命令顺序执行\"><a href=\"#多命令顺序执行\" class=\"headerlink\" title=\"多命令顺序执行\"></a>多命令顺序执行</h5><p><img src=\"/../images/072101.png\"><br><strong>dd</strong> 命令：用于复制和转换文件</p>\n<ul>\n<li>dd if&#x3D;输入文件 of&#x3D;输出文件 bs&#x3D;字节数 count&#x3D;个数    <ul>\n<li>if&#x3D;输入文件  指定源文件或源设备  </li>\n<li>of&#x3D;输出文件  指定目标文件或目标设备   </li>\n<li>bs&#x3D;字节数  指定一次输入&#x2F;输出多少字节，即把这些字节看做一个数据块 </li>\n<li>count&#x3D;个数  指定输入&#x2F;输出多少个数据块</li>\n</ul>\n</li>\n</ul>\n<p>例子：<br>[root@localhost ~]# date ; dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;root&#x2F;testfile bs&#x3D;1k count&#x3D;100000 ; date</p>\n<p>测试命令执行时间</p>\n<ul>\n<li>date; 待测试命令; date</li>\n</ul>\n<p>[root@localhost ~]# ls anaconda-ks.cfg &amp;&amp; echo yes<br>[root@localhost ~]# ls &#x2F;root&#x2F;test || echo no</p>\n<p>判断一个命令是否正确</p>\n<ul>\n<li>[root@localhost ~]# 命令 &amp;&amp; echo yes || echo no</li>\n</ul>\n<h5 id=\"管道符\"><a href=\"#管道符\" class=\"headerlink\" title=\"管道符\"></a>管道符</h5><p>命令1的正确输出作为命令2的操作对象</p>\n<ul>\n<li>命令1  |  命令2</li>\n</ul>\n<p>注：命令1 必须有正确的输出</p>\n<p>例子：<br>[root@localhost ~]# ll -a &#x2F;etc&#x2F;  | more<br>[root@localhost ~]# netstat -an | grep “ESTABLISHED”</p>\n<blockquote>\n<p><strong>netstat</strong>：用于显示各种网络相关信息，如网络连接、路由表、接口统计信息、伪装连接以及多播成员的工具</p>\n</blockquote>\n<blockquote>\n<p>grep [选项] “搜索内容” 文件名<br>选项：<br>-i：  忽略大小写<br>-n：  输出行号<br>-v：  反向查找<br>–color&#x3D;auto 搜索出的关键字用颜色显示</p>\n</blockquote>\n<h4 id=\"5-通配符与其他特殊符号\"><a href=\"#5-通配符与其他特殊符号\" class=\"headerlink\" title=\"(5) 通配符与其他特殊符号\"></a>(5) 通配符与其他特殊符号</h4><h5 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h5><p>通配符用于匹配文件名，与正则表达式相似但不同<br><img src=\"/../images/072102.png\"></p>\n<h5 id=\"Bash中其他特殊符号\"><a href=\"#Bash中其他特殊符号\" class=\"headerlink\" title=\"Bash中其他特殊符号\"></a>Bash中其他特殊符号</h5><p><img src=\"/../images/072103.png\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p>shell 前： <a href=\"https://www.bilibili.com/video/BV1CS4y1C7ZY?p=1&vd_source=df38266eedfef61aa7370319919d94d7\">老男孩 于超</a></p>\n<p>shell 及之后：<a href=\"https://www.bilibili.com/video/BV1mW411i7Qf?p=63&vd_source=df38266eedfef61aa7370319919d94d7\">兄弟连 沈超</a></p>\n</blockquote>\n","categories":[],"tags":[{"name":"运维","slug":"运维","permalink":"http://example.com/tags/%E8%BF%90%E7%BB%B4/"}]},{"title":"前端入门","date":"2024-06-08T14:34:14.000Z","path":"2024/06/08/Introduction-to-front-end-development/","text":"前言前端负责用户在浏览器中看到和与之交互的内容，网页是在浏览器中呈现内容的文档或页面。通常网页由以下几部分组成： HTML：定义了页面的结构和内容，包括文本、图像、链接等 CSS：定义页面的样式和布局 JavaScript(JS) ：添加交互性和动态功能 &nbsp; 安装 VSCode 开发环境 &nbsp; 一、 HTML(一) HTML 简介 HTML：Hypertext Markup Language 超文本标记语言 (1) 标签通过 标签 来定义文本、图片、链接等等 双标签——用于有内容的元素123&lt;p&gt;这是一个段落。&lt;/p&gt;&lt;h1&gt;这是一个标题&lt;/h1&gt;&lt;a href=&#x27;#&#x27;&gt;这是一个超链接。&lt;/a&gt; 单标签——用于没有内容的元素123&lt;input type=&quot;text&quot;&gt;&lt;br&gt;&lt;hr&gt; &nbsp; (2) HTML文件结构123456789101112131415&lt;!-- 这里放置文件的元信息 --&gt;&lt;!DOCTYPE html&gt; &lt;!-- 声明HTML文件 --&gt;&lt;html lang=&quot;en&quot;&gt; &lt;!-- HTML标签对 HTML的起始点 最外层容器 包含整个文档的结构 --&gt; &lt;head&gt; &lt;!-- head标签对 表示文档的头部 包含文件的原信息 --&gt; &lt;title&gt;文档标题&lt;/title&gt; &lt;!-- 文档标题 --&gt; &lt;!-- 连接外部样式表和脚本文件 --&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt; &lt;script&gt; src=&quot;script.js&quot; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- body标签对 内部包含实际显示在浏览器页面中的内容 --&gt; &lt;h1&gt;这是一个标题。&lt;/h1&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;a href=&quot;https://aj3230.github.io&quot;&gt;这是一个链接&lt;/a&gt; &lt;/body&gt;&lt;/html&gt; &nbsp; (二) HTML 常用文本标签12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;常见文本标签&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;一、标题标签&lt;/h1&gt; &lt;h2&gt;二级标题标签&lt;/h2&gt; &lt;h6&gt;六级标题标签&lt;/h6&gt; &lt;!--段落标签--&gt; &lt;h1&gt;二、段落标签&lt;/h1&gt; &lt;p&gt;这是一个段落标签&lt;/p&gt; &lt;!--更改文本样式--&gt; &lt;h1&gt;三、更改文本样式&lt;/h1&gt; &lt;p&gt; &lt;b&gt;粗体b&lt;/b&gt; &lt;strong&gt; 粗体strong&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;&lt;i&gt;斜体i&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;&lt;i&gt;斜粗体b+i&lt;/i&gt;&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;u&gt;下划线u&lt;/u&gt;&lt;/p&gt; &lt;p&gt;&lt;s&gt;删除线s&lt;/s&gt;&lt;/p&gt; &lt;!--列表--&gt; &lt;h1&gt;四、列表&lt;/h1&gt; &lt;h2&gt;(1)无序列表 ul&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;无序列表元素1&lt;/li&gt; &lt;li&gt;无序列表元素2&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;(2)有序列表 ol&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;有序列表元素1&lt;/li&gt; &lt;li&gt;有序列表元素2&lt;/li&gt; &lt;/ol&gt; &lt;!--表格标签--&gt; &lt;h1&gt;五、表格标签 table&lt;/h1&gt; &lt;table border=&quot;3&quot;&gt; &lt;!--table的属性border边框--&gt; &lt;tr&gt; &lt;!--table row--&gt; &lt;th&gt;列标题1&lt;/th&gt; &lt;!--table header--&gt; &lt;th&gt;列标题2&lt;/th&gt; &lt;th&gt;列标题3&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;元素11&lt;/td&gt; &lt;!--table data--&gt; &lt;td&gt;元素12&lt;/td&gt; &lt;td&gt;元素13&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;元素21&lt;/td&gt; &lt;td&gt;元素22&lt;/td&gt; &lt;td&gt;元素23&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (三) HTML 属性 属性：用于定义元素的行为和外观，以及与其他元素的关系 基本语法： 1&lt;开始标签 属性名=&quot;属性值&quot;&gt; 注： 每个元素可以同时具有不同的属性 属性名不区分大小写，属性值区分大小写123&lt;img src=&quot;a.jpg&quot; alt=&quot;&quot;&gt;&lt;img SRC=&quot;a.jpg&quot; alt=&quot;&quot;&gt; &lt;!-- src表示图片标签的路径 --&gt;&lt;img src=&quot;A.jpg&quot; alt=&quot;&quot;&gt; &lt;!--前两者相同 与第三个不同--&gt; 大多数 HTML 元素共有的属性： 属性名 描述 class 为 HTML 元素定义一个或多个类(类从样式文件中引入) id 定义元素唯一的ID style 规定元素的行内样式 a 标签的属性： href ：超链接 target ：定义链接的打开方式 _blank ：在新窗口或标签页中打开链接。 _self ：在同一窗口或标签页中打开链接(默认值)。 _parent ：在父框架集中打开链接。 framename ：在指定的框架中打开链接。 src 标签的属性 src ：图片的路径或URL。 alt ：代替文本，图片加载失败时显示的文字。 width height ：宽、高。 &nbsp; (四) HTML 区块 在HTML中，元素根据它们在页面上的布局和表现，分为块级元素和内联元素(也称行内元素) &nbsp; 块级元素（Block-level Elements）组织和布局页面的主要结构和内容，如段落、标题、列表、表格等。用于创建页面的主要部分，将内容分割成逻辑块。 在浏览器中以新行开始，占据整行的宽度，在页面上呈现为独立的内容块 可以包含其他块级元素和内联元素 常见块级元素 &lt;div&gt; &lt;p&gt; &lt;h1&gt;，&lt;h2&gt;，&lt;h3&gt;，&lt;h4&gt;，&lt;h5&gt;，&lt;h6&gt; &lt;ul&gt;，&lt;ol&gt;，&lt;li&gt; &lt;form&gt; &lt;header&gt;，&lt;footer&gt;，&lt;section&gt;，&lt;article&gt; &lt;table&gt;，&lt;tr&gt;，&lt;td&gt;，&lt;th&gt; 内联元素（Inline Elements）通常用于添加文本样式,或成为文本中的一部分应用样式.可在文本中插入小的元素, 如超链接 通常在同一行内出现,不会独占一行 只占据内容所需的宽度，而非整行的宽度。 不能包括块级元素，但可以包含其他行内元素 常见内联元素 &lt;span&gt; &lt;a&gt; &lt;strong&gt;，&lt;em&gt;，&lt;cite&gt;，&lt;q&gt; &lt;img&gt; &lt;input&gt;，&lt;textarea&gt;，&lt;button&gt; &lt;label&gt; &lt;select&gt;，&lt;option&gt; &nbsp; div 标签： 块级标签，常用于创建一个包含其他HTML元素的容器块，以组织页面的结构和布局，一般无语意。 span 标签： 内联标签，用于内联样式化文本 &nbsp; div 标签 和 span 标签 常与 CSS 和 JS 一起使用，以实现更复杂的页面布局和样式化。 &nbsp; (五) HTML 表单1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;HTML 表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- form 标签 表单的容器 用于创建一个向服务器提交数据的表单 --&gt; &lt;form action=&quot;#&quot;&gt; &lt;!--action属性指定用户提交表单时 表单数据被发送到的位置。 值是一个URL，通常指向服务器上一个处理表单数据的脚本文件--&gt; &lt;!-- input 标签 表单内的元素 用于搜集不同类型的用户输入数据--&gt; &lt;h2&gt;一、文本框（text）与 密码框（password）&lt;/h2&gt; &lt;p&gt; &lt;b&gt;span 标签&lt;/b&gt; 的效果：&lt;/p&gt; &lt;span&gt;用户名：&lt;/span&gt; &lt;!-- span 标签 用于内联样式化文本 --&gt; &lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名&quot;&gt; &lt;!-- placeholder 属性 提示用户输入--&gt; &lt;span&gt;用户名： &lt;/span&gt; &lt;input type=&quot;text&quot; value=&quot;请输入用户名&quot;&gt; &lt;!-- 规定input字段的值--&gt; &lt;br&gt; &lt;p&gt; &lt;b&gt;label 标签&lt;/b&gt; 的效果：&lt;/p&gt; &lt;!-- label 标签 与span作用类似 仅限于与input对应使用 --&gt; &lt;label for=&quot;username&quot;&gt;用户名：&lt;/label&gt; &lt;!-- label 标签的for属性 可以将label标签通过id绑定到input元素--&gt; &lt;input type=&quot;text&quot; id=&quot;username&quot; placeholder=&quot;请输入用户名&quot;&gt; &lt;!-- placeholder 属性 提示用户输入--&gt; &lt;br&gt; &lt;label for=&quot;password&quot;&gt;密码： &lt;/label&gt; &lt;input type=&quot;password&quot; id=&quot;password&quot; placeholder=&quot;请输入密码&quot;&gt; &lt;!-- 规格input字段的值--&gt; &lt;br&gt; &lt;h2&gt;二、单选按钮（radio）&lt;/h2&gt; &lt;label&gt;性别：&lt;/label&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot;&gt; 男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot;&gt; 女 &lt;input type=&quot;radio&quot; name=&quot;gender&quot;&gt; 其他 &lt;br&gt; &lt;h2&gt;三、多选按钮（checkbox）&lt;/h2&gt; &lt;label for=&quot;checkbox&quot;&gt;爱好：&lt;/label&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;&gt; 影视 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;&gt; 音乐 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;&gt; 跑步 &lt;br&gt; &lt;h2&gt;四、提交按钮（submit）&lt;/h2&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot;&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; 二、CSS(一) CSS 引入 CSS：Cascading Style Sheets 层叠样式表用于定义网页的外观和样式，通过CSS，可以指定各个元素的颜色、字体、大小、间距、边框、背景等样式，从而实现更精确的页面设计。通常用于与 HTML 一起构建 web 页面，HTML 负责定义页面的结构和内容，CSS 负责控制页面的外观和样式。 &nbsp; (1) 基本语法CSS 通常由选择器、属性和属性值组成，多个规则可以组合在一起，以便同时应用多个样式。 1234选择器&#123; 属性1: 属性值1; 属性2: 属性值2;&#125; 选择器的声明中可以包含多个声明。 声明中的所有属性和值均以键值对的形式出现。 声明的每一行属性需要以英文分号 “;“ 结尾 e.g. 12345/* 这是一个 p 标签选择器 */p &#123; color: red; font-size: 16px;&#125; &nbsp; (2)导入方式将 CSS 导入 HTML，以将样式应用到 HTML 中 三种常见的导入方式 内联样式（Inline Styles）：直接在HTML元素中使用 style 属性定义，适用于对单个元素应用特定的样式，但不利于样式管理和维护。1&lt;p style=&quot;color: red; font-size: 16px;&quot;&gt;这是一个段落。&lt;/p&gt; 内部样式表（Internal Style Sheet）：在HTML文档的 &lt;head&gt; 部分使用 &lt;style&gt; 标签定义的。这种方式适用于单个页面的样式定义，但样式不能在多个页面之间共享。12345678&lt;head&gt; &lt;style&gt; p &#123; color: red; font-size: 16px; &#125; &lt;/style&gt;&lt;/head&gt; 外部样式表（External Style Sheet）：将CSS代码保存在一个单独的CSS文件中，并通过HTML文档的 &lt;head&gt; 部分使用 &lt;link&gt; 标签引入。可以使得样式在多个页面之间共享，并且易于管理和更新。123&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;&lt;/head&gt; 优先级：内联样式 &gt; 内部样式表 &gt; 外部样式表优先级高的导入方式能覆盖优先级较低的导入方式 1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;CSS 导入方式&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./CSS/style.css&quot;&gt; &lt;!-- 内部样式表 --&gt; &lt;style&gt; /* 内联样式 &gt; 内部样式表 &gt; 外部样式表 */ p &#123; color: blue; font-size: 26px; &#125; /* 无法覆盖 */ h1 &#123; color: black; &#125; /* 成功覆盖 */ h3 &#123; color: black; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;这是一个应用了 内部样式表 的文本&lt;/p&gt; &lt;h1 style=&quot;color: red;&quot;&gt;这是一个应用了 内联样式 的 一级标签 &lt;/h1&gt; &lt;h3&gt;这是一个应用了 外部样式表 的 三级标签 &lt;/h3&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (二) CSS 选择器 CSS 的关键部分，用于选择要应用样式的 HTML 元素，针对特定元素或一组元素定义样式常用的包括： 元素选择器：最基本的选择器，它选择所有匹配指定元素类型的HTML元素。123p &#123; color: blue;&#125; 类选择器：用于选择具有特定类名的元素，可以跨多个元素类型复用样式 123.navbar &#123; background-color: #333;&#125; ID 选择器：用于选择具有特定ID的元素。 123#header &#123; height: 100px;&#125; 通用选择器：* 选中文档中的所有元素 1234* &#123; margin: 0; padding: 0;&#125; 子选择器：用于选择直接位于另一个元素内的子元素。 123ul &gt; li &#123; border-bottom: 1px solid #ccc;&#125; 后代选择器（后代选择器）：用于选择位于另一个元素内的元素，无论它们之间的嵌套层次有多深 123div p &#123; color: red;&#125; 并集选择器（兄弟选择器） 伪类选择器 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;CSS 选择器&lt;/title&gt; &lt;style&gt; /* 元素选择器 */ h2 &#123; color: aquamarine; &#125; /* 类选择器 */ .highlight &#123; background-color: burlywood; &#125; /* ID选择器 */ #header &#123; font-size: larger; &#125; /* 通用选择器 */ * &#123; font-family: &#x27;KaiTi&#x27;; &#125; /* 子元素选择器 不能应用到子代的后代*/ .father &gt; .son &#123; color: cadetblue; &#125; /* 后代选择器 (包含选择器) 可以应用到子代 因为子代也属于后代*/ /* ID &gt; 类 &gt; 标签名 */ .father p &#123; color:blueviolet; &#125; /* 相邻元素选择器 */ /* 选择在同一级别下元素中的紧跟在选中元素之后的第一个元素 */ h5 + p &#123; background-color:brown; &#125; /* 伪类选择器 */ /* 选择 HTML 元素的特定状态或位置，不仅是元素本身的属性， 通常用于给用户提供交互文档结构或其他条件下的元素应用样式 */ #element:hover &#123; background-color: aquamarine; &#125; /* 此外，伪类选择器还可以实现 选中第一个子元素 :first-child 选中第n个子元素 :nth-child() 链接状态 :active */ /* 伪元素选择器 */ /* 用于创建一个虚拟元素并且给以样式化 在选中元素之前插入虚拟内容 ::before 在选中元素之后插入虚拟内容 ::after */ &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;一、&lt;/h3&gt; &lt;h2&gt;元素选择器demo&lt;/h2&gt; &lt;!-- 元素选择器示例 --&gt; &lt;h3&gt;二、&lt;/h3&gt; &lt;h3 class=&quot;highlight&quot;&gt;类选择器demo&lt;/h3&gt; &lt;!-- 类选择器示例 --&gt; &lt;h3&gt;类选择器demo1&lt;/h3&gt; &lt;!-- 类选择器示例 --&gt; &lt;h3&gt;三、&lt;/h3&gt; &lt;h4 id=&quot;header&quot;&gt;ID选择器demo&lt;/h4&gt; &lt;!-- ID选择器示例 --&gt; &lt;p&gt;注：&lt;b&gt;类选择器&lt;/b&gt; 和&lt;b&gt;ID选择器&lt;/b&gt;最常用&lt;/p&gt; &lt;h3&gt;四、&lt;/h3&gt; &lt;div class=&quot;father&quot;&gt; &lt;!-- 子元素选择器 --&gt; &lt;p class=&quot;son&quot;&gt; 子元素选择器demo&lt;/p&gt; &lt;div&gt; &lt;!-- 后代选择器demo --&gt; &lt;p class=&quot;grandson&quot;&gt;后代选择器&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3&gt;五、&lt;/h3&gt; &lt;p&gt;普通p标签&lt;/p&gt; &lt;h5&gt;相邻兄弟选择器demo&lt;/h5&gt; &lt;p&gt;另一p标签&lt;/p&gt; &lt;p&gt;另另一p标签&lt;/p&gt; &lt;h3&gt;六、&lt;/h3&gt; &lt;h4 id=&quot;element&quot;&gt;伪类选择器demo&lt;/h4&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (三) CSS 常用属性 font 属性：调节字体的复合属性 line-height 属性：行高，用于调节行间距 行内块元素 水平方向上排列，但可以设置宽度、高度、内外边距等块级元素的属性 可以包含其他行内元素或块级元素 注：一行可以有多个行内块元素 width 属性、heigh 属性：设置块元素或行内块元素的宽、高（行内元素的宽、高由包含的内容决定，不支持强制设置这两个属性） display 属性：实现行内元素、块元素、行内块元素的相互转换 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;CSS 常用属性&lt;/title&gt; &lt;style&gt; .block &#123; background-color: aquamarine; width: 150px; height: 100px; &#125; .inline &#123; background-color: burlywood; &#125; .inline-block &#123; /* 只设置 width 或 height ，图片会按比例压缩；同时设置宽高，实现拉伸效果*/ width: 200px; height: 250px; &#125; .span-inline-block &#123; display:inline-block; background-color:brown; width: 500px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h2&gt;一、font &lt;/h2&gt; &lt;!-- 字体属性 --&gt; &lt;h4 style=&quot;font: bolder 30px &#x27;KaiTi&#x27; &quot;&gt; font 复合属性示例&lt;/h4&gt; &lt;h2&gt;二、line-height&lt;/h2&gt; &lt;!-- 行高 可以用于调节行间距 --&gt; &lt;p style=&quot;line-height: 30px;&quot;&gt;长文本咿呀咿呀哟咿呀咿呀哟咿呀咿呀哟咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀&lt;/p&gt; &lt;h2&gt;三、行内块元素&lt;/h2&gt; &lt;div class=&quot;block&quot;&gt;块级元素&lt;/div&gt; &lt;div class=&quot;block&quot;&gt;块级元素&lt;/div&gt; &lt;span class=&quot;inline&quot;&gt;行内元素&lt;/span&gt; &lt;span class=&quot;inline&quot;&gt;行内元素&lt;/span&gt; &lt;!-- img 标签 是典型的行内块元素--&gt; &lt;img src=&quot;./052903.jpg&quot; alt=&quot;&quot; class=&quot;inline-block&quot;&gt; &lt;img src=&quot;./052903.jpg&quot; alt=&quot;&quot; class=&quot;inline-block&quot;&gt; &lt;h2&gt;四、display&lt;/h2&gt; &lt;divd style=&quot;display: inline; background-color:chartreuse;&quot;&gt;转换成行内元素的 div 标签&lt;/divd&gt; &lt;span class=&quot;span-inline-block&quot;&gt;转换成行内块元素的 span 标签&lt;/span&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (四) CSS 盒子模型 CSS盒子模型：CSS 中常用于布局的基本概念，即文档中的每个元素都可以被看作是一个矩形的盒子，从里到外以此为，内容(Content)、内边距(Padding)、边框(Border)、外边距(Margin) **内容(Content)**：如文本、图片 **内边距(Padding)**：围绕在内容的内部，是内容与边框之间的空间，可以用 padding 属性设置。 **边框(Border)**：围绕在内边距的外部，是盒子的边界，可以用 border 属性设置 **外边距(Margin)**：围绕在边框的外部，是盒子与其他元素之间的空间，可以用 margin 属性设置 123456789101112131415161718192021222324252627282930313233343536&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;CSS 盒子模型&lt;/title&gt; &lt;style&gt; .demo &#123; background-color: aquamarine; display: inline-block; border: 2px black solid; padding: 20px; margin: 30px; &#125; .border-demo &#123; background-color: burlywood; width: 300px; height: 100px; /* 上右下左 顺时针 只有一个值则全用这个值，两个值同时用于相对的边框*/ border-style: solid; border-color: chartreuse; border-width: 20px 0 10px 5px; /* 可以通过上述方式实现对特定方向的边框设置样式，也可以使用下述方式 */ border-left: 0cap; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;demo&quot;&gt;demo&lt;/div&gt; &lt;div class=&quot;border-demo&quot;&gt;border-demo&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (五) CSS 浮动(1) 传统的5种网络布局方式： **标准流(普通、文档流)**：网页按照元素的书写顺序依次排列，块级元素和行内元素按照默认规定的方式来排列——块级元素占一行，行内元素一行可以有多个 浮动 定位 Flexbox、Grid：自适应布局，使页面在不同的设备更容易适应 注：本质都是摆放盒子，在实际开发中通常混合使用 &nbsp; (2) 浮动： 简介： 浮动 使得页布局更加灵活多变，最典型的应用是让多个块级元素在同一行排列显示&nbsp; 浮动 与 行内块元素 的区别： 浮动的元素紧贴在一起，没有缝隙，**(注：浮动是相对于父级元素浮动，只会在父元素内部浮动)**，若父级元素的宽度装不下这些浮动的盒子，多出去的盒子会另起一行；而行内块元素彼此间有缝隙，不如浮动方便。&nbsp; 语法：1234选择器 &#123; /* 左浮动/右浮动/不浮动 */ float: left/right/none; &#125; &nbsp; 3大特性： 脱标：脱离标准流 一行显示，顶部对齐：若多个盒子同时设置了浮动，则按照属性值一行内显示，并且顶端对齐排列 具备行内块元素的特性&nbsp; demo 及 父类不设置高度造成的盒子高度坍塌问题的两个解决方法12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;CSS 浮动&lt;/title&gt; &lt;style&gt; .father &#123; background-color: aquamarine; border: 3px solid black; /* height: 300px; */ /* 若子元素浮动，父元素不设置高度，会导致盒子高度坍塌 */ /* 解决方法1 */ /* overflow: hidden; */ &#125; /* 解决方法2 伪元素清除法*/ .father::after &#123; content: &quot;&quot;; display: table; clear: both; &#125; .left-son &#123; background-color: burlywood; /* w100+h100+Tab 快捷生产 */ width: 100px; height: 100px; float:left; &#125; .right-son &#123; background-color: chartreuse; width: 100px; height: 100px; float:right; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;father&quot;&gt; &lt;div class=&quot;left-son&quot;&gt;左浮动&lt;/div&gt; &lt;div class=&quot;right-son&quot;&gt;右浮动&lt;/div&gt; &lt;/div&gt; &lt;p&gt;文本&lt;/p&gt; &lt;br&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (六) CSS 定位 浮动 灵活但不容易控制，定位 精准但不够灵活 3种定位方式 相对定位：相对于元素在文件流中的正常位置定位 绝对定位：相对于其最近的已定位的祖先元素进行定位，不占据文档流的位置 固定定位：相对于浏览器的串口进行定位，不占据文档流，固定在屏幕上某个位置，不随滚动而移动 通常相对定位用于微调元素的位置，而绝对定位和相对定位用于创建更复杂的布局 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;CSS 定位&lt;/title&gt; &lt;style&gt; .box1 &#123; background-color: aquamarine; height: 300px; &#125; .box-normal &#123; width: 100px; height: 100px; background-color:chartreuse; &#125; /* 相对定位 */ .box-relative &#123; width: 100px; height: 100px; background-color: burlywood; position: relative; /* 相对于左边偏移 */ left: 120px; top: 10px; &#125; .box2 &#123; background-color:blanchedalmond; height: 300px; &#125; /* 绝对定位 */ .box-absolute &#123; width: 100px; height: 100px; background-color:brown; position: absolute; left: 200px; &#125; .box-fixed &#123; width: 100px; height: 100px; background-color: cadetblue; position: fixed; right: 100px; top:300px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;一、相对定位&lt;/h3&gt; &lt;div class=&quot;box1&quot;&gt; &lt;div class=&quot;box-normal&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;box-relative&quot;&gt;2&lt;/div&gt; &lt;div class=&quot;box-normal&quot;&gt;3&lt;/div&gt; &lt;/div&gt; &lt;h3&gt;二、绝对定位&lt;/h3&gt; &lt;div class=&quot;box2&quot;&gt; &lt;div class=&quot;box-normal&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;box-absolute&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;box-normal&quot;&gt;3&lt;/div&gt; &lt;/div&gt; &lt;h3&gt;二、固定&lt;/h3&gt; &lt;div class=&quot;box-fixed&quot;&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; 三、Javascript(一) Javascript 引入(1) 简介 Javascript (JS)：轻量级、解释型、面向对象的脚本语言，主要用于实现网页动态效果，增加用户与网页的交互性。作为一种客户端脚本语言，JS 可直接嵌入HTML，并在浏览器中执行。 作用：客户端脚本：用于在浏览器中执行，实现动态效果和用户交互网页开发：与 HTML 与 CS 协同工作，使得网页具有更强的动态性和交互性后端开发：使用 Node.js，JS也可以在服务器端运行，实现服务器端应用的开发 (2) 导入方式 两种常用的导入方式 内联式：在 HTML 文件中直接嵌入 JS 代码，具体是将 script 标签放在 head 标签或 body 标签内 外联式：将 JS 代码保存在外部文件中，通过 script 标签的 src 属性引入 &nbsp; (二) Javascript 基本语法(1) JS 变量与数据类型12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Javascript 变量与数据类型&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- 变量声明 --&gt; &lt;!-- variable 声明的变量具有函数作用域， let 声明的变量具有块级作用域，const 声明常量--&gt; &lt;!-- let 更安全、灵活 --&gt; &lt;script&gt; var x; let y = 1; const PI = 3.14; console.log(x,y,PI); let name = &#x27;aj&#x27;; let empty_value = null; console.log(name); console.log(empty_value); console.log(&#x27;undefined 表示一个变量已被声明但未被赋值，或一个对象属性不存在，函数的返回值缺省也返回undefined&#x27;); console.log(&#x27;null 表示一个变量被明确赋值为空&#x27;); console.log(&#x27;undefined 表示变量可能在将来被赋值，或还未被计算出来；null 则明确表示没有对象值&#x27;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; (2) JS 控制语句1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Javascript 控制语句&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;条件语句&lt;/h3&gt; &lt;script&gt; console.log(&#x27;if-else 语句&#x27;); let x = 0; let y = 1; if (y &gt; x) &#123; console.log(&#x27;&gt;0&#x27;); &#125; else if (y == x) &#123; console.log(&#x27;=0&#x27;); &#125; else &#123; console.log(&#x27;&lt;0&#x27;); &#125; &lt;/script&gt; &lt;h3&gt;循环语句&lt;/h3&gt; &lt;script&gt; console.log(&#x27;&#x27;); console.log(&#x27;for 循环&#x27;); for (let i = 0; i &lt; 10; i ++ ) &#123; console.log(i); &#125; console.log(&#x27;&#x27;); console.log(&#x27;while 循环&#x27;); let j = 10; while (j &gt; 0) &#123; console.log(j -- ); &#125; console.log(&#x27;&#x27;); console.log(&#x27;循环关键字&#x27;); for (var cnt = 1; ; cnt ++ ) &#123; if ( cnt &gt; 9) &#123; break; &#125; if (cnt % 2 == 0) &#123; continue; &#125; console.log(cnt); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; (3) JS 函数一段可重复执行的代码块，接受输入（参数）、执行指定逻辑，返回输出 JS 中 用 function 声明函数，参数表可为空，无返回值可省略 return。 作用域 局部 &#x2F; 全局同 C++ ，不过 JS 不用指定数据类型和返回值类型 1234function function_name(参数表) &#123; // 参数表可为空，表示不传参 // 函数体 函数执行的代码 return 返回值;&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Javascript 函数&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; function Hello() &#123; console.log(&#x27;Hello&#x27;); &#125; Hello(); function Hello_with_return() &#123; return &#x27;Hello-return&#x27;; &#125; let t = Hello_with_return(); console.log(t); console.log(Hello_with_return()); function Hello_with_parameter(name) &#123; console.log(&#x27;Hello &#x27; + name); &#125; Hello_with_parameter(&#x27;aj&#x27;); // 作用域 let globle_var = &#x27;全局变量&#x27;; function local_var_function() &#123; let local_var = &#x27;局部变量&#x27;; console.log(&#x27;函数内打印&#x27; + globle_var); console.log(&#x27;函数内打印&#x27; + local_var); &#125; local_var_function(); console.log(&#x27;全局打印&#x27; + globle_var); console.log(&#x27;全局打印&#x27; + local_var); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (三) Javascript 事件 事件 是文档或浏览器窗口发生的特定瞬间，如用户的点击，键盘的按下，页面的加载等。 常见事件： 事件 描述 onClick 点击事件 onMouseOver 鼠标经过 onMouseut 点击事件 onChange 文本内容改变 onSelect 文本框选中 onFocus 光标聚集(聚焦) onBlur 光标聚集(失焦) 事件绑定： HTML 属性 DOM 属性 addEventListener 方法 1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Javascript 事件&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;button onclick=&quot;click_event()&quot;&gt;点击事件&lt;/button&gt; &lt;input type=&quot;text&quot; onfocus=&quot;focus_event()&quot; onblur=&quot;blur_event()&quot;&gt; &lt;script&gt; // 点击事件 function click_event() &#123; alert(&#x27;触发点击事件&#x27;); &#125; // 聚焦事件 function focus_event() &#123; console.log(&#x27;获取焦点&#x27;); &#125; // 失焦事件 function blur_event() &#123; console.log(&#x27;失去焦点&#x27;); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; (四) Javascript DOM(1) 简介 DOM（Document Object Model） 是一个跨平台和语言独立的接口。当网页被加载时，浏览器浏览器会创建页面的 文档对象模型，即 DOM。它将HTML或XML文档表示为树形结构，每个节点都是文档中的对象。对象让函数与变量间建立联系，对象中的属性就是变量，方法就是函数，调用时需要指定变量名。 DOM 为这个 文档树提供一个接口，使开发者可以通过 DOM 接口 使用 JS 操作树形结构，与 HTML 文档交互，动态地访问和操作文档中的内容、结构和样式。 在 Web 开发中，DOM 通常与 Javascript 一起使用 (2) 常用方法 DOM 对象常用方法： 方法 描述 appendChild() 把新的子节点添加到指定节点 removeChild() 删除子节点 replaceChild() 替换子节点 insertBefore() 在指定的子节点前面插入新的子节点 createAttribute() 创建属性节点 createElement() 创建元素节点 createTextNode() 创建文本节点 getAttribute() 返回指定的属性值 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Javascript DOM&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box1&quot;&gt;类选择器标签&lt;/div&gt; &lt;div id=&quot;box2&quot;&gt;ID选择器标签&lt;/div&gt; &lt;div&gt;普通标签&lt;/div&gt; &lt;button&gt;点击按钮&lt;/button&gt; &lt;button&gt;点击按钮1&lt;/button&gt; &lt;button&gt;点击按钮2&lt;/button&gt; &lt;script&gt; // 通过 DOM API提供的方法，在 JS 中获取元素节点 var element_class = document.getElementsByClassName(&#x27;box1&#x27;)[0]; console.log(element_class); var element_id = document.getElementById(&#x27;box2&#x27;) console.log(element_id); var element_tag = document.getElementsByTagName(&#x27;div&#x27;)[2]; console.log(element_tag); // innerText 会忽略 HTML 标记，把这些内容当作纯文本处理 element_id.innerText = &#x27;&lt;a href=&quot;#&quot;&gt;跳转链接&lt;/a&gt;&#x27;; // innerHTML 会 解析 HTML 标记，并更新元素的内容 element_class.innerHTML = &#x27;&lt;a href=&quot;#&quot;&gt;跳转链接&lt;/a&gt;&#x27;; element_tag.style.color = &#x27;red&#x27;; element_tag.style.fontSize = &#x27;20px&#x27;; // 通过 DOM 属性 绑定事件 var button_element = document.getElementsByTagName(&#x27;button&#x27;)[0]; console.log(button_element); button_element.onclick = function() &#123; // 匿名函数 不需要在其他地方调用 alert(&#x27;Dom 属性 触发按钮&#x27;) &#125; // 对象的 addEventListener 属性 (触发方式, 触发后执行的程序) var button_element1 = document.getElementsByTagName(&#x27;button&#x27;)[1]; console.log(button_element1); button_element1.addEventListener(&#x27;click&#x27;,function() &#123; alert(&#x27;addEventListener 属性 触发按钮1&#x27;); &#125;) var button_element2 = document.getElementsByTagName(&#x27;button&#x27;)[2]; console.log(button_element2); button_element2.addEventListener(&#x27;click&#x27;,click_enent); function click_enent() &#123; alert(&#x27;addEventListener 属性 触发按钮2&#x27;); &#125; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; (3) 练习 .html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;DOM 节点操作&lt;/title&gt; &lt;style&gt; table &#123; width: 100%; /* 相对于浏览器 */ border-collapse: collapse; /* 合并边框 */ margin-top: 20px; /* 外边距 —— 间隔 “新增数据” 按钮 */ &#125; th, td &#123; border: 1px solid #ddd; /* 边框 */ text-align: center; /* 居中 */ padding: 5px; /* 内边距 */ &#125; th &#123;/* 表头 */ background-color: #ddd; &#125; button &#123; margin-left: 5px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h3 style=&quot;text-align: center;&quot;&gt;表格的增删改查&lt;/h3&gt; &lt;button onclick=&quot;addRow()&quot;&gt;新增数据&lt;/button&gt; &lt;!-- 3列 可以有无数行 --&gt; &lt;table id=&quot;table&quot;&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;联系方式&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;阿奖&lt;/td&gt; &lt;td&gt;12345678910&lt;/td&gt; &lt;td&gt; &lt;!-- this 关键字 --&gt; &lt;button onclick=&quot;editRow(this)&quot;&gt;编辑&lt;/button&gt;&lt;button onclick=&quot;deleteRow(this)&quot;&gt;删除&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;script src=&quot;./table.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; .js 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364// 新增数据函数function addRow() &#123; var table = document.getElementById(&#x27;table&#x27;); // console.log(table); // 获取表格行数 以确定插入位置 var length = table.rows.length; // console.log(length); // 插入行节点 var newRow = table.insertRow(length); // insetRow() 返回索引为 length 的节点 console.log(newRow); // 插入列节点对象 var nameCol = newRow.insertCell(0); var nubmerCol = newRow.insertCell(1); var actionCol = newRow.insertCell(2); // console.log(newRow); // 修改节点文本内容 nameCol.innerHTML = &#x27;未命名&#x27;; nubmerCol.innerHTML = &#x27;xxxxxxxxxx&#x27;; actionCol.innerHTML = &#x27;&lt;button onclick=&quot;editRow(this)&quot;&gt;编辑&lt;/button&gt;&lt;button onclick=&quot;deleteRow(this)&quot;&gt;删除&lt;/button&gt;&#x27;;&#125; // 删除数据函数function deleteRow(button) &#123; // 需要传入待删除的节点作为参数t // console.log(button); // 获取父节点的父节点 tr -&gt; td -&gt; button var row = button.parentNode.parentNode; // console.log(row); if (row.parentNode.rows.length &gt; 2) &#123; // 保持表格非空 // 通过父节点删除子节点 无法自己删除自己 row.parentNode.removeChild(row); &#125; &#125;// 编辑数据function editRow(button) &#123; // console.log(button); // 获取父节点的父节点 tr -&gt; td -&gt; button var row = button.parentNode.parentNode; var name = row.cells[0]; var number = row.cells[1]; var action = row.cells[2]; var inputName = prompt(&quot;请输入姓名：&quot;); // 弹窗 输入 var inputNumber = prompt(&quot;请输入手机号：&quot;); if (inputName) &#123; // 若未输入 则不更改 name.innerHTML = inputName; &#125; if (inputNumber) &#123; number.innerHTML = inputNumber; &#125; &#125; &nbsp; 四、移动端适配(1) 响应式布局的实现方法 通过 rem、vw&#x2F;vh 单位，实现在在不同的设备上显示相同的比例而实现适配 响应式布局，通过媒体查询 @media 实现一套 HTML 配合多套 CSS 实现适配 &nbsp; (2) viewportVS Code 中自动生成的 head 标签中的 viewport 属性 1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&gt; width&#x3D;device-width：将视口的宽度设置为设备的宽度。这确保网页内容不会被缩放，而是按照设备的实际宽度进行布局； initial-scale&#x3D;1.0：设置初始的缩放级别为1.0。这也有助于确保网页在加载时以原始大小显示，而不是被缩小或放大； minimum-scale&#x3D;1.0：最小缩放比例为1； maximum-scale&#x3D;1.0：最大缩放比例为1； user-scalable&#x3D;no：不允许用户缩放。 &nbsp; (3) rem 在响应式网页与移动端布局时，使用 rem 而不是 px rem 是一个倍数单位，基于 html 标签中的 font-size 属性值的倍数;px 即像素，是绝对长度单位 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;移动端 rem 适配原理&lt;/title&gt; &lt;style&gt; /* html &#123; font-size: 30px; &#125; */ .box-px &#123; width: 300px; height: 100px; background-color: aquamarine; margin-bottom: 50px; &#125; .box-rem &#123; width: 5rem; height: 3rem; background-color: burlywood; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box-px&quot;&gt;&lt;/div&gt; &lt;div class=&quot;box-rem&quot;&gt;&lt;/div&gt; &lt;script&gt; // 根据设备宽度计算 html 标签中的font-size属性值 为 屏幕宽度/10 function resetHtmlFontSize() &#123; // 获取 html 根节点 document.documentElement.style.fontSize = screen.availWidth / 10 + &#x27;px&#x27;; &#125; resetHtmlFontSize(); // 绑定事件：改变屏幕尺寸的时候，再触发一遍 resetHtmlFontSize() window.onresize = resetHtmlFontSize(); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; 五、Flex 弹性盒子(1) 简介 Felx （Flexible Box） 布局，也称为 Flexbox，是一种用于在容器中布局的模型，使容器的子元素以弹性的形式排列，配合 rem 处理尺寸来适应不同屏幕尺寸和设备Flex 布局是一种用于在容器内分配和对齐项的一维布局模型。它提供了一种更加高效的方式来布局、对齐和分配容器内元素的空间，即使它们的大小是未知或者是动态的。 主要思想： 是使容器能够改变其子项的宽度&#x2F;高度（伸缩性）以适应可用空间，或者保持它们的宽高比，同时也能按照指定的顺序来排列这些子项。 (2) Flex 盒子模型 主要组成部分： Flex容器（Flex Container）：通过设置display属性为flex或inline-flex，可以将一个元素变为Flex容器。它的直接子元素会自动成为Flex项目（Flex Items）。Flex项目（Flex Items）：Flex容器的直接子元素自动成为Flex项目。这些项目可以使用Flexbox的各种属性来调整和布局。主轴（Main Axis）：Flex容器的主轴是Flex项目的主要布局方向。默认情况下，主轴是水平的，从左到右。交叉轴（Cross Axis）：垂直于主轴的轴称为交叉轴。如果主轴是水平的，那么交叉轴就是垂直的。起始线和终止线：Flex布局中有起始线和终止线的概念，分别对应主轴的开始和结束。默认情况下，主轴从左到右，起始线在左边，终止线在右边。 关键属性： display: 定义一个元素是Flex容器。 flex-direction: 定义Flex项目在容器中的排列方向。该属性用于决定主轴的方向，即项目的排列方向。其属性值及其作用分别为： row（default）：主轴为水平方向，起点在左端（项目从左往右排列）。 row-reverse：主轴为水平方向，起点在右端（项目从右往左排列）。 column：主轴为垂直方向，起点在上沿（项目从上往下排列）。 column-reverse：主轴为垂直方向，起点在下沿（项目从下往上排列）。 flex-wrap: 定义Flex容器是单行还是多行，以及如何处理子项的换行。默认情况下，项目都排列在同一条轴线上。如果一条轴线排不下，可以使用以下三种换行方式： nowrap（default）：不换行（列） wrap：主轴为横向时：从上到下换行；主轴为纵向时：从左到右换列 wrap-reverse：主轴为横向时：从下到上换行；主轴为纵向时：从右到左换列 flex-flow：复合属性，display 属性和 flex-direction 属性的简写形式。 justify-content: 定义了Flex项目在主轴上的对齐方式。 flex-start（default）：与主轴的起点对齐。 flex-end：与主轴的终点对齐。 center：与主轴的中点对齐。 space-between：两端对齐主轴的起点与终点，项目之间的间隔都相等。 space-around：每个项目两侧的间隔相等。项目之间的间隔比项目与边框的间隔大一倍。 align-items: 定义了Flex项目在交叉轴上如何对齐。 flex-start：项目会从交叉轴的起点开始对齐。 flex-end：项目会从交叉轴的终点开始对齐。 center：项目会居中对齐于交叉轴。 baseline：项目的第一行文字的基线对齐。 stretch（default）：如果项目未设置高度或设为auto，项目将占满整个容器的高度。 align-content: 定义了多行Flex项目在交叉轴上的对齐方式，如果项目只有一行，则该属性不起作用 flex-start：与交叉轴的起点对齐。 flex-end：与交叉轴的终点对齐。 center：与交叉轴的中点对齐。 space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。 space-around：每根轴线两侧的间隔都相等，轴线之间的间隔比轴线与边框的间隔大一倍。 stretch（default）：主轴线占满整个交叉轴。 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Flex 弹性布局&lt;/title&gt; &lt;style&gt; html &#123; font-size: 10px; &#125; .container &#123; /* 定义container为Flex容器 */ display: flex; height: 40rem; background-color: aquamarine; /* flex-direction: column-reverse; */ flex-wrap: wrap; /* justify-content: space-evenly; */ /* align-items: center; */ align-content: center; &#125; .item &#123; width: 20rem; font-size: 5rem; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;!-- .item*6&#123;$&#125; 快捷生成代序号的多个div标签 --&gt; &lt;div class=&quot;item&quot; style=&quot;background-color: aliceblue;&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;item&quot; style=&quot;background-color:antiquewhite&quot;&gt;2&lt;/div&gt; &lt;div class=&quot;item&quot; style=&quot;background-color:aqua&quot;&gt;3&lt;/div&gt; &lt;div class=&quot;item&quot; style=&quot;background-color:aquamarine&quot;&gt;4&lt;/div&gt; &lt;div class=&quot;item&quot; style=&quot;background-color:red&quot;&gt;5&lt;/div&gt; &lt;div class=&quot;item&quot; style=&quot;background-color:deepskyblue&quot;&gt;6&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; &nbsp; 六、进阶 Vue.js：灵活、易上手的 JS 开发框架微信小程序：制作一个 APP使用Vue开发微信小程序 注：无先后顺序 附： Vue.js 微信小程序 uni.app 参考 b站罗大富&nbsp;","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>前端负责用户在浏览器中看到和与之交互的内容，网页是在浏览器中呈现内容的文档或页面。通常网页由以下几部分组成：</p>\n<ul>\n<li><strong>HTML</strong>：定义了页面的结构和内容，包括文本、图像、链接等</li>\n<li><strong>CSS</strong>：定义页面的样式和布局</li>\n<li><strong>JavaScript(JS)</strong> ：添加交互性和动态功能</li>\n</ul>\n<p>&nbsp;</p>\n<h3 id=\"安装-VSCode-开发环境\"><a href=\"#安装-VSCode-开发环境\" class=\"headerlink\" title=\"安装 VSCode 开发环境\"></a>安装 VSCode 开发环境</h3><span id=\"more\"></span>\n\n<hr>\n<p>&nbsp;</p>\n<h1 id=\"一、-HTML\"><a href=\"#一、-HTML\" class=\"headerlink\" title=\"一、 HTML\"></a>一、 HTML</h1><h2 id=\"一-HTML-简介\"><a href=\"#一-HTML-简介\" class=\"headerlink\" title=\"(一) HTML 简介\"></a>(一) HTML 简介</h2><blockquote>\n<p><strong>HTML</strong>：Hypertext Markup Language 超文本标记语言</p>\n</blockquote>\n<h4 id=\"1-标签\"><a href=\"#1-标签\" class=\"headerlink\" title=\"(1) 标签\"></a>(1) 标签</h4><p>通过 <strong>标签</strong> 来定义文本、图片、链接等等</p>\n<ul>\n<li>双标签——用于有内容的元素<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是一个段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&#x27;#&#x27;</span>&gt;</span>这是一个超链接。<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>单标签——用于没有内容的元素<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>&nbsp;</p>\n<h4 id=\"2-HTML文件结构\"><a href=\"#2-HTML文件结构\" class=\"headerlink\" title=\"(2) HTML文件结构\"></a>(2) HTML文件结构</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 这里放置文件的元信息 --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span> <span class=\"comment\">&lt;!-- 声明HTML文件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- HTML标签对 HTML的起始点 最外层容器 包含整个文档的结构 --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span> <span class=\"comment\">&lt;!-- head标签对 表示文档的头部 包含文件的原信息 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>文档标题<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span> <span class=\"comment\">&lt;!-- 文档标题 --&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 连接外部样式表和脚本文件 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;styles.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"> src=<span class=\"string\">&quot;script.js&quot;</span> </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> <span class=\"comment\">&lt;!-- body标签对 内部包含实际显示在浏览器页面中的内容 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题。<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是一个段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://aj3230.github.io&quot;</span>&gt;</span>这是一个链接<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>&nbsp;</p>\n<h2 id=\"二-HTML-常用文本标签\"><a href=\"#二-HTML-常用文本标签\" class=\"headerlink\" title=\"(二) HTML 常用文本标签\"></a>(二) HTML 常用文本标签</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>常见文本标签<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>一、标题标签<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>二级标题标签<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>六级标题标签<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--段落标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>二、段落标签<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是一个段落标签<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--更改文本样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>三、更改文本样式<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>粗体b<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span> 粗体strong<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>斜体i<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>斜粗体b+i<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span>下划线u<span class=\"tag\">&lt;/<span class=\"name\">u</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span>删除线s<span class=\"tag\">&lt;/<span class=\"name\">s</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--列表--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>四、列表<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>(1)无序列表 ul<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>无序列表元素1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>无序列表元素2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>(2)有序列表 ol<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>有序列表元素1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>有序列表元素2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--表格标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>五、表格标签 table<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span> <span class=\"comment\">&lt;!--table的属性border边框--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span> <span class=\"comment\">&lt;!--table row--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>列标题1<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span> <span class=\"comment\">&lt;!--table header--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>列标题2<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>列标题3<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>元素11<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"comment\">&lt;!--table data--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>元素12<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>元素13<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>元素21<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>元素22<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>元素23<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/060901.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"三-HTML-属性\"><a href=\"#三-HTML-属性\" class=\"headerlink\" title=\"(三) HTML 属性\"></a>(三) HTML 属性</h2><blockquote>\n<p>属性：用于定义元素的行为和外观，以及与其他元素的关系</p>\n</blockquote>\n<p><strong>基本语法：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">开始标签</span> <span class=\"attr\">属性名</span>=<span class=\"string\">&quot;属性值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong></p>\n<blockquote>\n<ul>\n<li>每个元素可以同时具有不同的属性</li>\n<li>属性名不区分大小写，属性值区分大小写<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;a.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">SRC</span>=<span class=\"string\">&quot;a.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- src表示图片标签的路径 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;A.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span> <span class=\"comment\">&lt;!--前两者相同 与第三个不同--&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</blockquote>\n<p><strong>大多数 HTML 元素共有的属性：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性名</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>class</strong></td>\n<td align=\"center\">为 HTML 元素定义一个或多个类(类从样式文件中引入)</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>id</strong></td>\n<td align=\"center\">定义元素唯一的ID</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>style</strong></td>\n<td align=\"center\">规定元素的行内样式</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>a 标签的属性：</strong></p>\n<ul>\n<li><em><strong>href</strong></em> ：超链接</li>\n<li><em><strong>target</strong></em> ：定义链接的打开方式<ul>\n<li><strong>_blank</strong> ：在新窗口或标签页中打开链接。</li>\n<li><strong>_self</strong> ：在同一窗口或标签页中打开链接(默认值)。</li>\n<li><strong>_parent</strong> ：在父框架集中打开链接。</li>\n<li>framename ：在指定的框架中打开链接。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><em><strong>src 标签的属性</strong></em></p>\n<ul>\n<li><strong>src</strong> ：图片的路径或URL。</li>\n<li><strong>alt</strong> ：代替文本，图片加载失败时显示的文字。 </li>\n<li><strong>width height</strong> ：宽、高。</li>\n</ul>\n</blockquote>\n<p><img src=\"/../images/060902.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"四-HTML-区块\"><a href=\"#四-HTML-区块\" class=\"headerlink\" title=\"(四) HTML 区块\"></a>(四) HTML 区块</h2><blockquote>\n<p>在HTML中，元素根据它们<strong>在页面上的布局和表现</strong>，分为<strong>块级元素</strong>和<strong>内联元素</strong>(也称行内元素)</p>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><strong>块级元素（Block-level Elements）</strong><br>组织和布局页面的主要结构和内容，如段落、标题、列表、表格等。用于创建页面的主要部分，将内容分割成逻辑块。</p>\n<ul>\n<li>在浏览器中以新行开始，占据整行的宽度，在页面上呈现为独立的内容块</li>\n<li>可以包含其他块级元素和内联元素</li>\n<li>常见块级元素<ul>\n<li><strong>&lt;div&gt;</strong></li>\n<li>&lt;p&gt;</li>\n<li>&lt;h1&gt;，&lt;h2&gt;，&lt;h3&gt;，&lt;h4&gt;，&lt;h5&gt;，&lt;h6&gt;</li>\n<li>&lt;ul&gt;，&lt;ol&gt;，&lt;li&gt;</li>\n<li>&lt;form&gt;</li>\n<li>&lt;header&gt;，&lt;footer&gt;，&lt;section&gt;，&lt;article&gt;</li>\n<li>&lt;table&gt;，&lt;tr&gt;，&lt;td&gt;，&lt;th&gt;</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>内联元素（Inline Elements）</strong><br>通常用于添加文本样式,或成为文本中的一部分应用样式.可在文本中插入小的元素, 如超链接</p>\n<ul>\n<li>通常在同一行内出现,不会独占一行</li>\n<li>只占据内容所需的宽度，而非整行的宽度。</li>\n<li>不能包括块级元素，但可以包含其他行内元素</li>\n<li>常见内联元素<ul>\n<li><strong>&lt;span&gt;</strong></li>\n<li>&lt;a&gt;</li>\n<li>&lt;strong&gt;，&lt;em&gt;，&lt;cite&gt;，&lt;q&gt;</li>\n<li>&lt;img&gt;</li>\n<li>&lt;input&gt;，&lt;textarea&gt;，&lt;button&gt;</li>\n<li>&lt;label&gt;</li>\n<li>&lt;select&gt;，&lt;option&gt;</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><strong>div 标签：</strong><br> 块级标签，常用于创建一个包含其他HTML元素的容器块，以组织页面的结构和布局，一般无语意。</p>\n</blockquote>\n<blockquote>\n<p><strong>span 标签：</strong><br> 内联标签，用于内联样式化文本</p>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><strong>div 标签</strong> 和 <strong>span 标签</strong> 常与 CSS 和 JS 一起使用，以实现更复杂的页面布局和样式化。</p>\n</blockquote>\n<p><img src=\"/../images/060903.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"五-HTML-表单\"><a href=\"#五-HTML-表单\" class=\"headerlink\" title=\"(五) HTML 表单\"></a>(五) HTML 表单</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>HTML 表单<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- form 标签 表单的容器 用于创建一个向服务器提交数据的表单 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>  <span class=\"comment\">&lt;!--action属性指定用户提交表单时 表单数据被发送到的位置。</span></span><br><span class=\"line\"><span class=\"comment\">        值是一个URL，通常指向服务器上一个处理表单数据的脚本文件--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- input 标签 表单内的元素 用于搜集不同类型的用户输入数据--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>一、文本框（text）与 密码框（password）<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>span 标签<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> 的效果：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>用户名：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> <span class=\"comment\">&lt;!-- span 标签 用于内联样式化文本 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入用户名&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- placeholder 属性 提示用户输入--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>用户名：  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;请输入用户名&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- 规定input字段的值--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>label 标签<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> 的效果：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- label 标签 与span作用类似 仅限于与input对应使用 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span>用户名：<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> <span class=\"comment\">&lt;!-- label 标签的for属性 可以将label标签通过id绑定到input元素--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入用户名&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- placeholder 属性 提示用户输入--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>密码：  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入密码&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- 规格input字段的值--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>二、单选按钮（radio）<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>性别：<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;gender&quot;</span>&gt;</span> 男 </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;gender&quot;</span>&gt;</span> 女</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;gender&quot;</span>&gt;</span> 其他 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>三、多选按钮（checkbox）<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;checkbox&quot;</span>&gt;</span>爱好：<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobby&quot;</span>&gt;</span> 影视</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobby&quot;</span>&gt;</span> 音乐</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobby&quot;</span>&gt;</span> 跑步</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>四、提交按钮（submit）<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/061001.png\"></p>\n<p>&nbsp;</p>\n<h1 id=\"二、CSS\"><a href=\"#二、CSS\" class=\"headerlink\" title=\"二、CSS\"></a>二、CSS</h1><h2 id=\"一-CSS-引入\"><a href=\"#一-CSS-引入\" class=\"headerlink\" title=\"(一) CSS 引入\"></a>(一) CSS 引入</h2><blockquote>\n<p><strong>CSS</strong>：Cascading Style Sheets 层叠样式表<br>用于定义网页的外观和样式，通过CSS，可以指定各个元素的颜色、字体、大小、间距、边框、背景等样式，从而实现更精确的页面设计。<br>通常用于与 HTML 一起构建 web 页面，HTML 负责定义页面的结构和内容，CSS 负责控制页面的外观和样式。</p>\n</blockquote>\n<p>&nbsp;</p>\n<h3 id=\"1-基本语法\"><a href=\"#1-基本语法\" class=\"headerlink\" title=\"(1) 基本语法\"></a>(1) 基本语法</h3><p>CSS 通常由<strong>选择器</strong>、<strong>属性</strong>和<strong>属性值</strong>组成，多个规则可以组合在一起，以便同时应用多个样式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选择器&#123;</span><br><span class=\"line\">    属性<span class=\"number\">1</span>: 属性值<span class=\"number\">1</span>;</span><br><span class=\"line\">    属性<span class=\"number\">2</span>: 属性值<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><ol>\n<li>选择器的声明中可以包含多个声明。</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>声明中的所有属性和值均以键值对的形式出现。</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>声明的每一行属性需要以英文分号 “<strong>;</strong>“ 结尾</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>e.g.</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 这是一个 p 标签选择器 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\"> <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>&nbsp;</p>\n<h3 id=\"2-导入方式\"><a href=\"#2-导入方式\" class=\"headerlink\" title=\"(2)导入方式\"></a>(2)导入方式</h3><p>将 CSS 导入 HTML，以将样式应用到 HTML 中</p>\n<blockquote>\n<p>三种常见的导入方式</p>\n<ul>\n<li><strong>内联样式（Inline Styles）</strong>：直接在HTML元素中使用 style 属性定义，适用于对单个元素应用特定的样式，但不利于样式管理和维护。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red; font-size: 16px;&quot;</span>&gt;</span>这是一个段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><strong>内部样式表（Internal Style Sheet）</strong>：在HTML文档的 &lt;head&gt; 部分使用 &lt;style&gt; 标签定义的。这种方式适用于单个页面的样式定义，但样式不能在多个页面之间共享。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><strong>外部样式表（External Style Sheet）</strong>：将CSS代码保存在一个单独的CSS文件中，并通过HTML文档的 &lt;head&gt; 部分使用 &lt;link&gt; 标签引入。可以使得样式在多个页面之间共享，并且易于管理和更新。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;styles.css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>优先级：<strong>内联样式</strong> &gt; <strong>内部样式表</strong> &gt; <strong>外部样式表</strong><br>优先级高的导入方式能覆盖优先级较低的导入方式</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS 导入方式<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./CSS/style.css&quot;</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 内部样式表 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 内联样式 &gt; 内部样式表 &gt; 外部样式表 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">26px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 无法覆盖 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h1</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 成功覆盖 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是一个应用了 内部样式表 的文本<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red;&quot;</span>&gt;</span>这是一个应用了 内联样式 的 一级标签 <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>这是一个应用了 外部样式表 的 三级标签 <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/061101.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"二-CSS-选择器\"><a href=\"#二-CSS-选择器\" class=\"headerlink\" title=\"(二) CSS 选择器\"></a>(二) CSS 选择器</h2><blockquote>\n<p>CSS 的关键部分，用于选择要应用样式的 HTML 元素，针对特定元素或一组元素定义样式<br>常用的包括：</p>\n<ul>\n<li><strong>元素选择器</strong>：最基本的选择器，它选择所有匹配指定元素类型的HTML元素。<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>类选择器</strong>：用于选择具有特定类名的元素，可以跨多个元素类型复用样式 <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.navbar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>ID 选择器</strong>：用于选择具有特定ID的元素。    <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>通用选择器</strong>：<strong>*</strong> 选中文档中的所有元素 <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>子选择器</strong>：用于选择直接位于另一个元素内的子元素。 <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>后代选择器（后代选择器）</strong>：用于选择位于另一个元素内的元素，无论它们之间的嵌套层次有多深 <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>并集选择器（兄弟选择器）</strong></li>\n<li><strong>伪类选择器</strong></li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS 选择器<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 元素选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h2</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;   </span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 类选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.highlight</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: burlywood;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* ID选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#header</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: larger;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 通用选择器  */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;KaiTi&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 子元素选择器 不能应用到子代的后代*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.father</span> &gt; <span class=\"selector-class\">.son</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 后代选择器 (包含选择器) 可以应用到子代 因为子代也属于后代*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* ID &gt; 类 &gt; 标签名 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.father</span> <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>:blueviolet;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 相邻元素选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 选择在同一级别下元素中的紧跟在选中元素之后的第一个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h5</span> + <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:brown;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 伪类选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 选择 HTML 元素的特定状态或位置，不仅是元素本身的属性，</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        通常用于给用户提供交互文档结构或其他条件下的元素应用样式 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#element</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 此外，伪类选择器还可以实现</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        选中第一个子元素 :first-child</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        选中第n个子元素  :nth-child()</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        链接状态         :active</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">         */</span></span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 伪元素选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 用于创建一个虚拟元素并且给以样式化</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        在选中元素之前插入虚拟内容  ::before</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        在选中元素之后插入虚拟内容  ::after</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">         */</span></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>一、<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>元素选择器demo<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span> <span class=\"comment\">&lt;!-- 元素选择器示例 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>二、<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;highlight&quot;</span>&gt;</span>类选择器demo<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span> <span class=\"comment\">&lt;!-- 类选择器示例 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>类选择器demo1<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span> <span class=\"comment\">&lt;!-- 类选择器示例 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>三、<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>ID选择器demo<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span> <span class=\"comment\">&lt;!-- ID选择器示例 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>注：<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>类选择器<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> 和<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>ID选择器<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span>最常用<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>四、<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;father&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 子元素选择器 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span> 子元素选择器demo<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 后代选择器demo --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grandson&quot;</span>&gt;</span>后代选择器<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>五、<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>普通p标签<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>相邻兄弟选择器demo<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>另一p标签<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>另另一p标签<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>六、<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;element&quot;</span>&gt;</span>伪类选择器demo<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/062201.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"三-CSS-常用属性\"><a href=\"#三-CSS-常用属性\" class=\"headerlink\" title=\"(三) CSS 常用属性\"></a>(三) CSS 常用属性</h2><ul>\n<li><strong>font 属性</strong>：调节字体的复合属性</li>\n<li><strong>line-height 属性</strong>：行高，用于调节行间距</li>\n</ul>\n<blockquote>\n<p><em><strong>行内块元素</strong></em></p>\n<ul>\n<li>水平方向上排列，但可以设置宽度、高度、内外边距等块级元素的属性</li>\n<li>可以包含其他行内元素或块级元素</li>\n</ul>\n<p><strong>注</strong>：一行可以有多个行内块元素 </p>\n</blockquote>\n<ul>\n<li><p><strong>width 属性、heigh 属性</strong>：设置块元素或行内块元素的宽、高（行内元素的宽、高由包含的内容决定，不支持强制设置这两个属性）</p>\n</li>\n<li><p><strong>display 属性</strong>：实现行内元素、块元素、行内块元素的相互转换</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS 常用属性<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.block</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.inline</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">           <span class=\"attribute\">background-color</span>: burlywood;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.inline-block</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 只设置 width 或 height ，图片会按比例压缩；同时设置宽高，实现拉伸效果*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.span-inline-block</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>:inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:brown;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>一、font <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 字体属性 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font: bolder 30px &#x27;KaiTi&#x27; &quot;</span>&gt;</span> font 复合属性示例<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>二、line-height<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 行高 可以用于调节行间距 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;line-height: 30px;&quot;</span>&gt;</span>长文本咿呀咿呀哟咿呀咿呀哟咿呀咿呀哟咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀咿呀<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>三、行内块元素<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span>块级元素<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span>块级元素<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inline&quot;</span>&gt;</span>行内元素<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inline&quot;</span>&gt;</span>行内元素<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- img 标签 是典型的行内块元素--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./052903.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inline-block&quot;</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./052903.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inline-block&quot;</span>&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>四、display<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">divd</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: inline; background-color:chartreuse;&quot;</span>&gt;</span>转换成行内元素的 div 标签<span class=\"tag\">&lt;/<span class=\"name\">divd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;span-inline-block&quot;</span>&gt;</span>转换成行内块元素的 span 标签<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/062202.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"四-CSS-盒子模型\"><a href=\"#四-CSS-盒子模型\" class=\"headerlink\" title=\"(四) CSS 盒子模型\"></a>(四) CSS 盒子模型</h2><blockquote>\n<p><em><strong>CSS盒子模型</strong></em>：CSS 中常用于布局的基本概念，即文档中的每个元素都可以被看作是一个矩形的盒子，从里到外以此为，内容(Content)、内边距(Padding)、边框(Border)、外边距(Margin)</p>\n<ul>\n<li>**内容(Content)**：如文本、图片</li>\n<li>**内边距(Padding)**：围绕在内容的内部，是内容与边框之间的空间，可以用 <strong>padding</strong> 属性设置。</li>\n<li>**边框(Border)**：围绕在内边距的外部，是盒子的边界，可以用 <strong>border</strong> 属性设置</li>\n<li>**外边距(Margin)**：围绕在边框的外部，是盒子与其他元素之间的空间，可以用 <strong>margin</strong> 属性设置</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS 盒子模型<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.demo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">2px</span>  black solid;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.border-demo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: burlywood;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 上右下左 顺时针 只有一个值则全用这个值，两个值同时用于相对的边框*/</span>    </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-style</span>: solid;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-color</span>: chartreuse;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-width</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">5px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 可以通过上述方式实现对特定方向的边框设置样式，也可以使用下述方式 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-left</span>: <span class=\"number\">0</span>cap;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;border-demo&quot;</span>&gt;</span>border-demo<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062301.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"五-CSS-浮动\"><a href=\"#五-CSS-浮动\" class=\"headerlink\" title=\"(五) CSS 浮动\"></a>(五) CSS 浮动</h2><h4 id=\"1-传统的5种网络布局方式：\"><a href=\"#1-传统的5种网络布局方式：\" class=\"headerlink\" title=\"(1) 传统的5种网络布局方式：\"></a>(1) 传统的5种网络布局方式：</h4><blockquote>\n<ul>\n<li>**标准流(普通、文档流)**：网页按照元素的书写顺序依次排列，块级元素和行内元素按照默认规定的方式来排列——块级元素占一行，行内元素一行可以有多个</li>\n<li><strong>浮动</strong></li>\n<li><strong>定位</strong></li>\n<li><strong>Flexbox</strong>、<strong>Grid</strong>：自适应布局，使页面在不同的设备更容易适应</li>\n</ul>\n<p>注：本质都是摆放盒子，在实际开发中通常混合使用</p>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"2-浮动：\"><a href=\"#2-浮动：\" class=\"headerlink\" title=\"(2) 浮动：\"></a>(2) 浮动：</h4><ul>\n<li>简介：<br>  <strong>浮动</strong> 使得页布局更加灵活多变，最典型的应用是让多个块级元素在同一行排列显示<br>&nbsp;</li>\n<li><strong>浮动</strong> 与 <strong>行内块元素</strong> 的区别：<br>  浮动的元素紧贴在一起，没有缝隙，**(注：浮动是相对于父级元素浮动，只会在父元素内部浮动)**，若父级元素的宽度装不下这些浮动的盒子，多出去的盒子会另起一行；而行内块元素彼此间有缝隙，不如浮动方便。<br>&nbsp;</li>\n<li>语法：<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选择器 &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 左浮动/右浮动/不浮动 */</span></span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left/right/none; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n&nbsp;</li>\n<li>3大特性：<ul>\n<li><strong>脱标</strong>：脱离标准流</li>\n<li><strong>一行显示，顶部对齐</strong>：若多个盒子同时设置了浮动，则按照属性值一行内显示，并且顶端对齐排列</li>\n<li><strong>具备行内块元素的特性</strong><br>&nbsp;</li>\n</ul>\n</li>\n<li>demo 及 父类不设置高度造成的盒子高度坍塌问题的两个解决方法<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS 浮动<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.father</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* height: 300px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 若子元素浮动，父元素不设置高度，会导致盒子高度坍塌 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 解决方法1 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* overflow: hidden; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 解决方法2 伪元素清除法*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.father</span><span class=\"selector-pseudo\">::after</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: table;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">clear</span>: both;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.left-son</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: burlywood;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* w100+h100+Tab 快捷生产 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.right-son</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: chartreuse;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span><span class=\"selector-pseudo\">:right</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;father&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left-son&quot;</span>&gt;</span>左浮动<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right-son&quot;</span>&gt;</span>右浮动<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>文本<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<img src=\"/../images/062302.png\"></li>\n</ul>\n<p>&nbsp;</p>\n<h2 id=\"六-CSS-定位\"><a href=\"#六-CSS-定位\" class=\"headerlink\" title=\"(六) CSS 定位\"></a>(六) CSS 定位</h2><blockquote>\n<p><strong>浮动</strong> 灵活但不容易控制，<strong>定位</strong> 精准但不够灵活</p>\n</blockquote>\n<blockquote>\n<p>3种定位方式</p>\n<ul>\n<li><strong>相对定位</strong>：相对于元素在文件流中的正常位置定位</li>\n<li><strong>绝对定位</strong>：相对于其最近的已定位的祖先元素进行定位，不占据文档流的位置</li>\n<li><strong>固定定位</strong>：相对于浏览器的串口进行定位，不占据文档流，固定在屏幕上某个位置，不随滚动而移动</li>\n</ul>\n<p>通常相对定位用于微调元素的位置，而绝对定位和相对定位用于创建更复杂的布局</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS 定位<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box-normal</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:chartreuse;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">         <span class=\"comment\">/* 相对定位 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box-relative</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: burlywood;</span></span><br><span class=\"line\"><span class=\"language-css\">            </span></span><br><span class=\"line\"><span class=\"language-css\">           </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 相对于左边偏移 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">120px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:blanchedalmond;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 绝对定位 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box-absolute</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:brown;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box-fixed</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>:<span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>一、相对定位<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-normal&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-relative&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-normal&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>二、绝对定位<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-normal&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-absolute&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-normal&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>二、固定<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-fixed&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/062303.png\"></p>\n<p>&nbsp;</p>\n<h1 id=\"三、Javascript\"><a href=\"#三、Javascript\" class=\"headerlink\" title=\"三、Javascript\"></a>三、Javascript</h1><h2 id=\"一-Javascript-引入\"><a href=\"#一-Javascript-引入\" class=\"headerlink\" title=\"(一) Javascript 引入\"></a>(一) Javascript 引入</h2><h3 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"(1) 简介\"></a>(1) 简介</h3><blockquote>\n<p><strong>Javascript</strong> (<strong>JS</strong>)：轻量级、解释型、面向对象的脚本语言，主要用于实现网页动态效果，增加用户与网页的交互性。<br>作为一种客户端脚本语言，JS 可直接嵌入HTML，并在浏览器中执行。</p>\n</blockquote>\n<blockquote>\n<p>作用：<br><strong>客户端脚本</strong>：用于在浏览器中执行，实现动态效果和用户交互<br><strong>网页开发</strong>：与 HTML 与 CS 协同工作，使得网页具有更强的动态性和交互性<br><strong>后端开发</strong>：使用 <strong>Node.js</strong>，JS也可以在服务器端运行，实现服务器端应用的开发</p>\n</blockquote>\n<h3 id=\"2-导入方式-1\"><a href=\"#2-导入方式-1\" class=\"headerlink\" title=\"(2) 导入方式\"></a>(2) 导入方式</h3><blockquote>\n<p>两种常用的导入方式</p>\n<ul>\n<li><strong>内联式</strong>：<br>在 HTML 文件中直接嵌入 JS 代码，具体是将 <strong>script</strong> 标签放在 head 标签或 body 标签内</li>\n<li><strong>外联式</strong>：<br>将 JS 代码保存在外部文件中，通过 <strong>script</strong> 标签的 <strong>src</strong> 属性引入</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"二-Javascript-基本语法\"><a href=\"#二-Javascript-基本语法\" class=\"headerlink\" title=\"(二) Javascript 基本语法\"></a>(二) Javascript 基本语法</h2><h3 id=\"1-JS-变量与数据类型\"><a href=\"#1-JS-变量与数据类型\" class=\"headerlink\" title=\"(1) JS 变量与数据类型\"></a>(1) JS 变量与数据类型</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Javascript 变量与数据类型<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 变量声明 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- variable 声明的变量具有函数作用域， let 声明的变量具有块级作用域，const 声明常量--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- let 更安全、灵活 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> x;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> y = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> <span class=\"variable constant_\">PI</span> = <span class=\"number\">3.14</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x,y,<span class=\"variable constant_\">PI</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;aj&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> empty_value = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(empty_value);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;undefined 表示一个变量已被声明但未被赋值，或一个对象属性不存在，函数的返回值缺省也返回undefined&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;null 表示一个变量被明确赋值为空&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;undefined 表示变量可能在将来被赋值，或还未被计算出来；null 则明确表示没有对象值&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062501.png\"></p>\n<h3 id=\"2-JS-控制语句\"><a href=\"#2-JS-控制语句\" class=\"headerlink\" title=\"(2) JS 控制语句\"></a>(2) JS 控制语句</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Javascript 控制语句<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>条件语句<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;if-else 语句&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> x = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> y = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (y &gt; x) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&gt;0&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (y == x) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;=0&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&lt;0&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>循环语句<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for 循环&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i ++ ) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;while 循环&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> j = <span class=\"number\">10</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">while</span> (j &gt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(j -- );</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;循环关键字&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">       </span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> cnt = <span class=\"number\">1</span>; ; cnt ++ ) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> ( cnt &gt; <span class=\"number\">9</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            </span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (cnt % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">continue</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; </span></span><br><span class=\"line\"><span class=\"language-javascript\">                </span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(cnt);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            </span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062502.png\"></p>\n<h3 id=\"3-JS-函数\"><a href=\"#3-JS-函数\" class=\"headerlink\" title=\"(3) JS 函数\"></a>(3) JS 函数</h3><p>一段可重复执行的代码块，接受输入（参数）、执行指定逻辑，返回输出</p>\n<blockquote>\n<ul>\n<li>JS 中 用 <strong>function</strong> 声明函数，参数表可为空，无返回值可省略 <strong>return</strong>。</li>\n<li>作用域 <strong>局部 &#x2F; 全局</strong><br>同 C++ ，不过 JS 不用指定数据类型和返回值类型</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">function_name</span>(<span class=\"params\">参数表</span>) &#123; <span class=\"comment\">// 参数表可为空，表示不传参</span></span><br><span class=\"line\">    <span class=\"comment\">// 函数体 函数执行的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> 返回值;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Javascript 函数<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">Hello</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Hello</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">Hello_with_return</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello-return&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> t = <span class=\"title class_\">Hello</span>_with_return();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Hello</span>_with_return());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">Hello_with_parameter</span>(<span class=\"params\">name</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello &#x27;</span> + name);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Hello</span>_with_parameter(<span class=\"string\">&#x27;aj&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> globle_var = <span class=\"string\">&#x27;全局变量&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">local_var_function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> local_var = <span class=\"string\">&#x27;局部变量&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;函数内打印&#x27;</span> + globle_var);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;函数内打印&#x27;</span> + local_var);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">local_var_function</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;全局打印&#x27;</span> + globle_var);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;全局打印&#x27;</span> + local_var);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062701.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"三-Javascript-事件\"><a href=\"#三-Javascript-事件\" class=\"headerlink\" title=\"(三) Javascript 事件\"></a>(三) Javascript 事件</h2><blockquote>\n<p> <strong>事件</strong> 是文档或浏览器窗口发生的特定瞬间，如用户的点击，键盘的按下，页面的加载等。</p>\n<p> 常见事件：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">事件</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>onClick</strong></td>\n<td align=\"center\">点击事件</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>onMouseOver</strong></td>\n<td align=\"center\">鼠标经过</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>onMouseut</strong></td>\n<td align=\"center\">点击事件</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>onChange</strong></td>\n<td align=\"center\">文本内容改变</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>onSelect</strong></td>\n<td align=\"center\">文本框选中</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>onFocus</strong></td>\n<td align=\"center\">光标聚集(聚焦)</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>onBlur</strong></td>\n<td align=\"center\">光标聚集(失焦)</td>\n</tr>\n</tbody></table>\n<p>事件绑定：</p>\n<ul>\n<li>HTML 属性</li>\n<li>DOM 属性</li>\n<li>addEventListener 方法</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Javascript 事件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;click_event()&quot;</span>&gt;</span>点击事件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">onfocus</span>=<span class=\"string\">&quot;focus_event()&quot;</span> <span class=\"attr\">onblur</span>=<span class=\"string\">&quot;blur_event()&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">click_event</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;触发点击事件&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 聚焦事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">focus_event</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;获取焦点&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 失焦事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">blur_event</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;失去焦点&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062702.png\"></p>\n<p>&nbsp;</p>\n<h2 id=\"四-Javascript-DOM\"><a href=\"#四-Javascript-DOM\" class=\"headerlink\" title=\"(四) Javascript DOM\"></a>(四) Javascript DOM</h2><h3 id=\"1-简介-1\"><a href=\"#1-简介-1\" class=\"headerlink\" title=\"(1) 简介\"></a>(1) 简介</h3><blockquote>\n<p><strong>DOM（Document Object Model）</strong> 是一个跨平台和语言独立的接口。当网页被加载时，浏览器浏览器会创建页面的 文档对象模型，即 DOM。它将HTML或XML文档表示为树形结构，每个节点都是文档中的对象。对象让函数与变量间建立联系，对象中的属性就是变量，方法就是函数，调用时需要指定变量名。</p>\n<p>DOM 为这个 文档树提供一个接口，使开发者可以通过 DOM 接口 使用 JS 操作树形结构，与 HTML 文档交互，动态地访问和操作文档中的内容、结构和样式。</p>\n<p>在 Web 开发中，<strong>DOM</strong> 通常与 <strong>Javascript</strong> 一起使用</p>\n</blockquote>\n<h3 id=\"2-常用方法\"><a href=\"#2-常用方法\" class=\"headerlink\" title=\"(2) 常用方法\"></a>(2) 常用方法</h3><blockquote>\n<p> DOM 对象常用方法：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>appendChild()</strong></td>\n<td align=\"center\">把新的子节点添加到指定节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>removeChild()</strong></td>\n<td align=\"center\">删除子节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>replaceChild()</strong></td>\n<td align=\"center\">替换子节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>insertBefore()</strong></td>\n<td align=\"center\">在指定的子节点前面插入新的子节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>createAttribute()</strong></td>\n<td align=\"center\">创建属性节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>createElement()</strong></td>\n<td align=\"center\">创建元素节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>createTextNode()</strong></td>\n<td align=\"center\">创建文本节点</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>getAttribute()</strong></td>\n<td align=\"center\">返回指定的属性值</td>\n</tr>\n</tbody></table>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Javascript DOM<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span>类选择器标签<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box2&quot;</span>&gt;</span>ID选择器标签<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>普通标签<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>点击按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>点击按钮1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>点击按钮2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 通过 DOM API提供的方法，在 JS 中获取元素节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> element_class = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&#x27;box1&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element_class);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> element_id = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;box2&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element_id);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> element_tag = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;div&#x27;</span>)[<span class=\"number\">2</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element_tag);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// innerText 会忽略 HTML 标记，把这些内容当作纯文本处理</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        element_id.<span class=\"property\">innerText</span> = <span class=\"string\">&#x27;&lt;a href=&quot;#&quot;&gt;跳转链接&lt;/a&gt;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// innerHTML 会 解析 HTML 标记，并更新元素的内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        element_class.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;&lt;a href=&quot;#&quot;&gt;跳转链接&lt;/a&gt;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        element_tag.<span class=\"property\">style</span>.<span class=\"property\">color</span> = <span class=\"string\">&#x27;red&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        element_tag.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"string\">&#x27;20px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 通过 DOM 属性 绑定事件 </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> button_element = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;button&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(button_element);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        button_element.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; <span class=\"comment\">// 匿名函数 不需要在其他地方调用</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;Dom 属性 触发按钮&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 对象的 addEventListener 属性 (触发方式, 触发后执行的程序)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> button_element1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;button&#x27;</span>)[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(button_element1);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        button_element1.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;addEventListener 属性 触发按钮1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> button_element2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;button&#x27;</span>)[<span class=\"number\">2</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(button_element2);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        button_element2.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,click_enent);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">click_enent</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;addEventListener 属性 触发按钮2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062703.png\"></p>\n<h3 id=\"3-练习\"><a href=\"#3-练习\" class=\"headerlink\" title=\"(3) 练习\"></a>(3) 练习</h3><ul>\n<li><p>.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>DOM 节点操作<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"comment\">/* 相对于浏览器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-collapse</span>: collapse; <span class=\"comment\">/* 合并边框 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>; <span class=\"comment\">/* 外边距 —— 间隔 “新增数据” 按钮 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span>, <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ddd</span>; <span class=\"comment\">/* 边框 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center; <span class=\"comment\">/* 居中 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>; <span class=\"comment\">/* 内边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span> &#123;<span class=\"comment\">/* 表头 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            </span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">button</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center;&quot;</span>&gt;</span>表格的增删改查<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;addRow()&quot;</span>&gt;</span>新增数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 3列 可以有无数行  --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;table&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>联系方式<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>阿奖<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>12345678910<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- this 关键字 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;editRow(this)&quot;</span>&gt;</span>编辑<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;deleteRow(this)&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./table.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新增数据函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addRow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> table = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;table&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// console.log(table);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取表格行数 以确定插入位置</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> length = table.<span class=\"property\">rows</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(length);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 插入行节点</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newRow = table.<span class=\"title function_\">insertRow</span>(length); <span class=\"comment\">// insetRow() 返回索引为 length 的节点</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newRow);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 插入列节点对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> nameCol =  newRow.<span class=\"title function_\">insertCell</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nubmerCol =  newRow.<span class=\"title function_\">insertCell</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> actionCol =  newRow.<span class=\"title function_\">insertCell</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">// console.log(newRow);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 修改节点文本内容</span></span><br><span class=\"line\">    nameCol.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;未命名&#x27;</span>;</span><br><span class=\"line\">    nubmerCol.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;xxxxxxxxxx&#x27;</span>;</span><br><span class=\"line\">    actionCol.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;&lt;button onclick=&quot;editRow(this)&quot;&gt;编辑&lt;/button&gt;&lt;button onclick=&quot;deleteRow(this)&quot;&gt;删除&lt;/button&gt;&#x27;</span>;</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除数据函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deleteRow</span>(<span class=\"params\">button</span>) &#123; <span class=\"comment\">// 需要传入待删除的节点作为参数t</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(button);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取父节点的父节点 tr -&gt; td -&gt; button    </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> row = button.<span class=\"property\">parentNode</span>.<span class=\"property\">parentNode</span>;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(row);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (row.<span class=\"property\">parentNode</span>.<span class=\"property\">rows</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">2</span>) &#123; <span class=\"comment\">// 保持表格非空</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 通过父节点删除子节点 无法自己删除自己</span></span><br><span class=\"line\">        row.<span class=\"property\">parentNode</span>.<span class=\"title function_\">removeChild</span>(row);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编辑数据</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">editRow</span>(<span class=\"params\">button</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(button);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取父节点的父节点 tr -&gt; td -&gt; button</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> row = button.<span class=\"property\">parentNode</span>.<span class=\"property\">parentNode</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = row.<span class=\"property\">cells</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> number = row.<span class=\"property\">cells</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> action = row.<span class=\"property\">cells</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> inputName = <span class=\"title function_\">prompt</span>(<span class=\"string\">&quot;请输入姓名：&quot;</span>); <span class=\"comment\">// 弹窗 输入</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> inputNumber = <span class=\"title function_\">prompt</span>(<span class=\"string\">&quot;请输入手机号：&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (inputName) &#123; <span class=\"comment\">// 若未输入 则不更改</span></span><br><span class=\"line\">        name.<span class=\"property\">innerHTML</span> = inputName;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (inputNumber) &#123;</span><br><span class=\"line\">        number.<span class=\"property\">innerHTML</span> = inputNumber;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062704.png\"></p>\n</li>\n</ul>\n<p>&nbsp;</p>\n<h1 id=\"四、移动端适配\"><a href=\"#四、移动端适配\" class=\"headerlink\" title=\"四、移动端适配\"></a>四、移动端适配</h1><h2 id=\"1-响应式布局的实现方法\"><a href=\"#1-响应式布局的实现方法\" class=\"headerlink\" title=\"(1) 响应式布局的实现方法\"></a>(1) 响应式布局的实现方法</h2><blockquote>\n<ul>\n<li>通过 <strong>rem</strong>、<strong>vw&#x2F;vh</strong> 单位，实现在在不同的设备上显示相同的比例而实现适配</li>\n<li>响应式布局，通过媒体查询 <strong>@media</strong> 实现一套 HTML 配合多套 CSS 实现适配</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"2-viewport\"><a href=\"#2-viewport\" class=\"headerlink\" title=\"(2) viewport\"></a>(2) viewport</h2><p>VS Code 中自动生成的 head 标签中的 <strong>viewport</strong> 属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> <strong>width&#x3D;device-width</strong>：将视口的宽度设置为设备的宽度。这确保网页内容不会被缩放，而是按照设备的实际宽度进行布局；<br> <strong>initial-scale&#x3D;1.0</strong>：设置初始的缩放级别为1.0。这也有助于确保网页在加载时以原始大小显示，而不是被缩小或放大；<br> <strong>minimum-scale&#x3D;1.0</strong>：最小缩放比例为1；<br> <strong>maximum-scale&#x3D;1.0</strong>：最大缩放比例为1；<br> <strong>user-scalable&#x3D;no</strong>：不允许用户缩放。</p>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"3-rem\"><a href=\"#3-rem\" class=\"headerlink\" title=\"(3) rem\"></a>(3) rem</h2><blockquote>\n<p>在响应式网页与移动端布局时，使用 <strong>rem</strong> 而不是 <strong>px</strong></p>\n<p><strong>rem</strong> 是一个倍数单位，基于 <strong>html</strong> 标签中的 <strong>font-size</strong> 属性值的倍数;<br><strong>px</strong> 即像素，是绝对长度单位</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>移动端 rem 适配原理<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* html &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">            font-size: 30px;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        &#125; */</span></span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box-px</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box-rem</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">3rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: burlywood;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-px&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-rem&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 根据设备宽度计算 html 标签中的font-size属性值 为 屏幕宽度/10</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">resetHtmlFontSize</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 获取 html 根节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = screen.<span class=\"property\">availWidth</span> / <span class=\"number\">10</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">resetHtmlFontSize</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 绑定事件：改变屏幕尺寸的时候，再触发一遍 resetHtmlFontSize()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span> = <span class=\"title function_\">resetHtmlFontSize</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/062801.png\"></p>\n<p>&nbsp;</p>\n<h1 id=\"五、Flex-弹性盒子\"><a href=\"#五、Flex-弹性盒子\" class=\"headerlink\" title=\"五、Flex 弹性盒子\"></a>五、Flex 弹性盒子</h1><h2 id=\"1-简介-2\"><a href=\"#1-简介-2\" class=\"headerlink\" title=\"(1) 简介\"></a>(1) 简介</h2><blockquote>\n<p><strong>Felx （Flexible Box）</strong> 布局，也称为 <strong>Flexbox</strong>，是一种用于在容器中布局的模型，使容器的子元素以弹性的形式排列，配合 <strong>rem</strong> 处理尺寸来适应不同屏幕尺寸和设备<br><strong>Flex</strong> 布局是一种用于在容器内分配和对齐项的一维布局模型。它提供了一种更加高效的方式来布局、对齐和分配容器内元素的空间，即使它们的大小是未知或者是动态的。</p>\n<p><strong>主要思想</strong>： 是使容器能够改变其子项的宽度&#x2F;高度（伸缩性）以适应可用空间，或者保持它们的宽高比，同时也能按照指定的顺序来排列这些子项。</p>\n</blockquote>\n<h2 id=\"2-Flex-盒子模型\"><a href=\"#2-Flex-盒子模型\" class=\"headerlink\" title=\"(2) Flex 盒子模型\"></a>(2) Flex 盒子模型</h2><blockquote>\n<p><em><strong>主要组成部分</strong></em>：</p>\n<p><strong>Flex容器（Flex Container）</strong>：通过设置display属性为flex或inline-flex，可以将一个元素变为Flex容器。它的直接子元素会自动成为Flex项目（Flex Items）。<br><strong>Flex项目（Flex Items）</strong>：Flex容器的直接子元素自动成为Flex项目。这些项目可以使用Flexbox的各种属性来调整和布局。<br><strong>主轴（Main Axis）</strong>：Flex容器的主轴是Flex项目的主要布局方向。默认情况下，主轴是水平的，从左到右。<br><strong>交叉轴（Cross Axis）</strong>：垂直于主轴的轴称为交叉轴。如果主轴是水平的，那么交叉轴就是垂直的。<br><strong>起始线和终止线</strong>：Flex布局中有起始线和终止线的概念，分别对应主轴的开始和结束。默认情况下，主轴从左到右，起始线在左边，终止线在右边。<br><img src=\"/../images/062802.png\"></p>\n</blockquote>\n<blockquote>\n<p><em><strong>关键属性</strong></em>：</p>\n<ul>\n<li><p><strong>display</strong>: 定义一个元素是Flex容器。</p>\n</li>\n<li><p><strong>flex-direction</strong>: 定义Flex项目在容器中的排列方向。<br>该属性用于决定主轴的方向，即项目的排列方向。其属性值及其作用分别为：</p>\n<ul>\n<li><strong>row（default）</strong>：主轴为水平方向，起点在左端（项目从左往右排列）。</li>\n<li><strong>row-reverse</strong>：主轴为水平方向，起点在右端（项目从右往左排列）。</li>\n<li><strong>column</strong>：主轴为垂直方向，起点在上沿（项目从上往下排列）。</li>\n<li><strong>column-reverse</strong>：主轴为垂直方向，起点在下沿（项目从下往上排列）。</li>\n</ul>\n</li>\n<li><p><strong>flex-wrap</strong>: 定义Flex容器是单行还是多行，以及如何处理子项的换行。<br>默认情况下，项目都排列在同一条轴线上。如果一条轴线排不下，可以使用以下三种换行方式：</p>\n<ul>\n<li><p><strong>nowrap（default）</strong>：不换行（列）</p>\n</li>\n<li><p><strong>wrap</strong>：主轴为横向时：从上到下换行；主轴为纵向时：从左到右换列</p>\n</li>\n<li><p><strong>wrap-reverse</strong>：主轴为横向时：从下到上换行；主轴为纵向时：从右到左换列</p>\n</li>\n<li><p><strong>flex-flow</strong>：复合属性，<strong>display</strong> 属性和 <strong>flex-direction</strong> 属性的简写形式。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>justify-content</strong>: 定义了Flex项目在主轴上的对齐方式。</p>\n<ul>\n<li><strong>flex-start（default）</strong>：与主轴的起点对齐。</li>\n<li><strong>flex-end</strong>：与主轴的终点对齐。</li>\n<li><strong>center</strong>：与主轴的中点对齐。</li>\n<li><strong>space-between</strong>：两端对齐主轴的起点与终点，项目之间的间隔都相等。</li>\n<li><strong>space-around</strong>：每个项目两侧的间隔相等。项目之间的间隔比项目与边框的间隔大一倍。</li>\n</ul>\n</li>\n<li><p><strong>align-items</strong>: 定义了Flex项目在交叉轴上如何对齐。</p>\n<ul>\n<li><strong>flex-start</strong>：项目会从交叉轴的起点开始对齐。</li>\n<li><strong>flex-end</strong>：项目会从交叉轴的终点开始对齐。</li>\n<li><strong>center</strong>：项目会居中对齐于交叉轴。</li>\n<li><strong>baseline</strong>：项目的第一行文字的基线对齐。</li>\n<li><strong>stretch（default）</strong>：如果项目未设置高度或设为auto，项目将占满整个容器的高度。</li>\n</ul>\n</li>\n<li><p><strong>align-content</strong>: 定义了多行Flex项目在交叉轴上的对齐方式，如果项目只有一行，则该属性不起作用</p>\n<ul>\n<li><strong>flex-start</strong>：与交叉轴的起点对齐。</li>\n<li><strong>flex-end</strong>：与交叉轴的终点对齐。</li>\n<li><strong>center</strong>：与交叉轴的中点对齐。</li>\n<li><strong>space-between</strong>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>\n<li><strong>space-around</strong>：每根轴线两侧的间隔都相等，轴线之间的间隔比轴线与边框的间隔大一倍。</li>\n<li><strong>stretch（default）</strong>：主轴线占满整个交叉轴。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Flex 弹性布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">html</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 定义container为Flex容器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">40rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* flex-direction: column-reverse; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">flex-wrap</span>: wrap;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* justify-content: space-evenly; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* align-items: center; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">20rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- .item*6&#123;$&#125; 快捷生成代序号的多个div标签 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: aliceblue;&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:antiquewhite&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:aqua&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:aquamarine&quot;</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:red&quot;</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:deepskyblue&quot;</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/062803.png\" alt=\"demo\"></p>\n<p>&nbsp;</p>\n<h1 id=\"六、进阶\"><a href=\"#六、进阶\" class=\"headerlink\" title=\"六、进阶\"></a>六、进阶</h1><blockquote>\n<p><strong>Vue.js</strong>：灵活、易上手的 JS 开发框架<br><strong>微信小程序</strong>：制作一个 APP<br><strong>使用Vue开发微信小程序</strong></p>\n<p>注：无先后顺序</p>\n<p>附：</p>\n<ul>\n<li><a href=\"https://cn.vuejs.org/\">Vue.js</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/\">微信小程序</a></li>\n<li><a href=\"https://uniapp.dcloud.net.cn/quickstart.html\">uni.app</a></li>\n</ul>\n</blockquote>\n<hr>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p><a href=\"https://www.bilibili.com/video/BV1BT4y1W7Aw/?spm_id_from=333.999.0.0&vd_source=df38266eedfef61aa7370319919d94d\">b站罗大富</a><br>&nbsp;</p>\n</blockquote>\n","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://example.com/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"浏览器及工作原理","date":"2024-06-06T05:19:39.000Z","path":"2024/06/06/Browser-working-mode/","text":"不懂浏览器的前端工程师不是好码农 结构： 用户界面 浏览器引擎 渲染引擎 —— 浏览器的内核 网络 JS解释器 多进程结构 每个结构并发多个线程 每个线程可以并行执行不同的任务 启动一程序，会创建一进程来执行任务代码，并为该进程分配内存空间，应用程序的状态保存在内存空间里，应用程序关闭，内存空间被回收。进程可以启动更多的进程来执行任务。进程间彼此独立，若两进程间需要传递数据，需要通过进程间通信管道IPC来传递。多进程结果能避免一个进程故障而影响整个应用程序。进程可将任务细分，通过创建多个线程并行执行不同的任务，同一进程间的线程可直接共享数据。 早期浏览器并非是多进程结果，存在很多问题： 不稳定：其中一个线程卡死可能会导致整个进程出现问题 不安全：数据共享 不流畅：一个进程负担过重，运行效率不高 &nbsp; 目前的浏览器是多进程结构，根据进程的功能不同，可以分为以下结构： 浏览器进程：负责控制除标签页外的用户界面(顶部)，包括地址栏、书签、前进后退按钮、负责与浏览器其他进程协调工作 网络进程：负责发起、接受网络请求 GPU进程：负责浏览器也页面的渲染 插件进程：负责控制网站使用的所有插件(例如Flash)，并非扩展 渲染器进程：负责控制显示Tab标签内的所有内容，浏览器默认情况下会为每个标签页都创建一个进程(具体有进程模型决定) &nbsp; 当在地址栏输入地址时，浏览器进程的UI线程会捕捉输入内容 若输入的是网址，UI线程会启动一个网络线程来请求DNS进行域名解析，然后连接服务器获取数据 若输入的是关键词，浏览器会使用默认配置的搜索引擎来查询 网络线程获取到数据后 巴拉巴拉巴拉 听不懂了只是想简单入个门的","content":"<blockquote>\n<p>不懂浏览器的前端工程师不是好码农</p>\n</blockquote>\n<blockquote>\n<p>结构：</p>\n<ul>\n<li>用户界面</li>\n<li>浏览器引擎</li>\n<li><strong>渲染引擎</strong> —— 浏览器的内核<ul>\n<li>网络</li>\n<li>JS解释器</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>\n<p>多进程结构 每个结构并发多个线程 每个线程可以并行执行不同的任务</p>\n<p>启动一程序，会创建一进程来执行任务代码，并为该进程分配内存空间，应用程序的状态保存在内存空间里，应用程序关闭，内存空间被回收。进程可以启动更多的进程来执行任务。进程间彼此独立，若两进程间需要传递数据，需要通过进程间通信管道IPC来传递。多进程结果能避免一个进程故障而影响整个应用程序。进程可将任务细分，通过创建多个线程并行执行不同的任务，同一进程间的线程可直接共享数据。</p>\n<p>早期浏览器并非是多进程结果，存在很多问题：</p>\n<ul>\n<li>不稳定：其中一个线程卡死可能会导致整个进程出现问题</li>\n<li>不安全：数据共享</li>\n<li>不流畅：一个进程负担过重，运行效率不高</li>\n</ul>\n<p>&nbsp;</p>\n<p>目前的浏览器是多进程结构，根据进程的功能不同，可以分为以下结构：</p>\n<ul>\n<li>浏览器进程：负责控制除标签页外的用户界面(顶部)，包括地址栏、书签、前进后退按钮、负责与浏览器其他进程协调工作</li>\n<li>网络进程：负责发起、接受网络请求</li>\n<li>GPU进程：负责浏览器也页面的渲染</li>\n<li>插件进程：负责控制网站使用的所有插件(例如Flash)，并非扩展</li>\n<li>渲染器进程：负责控制显示Tab标签内的所有内容，浏览器默认情况下会为每个标签页都创建一个进程(具体有进程模型决定)</li>\n</ul>\n<p>&nbsp;</p>\n<p>当在地址栏输入地址时，浏览器进程的UI线程会捕捉输入内容</p>\n<ul>\n<li>若输入的是网址，UI线程会启动一个网络线程来请求DNS进行域名解析，然后连接服务器获取数据</li>\n<li>若输入的是关键词，浏览器会使用默认配置的搜索引擎来查询</li>\n</ul>\n<p>网络线程获取到数据后 巴拉巴拉巴拉 听不懂了<br>只是想简单入个门的</p>\n","categories":[],"tags":[{"name":"网络知识","slug":"网络知识","permalink":"http://example.com/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"}]},{"title":"6月","date":"2024-06-01T14:52:04.000Z","path":"2024/06/01/2406/","text":"2nd周一（6.3）实践证明，精力是一定的，不仅意味着是有限的，同时意味着总要花在什么地方。课下时间全部用来复习备考现在看来显然不现实，因为那是靠自制力撑着，而慢慢发现自己远没有自己想象中那么强大，所以学着学着就学不动了。那剩下的时间用来干啥呢？如果不学东西的话，可能自制力尚存可能会去看看电视剧，不会选择开一个新游戏(毕竟两周就要考试了)，但是三国也不总是能吸引我，更多的是抱着“一半儿都看完了”的想法，初衷应该是积累谈资。但是看着看着不想看了，那去干啥呢？大概率是不会去看书的，因为书也是本着“提升自身”的想法挑选和阅读的，买的几本不像爽文，没那么吸引我。那就无所事事了呗，好了，现在可能会想着找找感官的刺激了，事后再感慨一下“生理效应真强大”，以及“其实欲望也没这么强烈，只是无所事事罢了”。所以，还是重新捡起来好了，也别等着考完试了，不耽误的。相反，学点儿东西自以为有所得的正反馈会使阁下的状态不错，那两周差不多就是这样的。因为精力是一定的，所以，戒除一种习惯比较好的方式可能不是自己跟自己过不去，用意志力控制自己，因为意志力不会总像开始时那么强大，今天身体不舒服或者心情不太好之类的生理或心理方面的因素都会影响状态，到那时候可能就要就范了。因此，比较好的方式可能是，用养成另一种习惯来替换原来的习惯。这个新的习惯要具备以下特征：能带来正向反馈、难点儿的蹦蹦也能够着、可持续等，最理想的当然时喜欢了，热爱可抵岁月漫长，越来越以为然。 既已名正言顺，就先睡会儿啦，下午还要课呢，下课还得回来学东西呢。 对了，是有些怕被笑话的顾虑的，是指学的东西方面，一天就学这么一点儿，而且还都是皮毛，打卡好像是显得有些滑稽，但是如果这样或多或少能帮阁下走下去，何乐而不为呢。但是确实效率有些低下了，想一字不落的记下来显然不现实，穷则思变。 晚自习虽说效率不高，但好歹是学了三节课。顺流而下不要太容易，想再恢复原来的状态就要花点儿功夫了。慢慢儿来。回宿舍洗漱了一下就续上下午的referer防盗链，学了一点儿，改善了一下记笔记的方式，重在理解的基础上总结，忌讳一字不差的copy。豆瓣的图片是有防盗的，随便找了一张，罪过罪过(doge)。准备睡了，明天白天好好复习专业课，下课学点儿技术，晚自习备考. &nbsp; 周二（6.4）慢慢儿起步了。下午下课回来忙了一会儿，然后学了伪造Referer绕开防盗链盗图，到现在。去吃晚饭了，晚点儿没饭吃了。吃完饭去上晚自习，复习物理吧。今天老天爷给我开了个玩笑. 明天早八离散，根本不会，上课不能睡觉，睡了睡了，下班儿~ &nbsp; 周三（6.5）一天天的过得真快 校选修课交完作业，又水了一节课。课间，下着雨，乘公交车回来了.不知道第几次提醒自己，“谦逊谦逊谦逊”。只是经常想东想西，胡思乱想地想，和才华没啥关系，顶多说是心思细腻，哈，说出来自己都笑了。人性面前，主观的意志就有些相形见绌了。美丽的事物给人的感觉不同，个人魅力也很迷人。八十亿芸芸众生之一。 把剩的离散写完去学http了，睡前应该能选完。学完开新知识点，不错不错。听完这首歌吧。 还剩个 分快传输与反向Ajax，明天拿下开新的。博观而约取 &nbsp; 周四（6.6）HTTP协议学完了 还挺喜欢十八哥的 可惜去炒币了 都是混口饭吃 人各有志 没办法接着学网络的知识，前置知识学完了再学个HTML，前端入个门，看看能不能再浅浅实战一下，考虑一下感不感兴趣。然后去了解一下运维吧，也先浅浅入个门 &nbsp; 周六（6.8）守舍 一个人也还清净打算晚上慢跑 养成个新习惯 也能锻炼身体下午2点接着去学高数 1点上床睡午觉 现在就学点儿东西吧 感觉这样字典式的学习入门太慢了 还是直接找个上来就教我怎么敲代码的视频学学吧 毕竟现在只是想入个门 了解一下各个方向 今天还算是开了个好头吧准备睡了 &nbsp; 周日（6.9）睡到接近9点 一个人也挺爽网上没有离散的速成课 就算是讲离散的课也很少 真题也不外放 只能参考做过的作业复习了 接着学学前端 浅浅入个门 学到 HTML 属性了HTML 还剩个 表单 明天学完吧明天复习大物 六级也快考了 还得定时刷套真题 写写作文和翻译 今天早点儿睡 对了，江苏的高考好像考完了，不是到他们考的怎么样 &nbsp; 3rd周一（6.10）HTML 简答了解了一下差不多睡觉去了 下午接着去复习大物端午节没吃上粽子 嗨 应该会是一个影响深刻的端午节——高考完的第一天+没吃上粽子睡了 周二（6.11）备考期末为重 有时间学就学会儿 没时间就算了计划跟不上变化 去复习大物了 晚上没时间了 &nbsp; 4th周六（6.22）考完试了 身心俱疲 但还是睡得很浅 6点半就被室友的鼾声吵醒了这两天一直在下雨 洗的衣服不知何时能干 出行也不方便 操场也是湿的 本来是打算玩儿《Alan Wake》来着，昨天刚下好，但是昨晚睡前，朋友拉着我去自习，还以为他受啥刺激了，原来是面过了，暑假要去实习，恶补一下 博观而约取still a long way to go 周日（6.23）昨天睡得有些晚，不过早上醒来一看手机快8点了，看到朋友发消息，问我去不去自习，包的，开个好头看看上午能不能把 CSS 看完，其实只是简单的入门，就是超级肤浅的语法，但是感觉还是自己敲一遍印象深刻点，知道有这么回事儿，以后现用现查 &nbsp; 5th周二（6.25）专业认知实践挺水的，比较轻松下周开始有课设，抽到的是超市管理系统，经典题目啦 暑假是个不错的机会，了解一下各个方向，权衡一下，选定一个方向，先学点儿东西别着急 慢慢儿来 至少没走下坡路 周四（6.27）其实昨天下午是想再学会儿来着 但是搞了一下歌单 浅拖了一下 然后就开始铲了 晚饭后就开始打《战神4》了生理意义上的习惯化或许是成长的一部分 但是从另一种意义说 不也是顿感与麻木么但行好事 莫问前程但行好事 莫问前程 周五（6.28）“想要爱一个人奋不顾身 无条件付出可能有点难你开始小心翼翼的喜欢 不愿再起波澜 你害怕自己太多的改变 难免心生眷恋你害怕自己太多的改变 却醒悟的太晚”—— 《夜长梦多》词&#x2F;曲&#x2F;唱 李上安 昨晚睡得挺不错的 日常两公里之后很舒服看到过一种说法，说是成年人只筛选不改变种花栽草 但行好事 下班儿 吃个午饭 今天把前端收个尾 进阶的话就学一下 Vue.js 或者 微信小程序 了，有机会学一下自己开发一个 先博观吧 接着后端开发 or 运维先运维吧 后端开发 好歹专业课学了 C++ ，多少是有些底子的，语言语言都是相同的，而且以后好像也要学 Java 来着运维方向比较陌生，去了解以下 Linux操作系统，Python，检测工具，容器化和编排啥的上午把专业认知实践的报告搞了一下，下周还有课设，课设提起搞一下吧，要不然就直接了解以下运维 周六（6.29）这两天在下雨 没法儿跑步了月底了 下周有课设过两周还打算去白嫖一下人脸识别支付的项目 多学点儿问题不大 时间还早到现在才看到安装Linux 笑了 前置这么多有的没的下班儿 午饭 有机会再学会儿吧 周日（6.30）现在已经是10:14了，还能学2h左右睡爽了 下班儿下班儿 总算熬到 Linux 了","content":"<h2 id=\"2nd\"><a href=\"#2nd\" class=\"headerlink\" title=\"2nd\"></a>2nd</h2><h3 id=\"周一（6-3）\"><a href=\"#周一（6-3）\" class=\"headerlink\" title=\"周一（6.3）\"></a>周一（6.3）</h3><p>实践证明，精力是一定的，不仅意味着是有限的，同时意味着总要花在什么地方。<br>课下时间全部用来复习备考现在看来显然不现实，因为那是靠自制力撑着，而慢慢发现自己远没有自己想象中那么强大，所以学着学着就学不动了。<br>那剩下的时间用来干啥呢？如果不学东西的话，可能自制力尚存可能会去看看电视剧，不会选择开一个新游戏(毕竟两周就要考试了)，但是三国也不总是能吸引我，更多的是抱着“一半儿都看完了”的想法，初衷应该是积累谈资。但是看着看着不想看了，那去干啥呢？大概率是不会去看书的，因为书也是本着“提升自身”的想法挑选和阅读的，买的几本不像爽文，没那么吸引我。那就无所事事了呗，好了，现在可能会想着找找感官的刺激了，事后再感慨一下“生理效应真强大”，以及“其实欲望也没这么强烈，只是无所事事罢了”。<br>所以，还是重新捡起来好了，也别等着考完试了，不耽误的。相反，学点儿东西自以为有所得的正反馈会使阁下的状态不错，那两周差不多就是这样的。<br>因为精力是一定的，所以，戒除一种习惯比较好的方式可能不是自己跟自己过不去，用意志力控制自己，因为意志力不会总像开始时那么强大，今天身体不舒服或者心情不太好之类的生理或心理方面的因素都会影响状态，到那时候可能就要就范了。因此，比较好的方式可能是，用养成另一种习惯来替换原来的习惯。这个新的习惯要具备以下特征：能带来正向反馈、难点儿的蹦蹦也能够着、可持续等，最理想的当然时喜欢了，热爱可抵岁月漫长，越来越以为然。</p>\n<p>既已名正言顺，就先睡会儿啦，下午还要课呢，下课还得回来学东西呢。</p>\n<p>对了，是有些怕被笑话的顾虑的，是指学的东西方面，一天就学这么一点儿，而且还都是皮毛，打卡好像是显得有些滑稽，但是如果这样或多或少能帮阁下走下去，何乐而不为呢。<br>但是确实效率有些低下了，想一字不落的记下来显然不现实，穷则思变。</p>\n<hr>\n<p>晚自习虽说效率不高，但好歹是学了三节课。顺流而下不要太容易，想再恢复原来的状态就要花点儿功夫了。慢慢儿来。<br>回宿舍洗漱了一下就续上下午的referer防盗链，学了一点儿，改善了一下记笔记的方式，重在理解的基础上总结，忌讳一字不差的copy。豆瓣的图片是有防盗的，随便找了一张，罪过罪过(doge)。<br>准备睡了，明天白天好好复习专业课，下课学点儿技术，晚自习备考.</p>\n<span id=\"more\"></span>\n<p>&nbsp;</p>\n<h3 id=\"周二（6-4）\"><a href=\"#周二（6-4）\" class=\"headerlink\" title=\"周二（6.4）\"></a>周二（6.4）</h3><p>慢慢儿起步了。<br>下午下课回来忙了一会儿，然后学了伪造Referer绕开防盗链盗图，到现在。<br>去吃晚饭了，晚点儿没饭吃了。吃完饭去上晚自习，复习物理吧。<br>今天老天爷给我开了个玩笑.<br><img src=\"/../images/060404.jpg\"></p>\n<p>明天早八离散，根本不会，上课不能睡觉，睡了睡了，下班儿~</p>\n<p>&nbsp;</p>\n<h3 id=\"周三（6-5）\"><a href=\"#周三（6-5）\" class=\"headerlink\" title=\"周三（6.5）\"></a>周三（6.5）</h3><p>一天天的过得真快</p>\n<p>校选修课交完作业，又水了一节课。课间，下着雨，乘公交车回来了.<br>不知道第几次提醒自己，“谦逊谦逊谦逊”。<br>只是经常想东想西，胡思乱想地想，和才华没啥关系，顶多说是心思细腻，哈，说出来自己都笑了。<br>人性面前，主观的意志就有些相形见绌了。美丽的事物给人的感觉不同，个人魅力也很迷人。<br>八十亿芸芸众生之一。</p>\n<p>把剩的离散写完去学http了，睡前应该能选完。学完开新知识点，不错不错。<br>听完这首歌吧。</p>\n<p>还剩个 分快传输与反向Ajax，明天拿下开新的。<br>博观而约取</p>\n<p>&nbsp;</p>\n<h3 id=\"周四（6-6）\"><a href=\"#周四（6-6）\" class=\"headerlink\" title=\"周四（6.6）\"></a>周四（6.6）</h3><p>HTTP协议学完了 还挺喜欢十八哥的 可惜去炒币了 都是混口饭吃 人各有志  没办法<br>接着学网络的知识，前置知识学完了再学个HTML，前端入个门，看看能不能再浅浅实战一下，考虑一下感不感兴趣。然后去了解一下运维吧，也先浅浅入个门</p>\n<p>&nbsp;</p>\n<h3 id=\"周六（6-8）\"><a href=\"#周六（6-8）\" class=\"headerlink\" title=\"周六（6.8）\"></a>周六（6.8）</h3><p>守舍 一个人也还清净<br>打算晚上慢跑 养成个新习惯 也能锻炼身体<br>下午2点接着去学高数 1点上床睡午觉 现在就学点儿东西吧</p>\n<p>感觉这样字典式的学习入门太慢了 还是直接找个上来就教我怎么敲代码的视频学学吧 毕竟现在只是想入个门 了解一下各个方向</p>\n<p>今天还算是开了个好头吧<br>准备睡了</p>\n<p>&nbsp;</p>\n<h3 id=\"周日（6-9）\"><a href=\"#周日（6-9）\" class=\"headerlink\" title=\"周日（6.9）\"></a>周日（6.9）</h3><p>睡到接近9点 一个人也挺爽<br>网上没有离散的速成课 就算是讲离散的课也很少 真题也不外放 只能参考做过的作业复习了</p>\n<p>接着学学前端 浅浅入个门 学到 HTML 属性了<br>HTML 还剩个 表单 明天学完吧<br>明天复习大物 六级也快考了 还得定时刷套真题 写写作文和翻译</p>\n<p>今天早点儿睡</p>\n<p>对了，江苏的高考好像考完了，不是到他们考的怎么样</p>\n<p>&nbsp;</p>\n<h2 id=\"3rd\"><a href=\"#3rd\" class=\"headerlink\" title=\"3rd\"></a>3rd</h2><h3 id=\"周一（6-10）\"><a href=\"#周一（6-10）\" class=\"headerlink\" title=\"周一（6.10）\"></a>周一（6.10）</h3><p>HTML 简答了解了一下<br>差不多睡觉去了 下午接着去复习大物<br>端午节没吃上粽子 嗨 应该会是一个影响深刻的端午节——高考完的第一天+没吃上粽子<br>睡了</p>\n<h3 id=\"周二（6-11）\"><a href=\"#周二（6-11）\" class=\"headerlink\" title=\"周二（6.11）\"></a>周二（6.11）</h3><p>备考期末为重 有时间学就学会儿 没时间就算了<br>计划跟不上变化 去复习大物了 晚上没时间了</p>\n<p>&nbsp;</p>\n<h2 id=\"4th\"><a href=\"#4th\" class=\"headerlink\" title=\"4th\"></a>4th</h2><h3 id=\"周六（6-22）\"><a href=\"#周六（6-22）\" class=\"headerlink\" title=\"周六（6.22）\"></a>周六（6.22）</h3><p>考完试了 身心俱疲 但还是睡得很浅 6点半就被室友的鼾声吵醒了<br>这两天一直在下雨 洗的衣服不知何时能干 出行也不方便 操场也是湿的</p>\n<p>本来是打算玩儿《Alan Wake》来着，昨天刚下好，但是昨晚睡前，朋友拉着我去自习，还以为他受啥刺激了，原来是面过了，暑假要去实习，恶补一下</p>\n<p>博观而约取<br>still a long way to go</p>\n<h3 id=\"周日（6-23）\"><a href=\"#周日（6-23）\" class=\"headerlink\" title=\"周日（6.23）\"></a>周日（6.23）</h3><p>昨天睡得有些晚，不过早上醒来一看手机快8点了，看到朋友发消息，问我去不去自习，包的，开个好头<br>看看上午能不能把 CSS 看完，其实只是简单的入门，就是超级肤浅的语法，但是感觉还是自己敲一遍印象深刻点，知道有这么回事儿，以后现用现查</p>\n<p>&nbsp;</p>\n<h2 id=\"5th\"><a href=\"#5th\" class=\"headerlink\" title=\"5th\"></a>5th</h2><h3 id=\"周二（6-25）\"><a href=\"#周二（6-25）\" class=\"headerlink\" title=\"周二（6.25）\"></a>周二（6.25）</h3><p>专业认知实践挺水的，比较轻松<br>下周开始有课设，抽到的是超市管理系统，经典题目啦</p>\n<p>暑假是个不错的机会，了解一下各个方向，权衡一下，选定一个方向，先学点儿东西<br>别着急 慢慢儿来 至少没走下坡路</p>\n<h3 id=\"周四（6-27）\"><a href=\"#周四（6-27）\" class=\"headerlink\" title=\"周四（6.27）\"></a>周四（6.27）</h3><p>其实昨天下午是想再学会儿来着 但是搞了一下歌单 浅拖了一下 然后就开始铲了 晚饭后就开始打《战神4》了<br>生理意义上的习惯化或许是成长的一部分 但是从另一种意义说 不也是顿感与麻木么<br>但行好事 莫问前程<br>但行好事 莫问前程</p>\n<h3 id=\"周五（6-28）\"><a href=\"#周五（6-28）\" class=\"headerlink\" title=\"周五（6.28）\"></a>周五（6.28）</h3><p>“<br>想要爱一个人奋不顾身 无条件付出可能有点难<br>你开始小心翼翼的喜欢 不愿再起波澜</p>\n<p>你害怕自己太多的改变 难免心生眷恋<br>你害怕自己太多的改变 却醒悟的太晚<br>”<br>—— 《夜长梦多》词&#x2F;曲&#x2F;唱 李上安</p>\n<p>昨晚睡得挺不错的 日常两公里之后很舒服<br>看到过一种说法，说是成年人只筛选不改变<br>种花栽草 但行好事</p>\n<p>下班儿 吃个午饭 今天把前端收个尾</p>\n<p>进阶的话就学一下 <strong>Vue.js</strong> 或者 <strong>微信小程序</strong> 了，有机会学一下自己开发一个</p>\n<p>先博观吧 接着<br>后端开发 or 运维<br>先运维吧 后端开发 好歹专业课学了 C++ ，多少是有些底子的，语言语言都是相同的，而且以后好像也要学 Java 来着<br>运维方向比较陌生，去了解以下 Linux操作系统，Python，检测工具，容器化和编排啥的<br>上午把专业认知实践的报告搞了一下，下周还有课设，课设提起搞一下吧，要不然就直接了解以下运维</p>\n<h3 id=\"周六（6-29）\"><a href=\"#周六（6-29）\" class=\"headerlink\" title=\"周六（6.29）\"></a>周六（6.29）</h3><p>这两天在下雨 没法儿跑步了<br>月底了 下周有课设<br>过两周还打算去白嫖一下人脸识别支付的项目 多学点儿问题不大 时间还早<br>到现在才看到安装Linux 笑了 前置这么多有的没的<br>下班儿 午饭 有机会再学会儿吧</p>\n<h3 id=\"周日（6-30）\"><a href=\"#周日（6-30）\" class=\"headerlink\" title=\"周日（6.30）\"></a>周日（6.30）</h3><p>现在已经是10:14了，还能学2h左右<br>睡爽了</p>\n<p>下班儿下班儿 总算熬到 Linux 了</p>\n<hr>\n","categories":[{"name":"打卡","slug":"打卡","permalink":"http://example.com/categories/%E6%89%93%E5%8D%A1/"}],"tags":[]},{"title":"5月","date":"2024-05-28T14:52:04.000Z","path":"2024/05/28/2405/","text":"1st周一（5.27）周一到周五都有课。17周考试，这都14周了，离散、大物、高数都挺慌的。还快要考CET-6了，晚自习都在刷6级真题，回来随便学学就快到点儿了.本来是想22:30就下班儿的，因为这两天的睡觉质量都不太好，老做梦，昨天还梦到我亲眼看到一个哥们儿摔s了，我要不是抓住布缓冲一下也要g，难绷。 很多内容之前都没接触过，就比如说php，但是遇到了再去补一下，这样效率可能更高些，反倒是先系统的学会很低效，边用边查边学可能更好些. md 已经熄灯了 下了下了 希望一夜无梦 周二（5.28）PHP + socket编码 发送 HTTP请求，写的差不多了，明天拿下 昨天好像没做梦 不错不错下了考试月 忙忙忙话说马上要高考了来着 周三（5.29）socket编码发送POST请求基本上算搞好了 还是有点儿小问题现在都用HTTPS协议了 用HTTP协议的网站还真不太好找 今天下午参加了个活动，白嫖了个书签，不错不错首先是几个小活动，拼拼图、写心愿、给喜欢的主题画投票，最后白嫖了一个书签 “诸葛亮多智而进妖”，诚不欺我 考试月，要开始复习了，技术的学习得放一放了 周四（5.30）今天下雨了，坐了公交车，还挺快的其实 今天午觉睡得也不太好，感觉脑子懵懵的，把校选修课的作业敲完了，感觉脑子转的有点儿慢 钱权名“贪夫殉财兮，烈士殉名。夸者死权兮，品庶每生” 。贪婪的人为了财富而死，有志节的人为了名声而死。追求权势的人最终会因权力而死，而普通人则能安享天年。人生在世，大多数人穷其一生所追求的，好像不外乎钱、权、名。太史公在《史记·货殖列传》里写道，“天下熙熙，皆为利来；天下攘攘，皆为利往 “。人们的大部分行为和活动都是出于对利益的追求，人类社会活动中普遍存在的利益驱动现象。当然也反映了人们对于生存和发展的基本需求，以及社会经济发展的动力 。在社会主义价值观中，虽然强调集体利益和社会公平，但也不否认个人在合法合规的前提下追求正当利益的合理性。所谓“君子爱财，取之有道”，此之谓也。《Game of Thrones》中有“Power resides where men believe it resides.”，翻译一下，就是“权力在于人心所向”。权力并不固定存在于某个位置或某个人，而是存在于人们对权力的共同信念和认可中。在《权力的游戏》这个虚构的世界中，这句话体现了权力的动态性和相对性。权力不是绝对的或固化的，而是由人们的信念、恐惧、尊重和服从所支撑。如果人们不再相信某个权力机构或个人拥有权力，那么这个权力就会消失。相反，如果人们普遍认可某个个体或组织的权威，那么这个个体或组织就会拥有权力。习近平总书记在党史学习教育动员大会上也指出：“历史充分证明，江山就是人民，人民就是江山，人心向背关系党的生死存亡。”或许，这才是真理。想起了暑假里读到的米兰昆德拉的《不朽》，人为了在世界上留下痕迹、为了“不朽”而奔走着。“名”，既可以是人们追求的目标，也可以是人们被束缚的枷锁。一方面，它可以给予人一种超越死亡的幻觉，使人们相信自己可以通过名声在历史中永生；另一方面，名声也是一种虚荣，它可能导致个人的自我迷失和真实生活的丧失。但最重要的是，死后万事空与否谁能说清呢，如果死后万事皆空，那以“不朽“为目的苦苦追求在生前或许还有些用的“名“，就显得很可笑了。“了却君王天下事，赢得生前身后名。”古人好像不少都追求气节、名声，所谓“留名青史“、“遗臭万年”、“后人自有评说“，对于那些为气节而死的行为，我向来是报以敬畏的态度，因为还不能完全理解；再者就是入朝为官，经世济民，所谓”万般皆下品，唯有读书高“，而寒窗苦读十载不过是为了进入仕途；至于钱，似乎总和俗挂钩，体面人是不好直言的。古代”四民“的等级制度，士人处在顶端，商人似乎为人所不齿，与今天似乎有很大的不同。我以为，实践是检验真理的唯一标准，如果没追求并得到一样东西，总会有执念。至于得到之后是感慨不过如此、自嘲误入歧途，还是内心满足充盈又是另一说了。我们大多数人对钱、权、名没有这么大的执念，或许只是因为没得到，也就不会碰到考验与抉择了。就是说，或许我们没自己想象中的清心寡欲，只是碰巧没轮到我们罢了，因而“品庶每生“。总之，原则之内，追求钱、权、名无可厚非，个人的选择罢了。对于人生的意义，众说纷纭，无所谓对错，但“有限的时间内尽可能的体验“或许能作为一个解。 这两天状态都不太好，昨天下午、今天下午，心情都不太好，可以是身体不太舒服，加上快考试了心里没底有些焦虑，今天晚上种种原因吧，复习的不太顺利，但也算是开始了吧，明天要好好复习了一个月，总有一两天状态欠佳，一直从容倒不切实际，睡了睡了","content":"<h2 id=\"1st\"><a href=\"#1st\" class=\"headerlink\" title=\"1st\"></a>1st</h2><h3 id=\"周一（5-27）\"><a href=\"#周一（5-27）\" class=\"headerlink\" title=\"周一（5.27）\"></a>周一（5.27）</h3><p>周一到周五都有课。17周考试，这都14周了，离散、大物、高数都挺慌的。还快要考CET-6了，晚自习都在刷6级真题，回来随便学学就快到点儿了.<br>本来是想22:30就下班儿的，因为这两天的睡觉质量都不太好，老做梦，昨天还梦到我亲眼看到一个哥们儿摔s了，我要不是抓住布缓冲一下也要g，难绷。</p>\n<p>很多内容之前都没接触过，就比如说php，但是遇到了再去补一下，这样效率可能更高些，反倒是先系统的学会很低效，边用边查边学可能更好些.<br><img src=\"/../images/0527.png\" alt=\"0527\"></p>\n<p>md 已经熄灯了 下了下了 希望一夜无梦</p>\n<span id=\"more\"></span>\n<h3 id=\"周二（5-28）\"><a href=\"#周二（5-28）\" class=\"headerlink\" title=\"周二（5.28）\"></a>周二（5.28）</h3><p>PHP + socket编码 发送 HTTP请求，写的差不多了，明天拿下<br><img src=\"/../images/0528.png\" alt=\"0528\"></p>\n<p>昨天好像没做梦 不错不错<br>下了<br>考试月 忙忙忙<br>话说马上要高考了来着 </p>\n<h3 id=\"周三（5-29）\"><a href=\"#周三（5-29）\" class=\"headerlink\" title=\"周三（5.29）\"></a>周三（5.29）</h3><p>socket编码发送POST请求基本上算搞好了 还是有点儿小问题<br>现在都用HTTPS协议了 用HTTP协议的网站还真不太好找</p>\n<p>今天下午参加了个活动，白嫖了个书签，不错不错<br>首先是几个小活动，拼拼图、写心愿、给喜欢的主题画投票，最后白嫖了一个书签<br><img src=\"/../images/052901.jpg\"><br><img src=\"/../images/052902.jpg\"><br><img src=\"/../images/052903.jpg\"><br><img src=\"/../images/052904.jpg\"><br><img src=\"/../images/052905.jpg\"></p>\n<p>“诸葛亮多智而进妖”，诚不欺我<br><img src=\"/../images/052906.jpg\"></p>\n<p>考试月，要开始复习了，技术的学习得放一放了</p>\n<h3 id=\"周四（5-30）\"><a href=\"#周四（5-30）\" class=\"headerlink\" title=\"周四（5.30）\"></a>周四（5.30）</h3><p>今天下雨了，坐了公交车，还挺快的其实</p>\n<p>今天午觉睡得也不太好，感觉脑子懵懵的，把校选修课的作业敲完了，感觉脑子转的有点儿慢</p>\n<blockquote>\n<p>钱权名<br>“贪夫殉财兮，烈士殉名。夸者死权兮，品庶每生” 。贪婪的人为了财富而死，有志节的人为了名声而死。追求权势的人最终会因权力而死，而普通人则能安享天年。<br>人生在世，大多数人穷其一生所追求的，好像不外乎钱、权、名。<br>太史公在《史记·货殖列传》里写道，“天下熙熙，皆为利来；天下攘攘，皆为利往 “。人们的大部分行为和活动都是出于对利益的追求，人类社会活动中普遍存在的利益驱动现象。当然也反映了人们对于生存和发展的基本需求，以及社会经济发展的动力 。在社会主义价值观中，虽然强调集体利益和社会公平，但也不否认个人在合法合规的前提下追求正当利益的合理性。所谓“君子爱财，取之有道”，此之谓也。<br>《Game of Thrones》中有“Power resides where men believe it resides.”，翻译一下，就是“权力在于人心所向”。权力并不固定存在于某个位置或某个人，而是存在于人们对权力的共同信念和认可中。在《权力的游戏》这个虚构的世界中，这句话体现了权力的动态性和相对性。权力不是绝对的或固化的，而是由人们的信念、恐惧、尊重和服从所支撑。如果人们不再相信某个权力机构或个人拥有权力，那么这个权力就会消失。相反，如果人们普遍认可某个个体或组织的权威，那么这个个体或组织就会拥有权力。习近平总书记在党史学习教育动员大会上也指出：“历史充分证明，江山就是人民，人民就是江山，人心向背关系党的生死存亡。”或许，这才是真理。<br>想起了暑假里读到的米兰昆德拉的《不朽》，人为了在世界上留下痕迹、为了“不朽”而奔走着。“名”，既可以是人们追求的目标，也可以是人们被束缚的枷锁。一方面，它可以给予人一种超越死亡的幻觉，使人们相信自己可以通过名声在历史中永生；另一方面，名声也是一种虚荣，它可能导致个人的自我迷失和真实生活的丧失。但最重要的是，死后万事空与否谁能说清呢，如果死后万事皆空，那以“不朽“为目的苦苦追求在生前或许还有些用的“名“，就显得很可笑了。<br>“了却君王天下事，赢得生前身后名。”古人好像不少都追求气节、名声，所谓“留名青史“、“遗臭万年”、“后人自有评说“，对于那些为气节而死的行为，我向来是报以敬畏的态度，因为还不能完全理解；再者就是入朝为官，经世济民，所谓”万般皆下品，唯有读书高“，而寒窗苦读十载不过是为了进入仕途；至于钱，似乎总和俗挂钩，体面人是不好直言的。古代”四民“的等级制度，士人处在顶端，商人似乎为人所不齿，与今天似乎有很大的不同。<br>我以为，实践是检验真理的唯一标准，如果没追求并得到一样东西，总会有执念。至于得到之后是感慨不过如此、自嘲误入歧途，还是内心满足充盈又是另一说了。我们大多数人对钱、权、名没有这么大的执念，或许只是因为没得到，也就不会碰到考验与抉择了。就是说，或许我们没自己想象中的清心寡欲，只是碰巧没轮到我们罢了，因而“品庶每生“。<br>总之，原则之内，追求钱、权、名无可厚非，个人的选择罢了。对于人生的意义，众说纷纭，无所谓对错，但“有限的时间内尽可能的体验“或许能作为一个解。</p>\n</blockquote>\n<p>这两天状态都不太好，昨天下午、今天下午，心情都不太好，可以是身体不太舒服，加上快考试了心里没底有些焦虑，今天晚上种种原因吧，复习的不太顺利，但也算是开始了吧，明天要好好复习了<br>一个月，总有一两天状态欠佳，一直从容倒不切实际，睡了睡了</p>\n<hr>\n","categories":[{"name":"打卡","slug":"打卡","permalink":"http://example.com/categories/%E6%89%93%E5%8D%A1/"}],"tags":[]},{"title":"看个晚会放松一下","date":"2024-05-24T16:00:00.000Z","path":"2024/05/25/SuiBi01/","text":"时间有限，水一篇随笔，这两天睡得都挺晚的，这可不成。 这次是这个动漫社18年周年庆的晚会，感觉蛮不错的，会感觉说，活着真好，能体验很多没体验过的东西。 现场的氛围超顶，看着哥哥们这么crazy，果然我还不是一个合格的二次元，尤其是接触到之前不知道的东西。比如说 “宅舞” 和 “Wota艺”. 宅舞： ACGN文化有关的舞蹈活动，是一个仅在中国大陆地区使用的名词，，一般用来指代使用了与ACGN文化有关的音乐作为伴奏所编排的舞蹈作品或舞蹈活动。 Wota艺： 荧光棒舞蹈、观众应援方式。 放几张图 比较遗憾的是，正好旁边的操场有校园十佳歌手的决赛来着，也挺想看的，但是两个是同时举办的，最终还是选择去看晚会了，等到晚会临近结束的时候，十佳歌手的比赛也接近尾声了。而且去的比较晚，也没混上晚会的票，没留个纪念品，也没参与抽奖，不过遗憾可能印象更深一些","content":"<p>时间有限，水一篇随笔，这两天睡得都挺晚的，这可不成。</p>\n<p>这次是这个动漫社18年周年庆的晚会，感觉蛮不错的，会感觉说，活着真好，能体验很多没体验过的东西。</p>\n<p>现场的氛围超顶，看着哥哥们这么crazy，果然我还不是一个合格的二次元，尤其是接触到之前不知道的东西。比如说 <strong>“宅舞”</strong> 和 <strong>“Wota艺”</strong>.</p>\n<blockquote>\n<p><strong>宅舞：</strong> ACGN文化有关的舞蹈活动，是一个仅在中国大陆地区使用的名词，，一般用来指代使用了与ACGN文化有关的音乐作为伴奏所编排的舞蹈作品或舞蹈活动。</p>\n<p><strong>Wota艺：</strong> 荧光棒舞蹈、观众应援方式。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>放几张图<br><img src=\"/../images/B6995FC7A34AD001FD093FF7C23CB163.jpg\"><br><img src=\"/../images/BC398C21FA20F2B4FA8DB04DED40E853.jpg\"><br><img src=\"/../images/B0E4F5FE88445377A1517D71436D57CB.jpg\"></p>\n<p>比较遗憾的是，正好旁边的操场有校园十佳歌手的决赛来着，也挺想看的，但是两个是同时举办的，最终还是选择去看晚会了，等到晚会临近结束的时候，十佳歌手的比赛也接近尾声了。而且去的比较晚，也没混上晚会的票，没留个纪念品，也没参与抽奖，不过遗憾可能印象更深一些<br><img src=\"/../images/6C9E10EEDA8F3D633B524EF77DFFA71E.jpg\"></p>\n","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"Hexo Blog Update Log","date":"2024-05-24T14:55:44.000Z","path":"2024/05/24/Hexo-Blog-Update-Log/","text":"5月 5.23 创建blog并使用 Yilia 主题，可以通过 https://aj3230.github.io/ 实现远端访问访问 5.24 在 blog\\source 目录下创建了 images 文件夹，用于存储markdown里插入的图片(通过相对路径实现) 安装 hexo-auto-excerpt 插件，为 Yilia 主题添加自动摘要功能 创建了 “Hexo-Blog-Updata-log” ，以记录博客更新日志 5.25 更新了 “HTTP协议“博客 安装 Hexo 的一个插件 hexo-generator-json-content，并将其添加到博客项目的依赖列表中.并在 Hexo 的配置文件 _config.yml 中添加一个 jsonContent 部分配置该插件，以在博客中生成 JSON 内容，实现 标签、日期、索引 等功能。 在 Yilia 的配置文件里 _config.yml 更改了 “随笔” 链接的指向位置，实现快速跳转到所有”随笔”标签的博客。 创建了 “看个晚会放松一下” 随笔 5.26 更新了 “HTTP协议“ 博客 重命名 blog\\source\\images 中的图片，便于管理 更新了博客的 头像 “友情链接” 子导航链接 “关于我” 引入 Gitment，实现 评论 功能， 出现bug，取消了评论功能 上传了 Markdown语法、 Windows指令 两篇博客 规范博客的 title date tags 格式 5.27 更新了 “HTTP协议“ 博客 创建 “好忙呀“ 随笔 添加了 “更新日志“ 标签 (待完善 应该直接跳转进去) 5.28 更新了 “HTTP协议“ 博客 创建 “第1周“ 打卡 把 5.27创建的 “好忙呀“ 随笔 合并到 “第1周“ 打卡 5.29 更新 “HTTP协议“ 博客 更新 “第1周“ 打卡 5.30 更新 “第1周“ 打卡 &nbsp; &nbsp; 6月 6.3 创建 “第2周“ 打卡 更新 “HTTP协议“ 博客 6.4 更新 “HTTP协议“ 博客 更新 “第2周“ 打卡 6.5 更新 “HTTP协议“ 博客 更新 “第2周“ 打卡 6.6 更新 “HTTP协议“ 博客 更新 “第2周“ 打卡 创建 “浏览器及工作原理“ 打卡 6.8 更新 “浏览器及工作原理“ 打卡 更新 “第2周“ 打卡 创建 “前端入门“ 博客 6.9 更新 “前端入门“ 博客 更新 “第2周“ 打卡 6.10 更新 “前端入门“ 博客 创建 “第3周“ 打卡 6.11 更新 “前端入门“ 博客 更新 “第3周“ 打卡 6.22 创建 “第4周“ 打卡 更新 “前端入门“ 博客 6.23 更新 “第4周“ 打卡 更新 “前端入门“ 博客 6.25 创建 “第5周“ 打卡 更新 “前端入门“ 博客 6.27 合并 “1st“打卡 “2ndt“打卡 “3rd“打卡 “4th“打卡 “5th“打卡 为 “打卡“打卡 删除 “1st“打卡 “2ndt“打卡 “3rd“打卡 “4th“打卡 “5th“打卡 “测试“测试 更新 “Hello World“ 博客 更新 “前端入门“ 博客 6.28 更新 “打卡“ 打卡 更新 “前端入门“ 博客 创建 “Lunix“ 博客 6.29 更新 “打卡“ 打卡 更新 “Lunix“ 博客 6.30 更新 “打卡“ 打卡 更新 “Lunix“ 博客 &nbsp; &nbsp; 7月 7.2 更新 “打卡“ 打卡 更新 “Lunix“ 博客 7.3 更新 “打卡“ 打卡 增加 “打卡“ 标签 更新 “Lunix“ 博客 7.4 更新 “打卡“ 打卡 更新 “Lunix“ 博客 7.5 更新 “打卡“ 打卡 更新 “Lunix“ 博客 7.6 更新 “打卡“ 打卡 更新 “Lunix“ 博客 7.7 更新 “打卡“ 打卡 更新 “Lunix“ 博客 拆分 “打卡“ 打卡 7.9 更新 “7月“ 打卡 更新 “Lunix“ 博客 7.11 更新 “7月“ 打卡 更新 “Lunix“ 博客 创建 “Python“ 博客 7.12 更新 “7月“ 打卡 更新 “Lunix“ 博客 7.13 更新 “7月“ 打卡 7.14 更新 “7月“ 打卡 更新 “Python“ 博客 7.15 更新 “7月“ 打卡 更新 “Python“ 博客 7.16 更新 “7月“ 打卡 更新 “Python“ 博客 创建 “人脸识别智慧支付系统“ 博客 7.17 更新 “7月“ 打卡 更新 “人脸识别智慧支付系统“ 博客 7.18 更新 “7月“ 打卡 更新 “人脸识别智慧支付系统“ 博客 7.20 更新 “7月“ 打卡 更新 “Python“ 博客 更新 “Lunix“ 博客 7.21 更新 “7月“ 打卡 更新 “Lunix“ 博客","content":"<h1 id=\"5月\"><a href=\"#5月\" class=\"headerlink\" title=\"5月\"></a>5月</h1><blockquote>\n<h2 id=\"5-23\"><a href=\"#5-23\" class=\"headerlink\" title=\"5.23\"></a>5.23</h2><ol>\n<li>创建blog并使用 <strong>Yilia</strong> 主题，可以通过 <a href=\"https://aj3230.github.io/\">https://aj3230.github.io/</a> 实现远端访问访问</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-24\"><a href=\"#5-24\" class=\"headerlink\" title=\"5.24\"></a>5.24</h2><ol>\n<li>在 blog\\source 目录下创建了 <strong>images</strong> 文件夹，用于存储markdown里插入的<strong>图片</strong>(通过相对路径实现)</li>\n<li>安装 <strong>hexo-auto-excerpt</strong> 插件，为 Yilia 主题添加<strong>自动摘要</strong>功能</li>\n<li>创建了 <strong>“Hexo-Blog-Updata-log”</strong> ，以记录<strong>博客更新日志</strong></li>\n</ol>\n</blockquote>\n<span id=\"more\"></span>\n\n<blockquote>\n<h2 id=\"5-25\"><a href=\"#5-25\" class=\"headerlink\" title=\"5.25\"></a>5.25</h2><ol>\n<li>更新了 “<strong>HTTP协议</strong>“博客</li>\n<li>安装 Hexo 的一个插件 <strong>hexo-generator-json-content</strong>，并将其添加到博客项目的依赖列表中.并在 Hexo 的配置文件 <strong>_config.yml</strong> 中添加一个 <strong>jsonContent</strong> 部分配置该插件，以在博客中生成 JSON 内容，实现 <strong>标签、日期、索引</strong> 等功能。</li>\n<li>在 <strong>Yilia</strong> 的配置文件里 <strong>_config.yml</strong> 更改了 <strong>“随笔”</strong> 链接的指向位置，实现快速跳转到所有”随笔”标签的博客。</li>\n<li>创建了 <strong>“看个晚会放松一下”</strong> <strong>随笔</strong></li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-26\"><a href=\"#5-26\" class=\"headerlink\" title=\"5.26\"></a>5.26</h2><ol>\n<li>更新了 “<strong>HTTP协议</strong>“ 博客</li>\n<li>重命名 <strong>blog\\source\\images</strong> 中的图片，便于管理</li>\n<li>更新了博客的 <strong>头像</strong> <strong>“友情链接”</strong> <strong>子导航链接</strong> <strong>“关于我”</strong></li>\n<li>引入 <strong>Gitment</strong>，实现 <strong>评论</strong> 功能， 出现bug，取消了评论功能</li>\n<li>上传了 <strong>Markdown语法、</strong> <strong>Windows指令</strong> 两篇博客</li>\n<li>规范博客的 <strong>title</strong> <strong>date</strong> <strong>tags</strong> 格式</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-27\"><a href=\"#5-27\" class=\"headerlink\" title=\"5.27\"></a>5.27</h2><ol>\n<li>更新了 “<strong>HTTP协议</strong>“ 博客</li>\n<li>创建 “<strong>好忙呀</strong>“ 随笔</li>\n<li>添加了 “<strong>更新日志</strong>“ 标签 (待完善 应该直接跳转进去)</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-28\"><a href=\"#5-28\" class=\"headerlink\" title=\"5.28\"></a>5.28</h2><ol>\n<li>更新了 “<strong>HTTP协议</strong>“ 博客</li>\n<li>创建 “<strong>第1周</strong>“ 打卡</li>\n<li>把 5.27创建的 “<strong>好忙呀</strong>“ 随笔 合并到 “<strong>第1周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-29\"><a href=\"#5-29\" class=\"headerlink\" title=\"5.29\"></a>5.29</h2><ol>\n<li>更新 “<strong>HTTP协议</strong>“ 博客</li>\n<li>更新 “<strong>第1周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-30\"><a href=\"#5-30\" class=\"headerlink\" title=\"5.30\"></a>5.30</h2><ol>\n<li>更新 “<strong>第1周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<p>&nbsp;</p>\n<hr>\n<p>&nbsp;</p>\n<h1 id=\"6月\"><a href=\"#6月\" class=\"headerlink\" title=\"6月\"></a>6月</h1><blockquote>\n<h2 id=\"6-3\"><a href=\"#6-3\" class=\"headerlink\" title=\"6.3\"></a>6.3</h2><ol>\n<li>创建 “<strong>第2周</strong>“ 打卡</li>\n<li>更新 “<strong>HTTP协议</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-4\"><a href=\"#6-4\" class=\"headerlink\" title=\"6.4\"></a>6.4</h2><ol>\n<li>更新 “<strong>HTTP协议</strong>“ 博客</li>\n<li>更新 “<strong>第2周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-5\"><a href=\"#6-5\" class=\"headerlink\" title=\"6.5\"></a>6.5</h2><ol>\n<li>更新 “<strong>HTTP协议</strong>“ 博客</li>\n<li>更新 “<strong>第2周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-6\"><a href=\"#6-6\" class=\"headerlink\" title=\"6.6\"></a>6.6</h2><ol>\n<li>更新 “<strong>HTTP协议</strong>“ 博客</li>\n<li>更新 “<strong>第2周</strong>“ 打卡</li>\n<li>创建 “<strong>浏览器及工作原理</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-8\"><a href=\"#6-8\" class=\"headerlink\" title=\"6.8\"></a>6.8</h2><ol>\n<li>更新 “<strong>浏览器及工作原理</strong>“ 打卡</li>\n<li>更新 “<strong>第2周</strong>“ 打卡</li>\n<li>创建 “<strong>前端入门</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-9\"><a href=\"#6-9\" class=\"headerlink\" title=\"6.9\"></a>6.9</h2><ol>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n<li>更新 “<strong>第2周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-10\"><a href=\"#6-10\" class=\"headerlink\" title=\"6.10\"></a>6.10</h2><ol>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n<li>创建 “<strong>第3周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-11\"><a href=\"#6-11\" class=\"headerlink\" title=\"6.11\"></a>6.11</h2><ol>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n<li>更新 “<strong>第3周</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-22\"><a href=\"#6-22\" class=\"headerlink\" title=\"6.22\"></a>6.22</h2><ol>\n<li>创建 “<strong>第4周</strong>“ 打卡</li>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-23\"><a href=\"#6-23\" class=\"headerlink\" title=\"6.23\"></a>6.23</h2><ol>\n<li>更新 “<strong>第4周</strong>“ 打卡</li>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-25\"><a href=\"#6-25\" class=\"headerlink\" title=\"6.25\"></a>6.25</h2><ol>\n<li>创建 “<strong>第5周</strong>“ 打卡</li>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-27\"><a href=\"#6-27\" class=\"headerlink\" title=\"6.27\"></a>6.27</h2><ol>\n<li>合并 “<strong>1st</strong>“打卡 “<strong>2ndt</strong>“打卡 “<strong>3rd</strong>“打卡 “<strong>4th</strong>“打卡 “<strong>5th</strong>“打卡 为 “<strong>打卡</strong>“打卡</li>\n<li>删除 “<strong>1st</strong>“打卡 “<strong>2ndt</strong>“打卡 “<strong>3rd</strong>“打卡 “<strong>4th</strong>“打卡 “<strong>5th</strong>“打卡 “<strong>测试</strong>“测试</li>\n<li>更新 “<strong>Hello World</strong>“ 博客</li>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-28\"><a href=\"#6-28\" class=\"headerlink\" title=\"6.28\"></a>6.28</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>前端入门</strong>“ 博客</li>\n<li>创建 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-29\"><a href=\"#6-29\" class=\"headerlink\" title=\"6.29\"></a>6.29</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"6-30\"><a href=\"#6-30\" class=\"headerlink\" title=\"6.30\"></a>6.30</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<p>&nbsp;</p>\n<hr>\n<p>&nbsp;</p>\n<h1 id=\"7月\"><a href=\"#7月\" class=\"headerlink\" title=\"7月\"></a>7月</h1><blockquote>\n<h2 id=\"7-2\"><a href=\"#7-2\" class=\"headerlink\" title=\"7.2\"></a>7.2</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-3\"><a href=\"#7-3\" class=\"headerlink\" title=\"7.3\"></a>7.3</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>增加 “<strong>打卡</strong>“ 标签</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-4\"><a href=\"#7-4\" class=\"headerlink\" title=\"7.4\"></a>7.4</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-5\"><a href=\"#7-5\" class=\"headerlink\" title=\"7.5\"></a>7.5</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-6\"><a href=\"#7-6\" class=\"headerlink\" title=\"7.6\"></a>7.6</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-7\"><a href=\"#7-7\" class=\"headerlink\" title=\"7.7\"></a>7.7</h2><ol>\n<li>更新 “<strong>打卡</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n<li>拆分 “<strong>打卡</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-9\"><a href=\"#7-9\" class=\"headerlink\" title=\"7.9\"></a>7.9</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-11\"><a href=\"#7-11\" class=\"headerlink\" title=\"7.11\"></a>7.11</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n<li>创建 “<strong>Python</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-12\"><a href=\"#7-12\" class=\"headerlink\" title=\"7.12\"></a>7.12</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-13\"><a href=\"#7-13\" class=\"headerlink\" title=\"7.13\"></a>7.13</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-14\"><a href=\"#7-14\" class=\"headerlink\" title=\"7.14\"></a>7.14</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Python</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-15\"><a href=\"#7-15\" class=\"headerlink\" title=\"7.15\"></a>7.15</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Python</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-16\"><a href=\"#7-16\" class=\"headerlink\" title=\"7.16\"></a>7.16</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Python</strong>“ 博客</li>\n<li>创建 “<strong>人脸识别智慧支付系统</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-17\"><a href=\"#7-17\" class=\"headerlink\" title=\"7.17\"></a>7.17</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>人脸识别智慧支付系统</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-18\"><a href=\"#7-18\" class=\"headerlink\" title=\"7.18\"></a>7.18</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>人脸识别智慧支付系统</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-20\"><a href=\"#7-20\" class=\"headerlink\" title=\"7.20\"></a>7.20</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Python</strong>“ 博客</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"7-21\"><a href=\"#7-21\" class=\"headerlink\" title=\"7.21\"></a>7.21</h2><ol>\n<li>更新 “<strong>7月</strong>“ 打卡</li>\n<li>更新 “<strong>Lunix</strong>“ 博客</li>\n</ol>\n</blockquote>\n","categories":[{"name":"更新日志","slug":"更新日志","permalink":"http://example.com/categories/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/"}],"tags":[]},{"title":"HTTP协议","date":"2024-05-23T13:18:34.000Z","path":"2024/05/23/HTTP-protocol/","text":"参考:https://www.bilibili.com/video/BV1js411g7Fw 5.23一、前言 重要性 webservice &#x3D; HTTP协议 + XML Rest &#x3D; HTTP协议 + ison 各种API一般也是用 HTTP协议 + XML&#x2F;json 来实现的 此外，做采集、小偷站，也需要对HTP协议有一定的了解；也有助于学习Ajax &nbsp; 二、索引 原理 形象理解原理 请求信息和响应信息的格式 请求方法 状态码 实战 PHP + socket编程 发送http请求 PHP 批量发帖 HTTP协议 防盗 优化 HTTP协议 与 缓存控制 HTTP协议 与 COOKIE 分块传输 与 反向Ajax 5.24 repostiry 仓库 三、原理 协议： 一式双份&#x2F;多份，双方&#x2F;多方都遵从的一个规范。 e.g. ftp http pop tcp&#x2F;ip HTTP协议： 客户端按照一定规则向服务器发送请求、索要数据，服务器按照一定规则响应请求、返回数据 5.25 config (计算机系统)配置 四、 HTTP请求信息和响应信息的格式 1)请求信息格式 请求行 (格式：请求方法 路径 协议) 请求方法 GET POST HEAD PUT DELETE TRACE OPTIONS 请求路径：URL的一部分 所用协议：目前一般是 “HTTP&#x2F;1.1“,0.9和1.0基本上已经不用 请求头信息 (格式：key value) 头信息结束后，和主体信息之间要空一行 请求主体信息 (可选) (发送内容) e.g.POST &#x2F;03.php HTTP&#x2F;1.1Host: localhostConten-type: application&#x2F;x-www-form-urlencodeContent-length: 24空行username&#x3D;zhangsan&amp;age&#x3D;18 &nbsp; 2)响应信息格式 响应行 (格式：请求方法 状态码 状态文字) 状态码： 反应服务器的响应情况 (e.g. 200 OK 404 NOT FOUND ) 状态码 定义 说明 1XX 信息 接收到请求，继续处理(HTTP预留待拓展) 2XX 成功 操作成功地收到，理解和接受 3XX 重定向 为了完成请求，必须采取进一步措施 4XX 客户端错误 请求的语法有错误或不能完全被满足。 5XX 服务器错误 服务器无法完成明显有效的请求。 状态文字: 描述状态码，便于人观察 响应头信息 (格式：key value) 头信息结束后，和主体信息之间要空一行 请求主体信息 (可选) 请求主体信息 (可选) (发送内容) e.g.HTTP&#x2F;1.1 OK 200Content-tyoe: text&#x2F;htmlContent-length: 5空行Hello&nbsp; 实操：(一) 前置工作 安装HTTP服务器 IIS (Internet Information Services) Windows的内置Web服务器 控制面板——程序——程序和功能——打开或关闭Windows功能——勾选”Internet Information Services“ 在windows操作系统上使用telnet指令 控制面板——程序——程序和功能——打开或关闭Windows功能——勾选”telnet client“ 搭建平台，在浏览器中实现运行php代码 操作步骤 到 phpStudy官网 下载 phpStudy 安装路径不能包含”中文”或”空格”，否则会报错 配置Apache环境 “启动” Apache2.4.39，点击”配置”，可以看到网站目录”E:&#x2F;phpstudy_pro&#x2F;WWW” 把要浏览的.php文件放在www目录下面 浏览器输入访问路径：”http://localhost/文件路径“ 就可在浏览器上打开、运行php文件 参考 https://blog.csdn.net/qq_44381873/article/details/104761158 &nbsp; (二) 请求 测试 HTTP 协议 打开命令行 Win + R ——&gt; cmd + ENTER 输入ipconfig查看IP地址 IPV4: xxx.xxx.xxx.xxx 与指定 IP 地址的端口 80 建立一个 telnet 连接 (telnet 是一种网络协议，它提供了一种在两台计算机之间进行交互式文本通信的方法。使用 telnet 命令加上一个 IP 地址和端口号，可以尝试与目标 IP 地址的指定端口建立文本通信连接。端口号 80 是互联网上用于未加密的 HTTP（超文本传输协议）通信的标准端口。HTTP 是网页传输的基础协&gt;议，所以这个操作通常用于测试网络上的 HTTP 服务器是否可达。)telnet IP地址 80 + ENTER (80为默认情况下HTTP指定端口) 打开回显，使得能看到输入的东西，便于调试CTRL + ] + ENTER &nbsp; (1)GET方法请求 GET &#x2F;01.php HTTP&#x2F;1.1Host: localhost (2)POST方法请求 POST &#x2F;02.php HTTP&#x2F;1.1Host: localhostContent-type: application&#x2F;x-www-form-urlencodedContent-length: 23 name&#x3D;John&amp;age&#x3D;30 5.26(3)HEAD方法请求 功能：与GET方法基本一致，只是不返回内容。例如，只是想确认一个内容(e.g.照片)是否还正常存在，不需要返回照片内容。 GET &#x2F;01.php HTTP&#x2F;1.1Host: localhost (4)注： 这些方法虽然是HTTP协议规定的，但 WEB SERVER 未必全部允许或支持，一般前三个，即 GET POST HEAD 都支持。 telnet news.163.com 80TRACE &#x2F; HTTP&#x2F;1.1Host: news.163.com (5)OPTIONS方法 功能：返回服务器支持的请求方法 OPTIONS &#x2F; HTTP&#x2F;1.1Host: localhost &nbsp; 常用状态码(及状态文字) 200： 服务器成功返回网页301&#x2F;302： 永久&#x2F;临时重定向 分类 问题 描述：一篇新闻，对于GET请求，重定向影响不大，能看到原来的内容即可。但对于POST请求，可能造成数据丢失。 解决： 307： 重定向中保护原有的请求数据 服务器上的资源暂时移动到了另一个URI，但是客户端应该继续使用原来的请求方法来访问新的URI。这个状态码与301和302重定向类似，但主要区别在于它不会改变客户端的请求方法（GET、POST等）。换言之，301和302重定向会改变客户端的请求方法。 304 NOT MODIFIED： 未修改 例如一张图片(一般长期不变)：客户端第一次请求服务器获得这个图片后，之后的每次请求，服务器会告诉客户端我有这张图片，并告诉服务器自己对该图片的时间编号(ETag)，让服务器判断过期没，如果过期了，服务器再重新返回新的图片，否则客户端直接取缓存，节省连接，实现优化。 失败状态码404 NOT FOUND： 请求的网页不存在 503： 服务器暂时不可用500： 服务器内部问题 5.27 PHP 是一种服务器端脚本语言，用于创建动态网页和应用程序。PHP文件通常包含HTML和PHP代码，可以由服务器解释并生成动态内容。PHP文件通常具有.php扩展名. 五、实战(一) PHP + socket编码 发送 HTTP请求 要求：模拟 下载、注册、登陆、批量发帖 socket操作远程文件和读写本地的文件原理类型，可以理解为，本地文件通过硬件传输，而远程文件通过网线传输。 5.28(1)socket编码发送GET请求 PHP 中的 $ 符号用于声明变量，但变量的数据类型是在赋值时动态确定的 $this 是一个特殊变量，它代表当前类的实例。当您在类的方法内部使用 $this-&gt; 时，它允许您访问类的私有（private）和受保护（protected）属性以及公共（public）属性 在 PHP 中，接口（Interface）是一种特殊的类，它定义了一组方法签名，但不包含这些方法的具体实现。接口类似于 C++ 中的抽象基类（Abstract Base Class），它们都用于定义一组规范，使得实现这些接口的类必须提供这些方法的具体实现。 在 PHP 中，类的构造函数通常以 __construct 命名，这是一个约定俗成的命名规则，而不是一个严格的语法规则 array() 是一个函数，它用于创建一个数组。数组是一种数据结构，可以存储一系列键值对 fsockopen() 函数。用于创建一个网络套接字(socket)，并通过它与远程服务器进行通信 print_r 是一个函数，用于以易于理解的方式打印关于变量结构的信息。这个函数主要用于调试目的，它输出变量的类型和值，并且如果变量是数组或对象，还会输出它们的键和属性 5.29 换行： Linux ‘\\n’ macOS ‘\\r’ Windows ‘\\r\\n&#39; HTTP协议 ‘\\r\\n’ Carriage Return（CR）回车 Line Feed（LF）换行 在PHP中，fsockopen函数用于打开一个网络连接。这个函数允许你通过TCP或UDP协议与远程服务器进行通信 基本语法： resource fsockopen ( string $hostname , int$port [, int $errno [, string$errstr [, float $timeout ]]]] ) hostname：要连接的服务器的域名或IP地址。 port：要连接的服务器的端口号。 errno：如果发生错误，将存储错误编号。 errstr：如果发生错误，将存储错误描述。 timeout：设置超时时间（以秒为单位）。如果设置为0，则函数会立即返回，不管连接是否成功。 在PHP中，**”.&#x3D;”**（或 **”. +&#x3D;”**）是用于字符串的扩展赋值运算符。这个运算符用于将一个字符串追加到另一个字符串的末尾 &nbsp;&nbsp;代码： 定义了一个名为Http的类，该类实现了Proto接口。创建了一个Http对象，并调用其get方法来获取指定的URL的响应内容，并将其输出 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130&lt;?php// (一) 接口声明// http 请求类的接口 包含四个方法 interface Proto&#123; function conn($url); // 连接 URL function get(); // 发送 GET 查询 function post(); // 发送 POST 查询 function close(); // 关闭连接&#125;// -----------------------------------//(二) 类实现 Http类 实现 Proto接口class Http implements Proto&#123; const CRLF = &quot;\\r\\n&quot;; // Carriage return Line feed 回车换行 protected $errno = -1; // 如果发生错误，将存储错误编号 protected $errstr = &#x27;&#x27;; // 如果发生错误，将存储错误描述 protected $response = &#x27;&#x27;; // 响应内容 protected $url= null; // URL 解析后的信息 protected $version = &#x27;HTTP/1.1&#x27;; // 协议版本 protected $fh = null; // 文件句柄(file handle)，用于与服务器进行通信 protected $line = array(); // 请求行 protected $header = array(); // 头信息 protected $body = array(); // 主体信息 // 公共的构造函数——初始化连接 public function __construct($url)&#123; $this-&gt;conn($url); $this-&gt;setHeader(&#x27;Host: &#x27; . $this-&gt;url[&#x27;host&#x27;]); // 请求头部信息都差不多 直接写在构造函数里 &#125; // 此方法负责写请求行 protected function setLine($method)&#123; $this-&gt;line[0] = $method . &#x27; &#x27; . $this-&gt;url[&#x27;path&#x27;] . &#x27; &#x27; . $this-&gt;version; &#125; // 此方法负责写头信息 protected function setHeader($headerLine)&#123; $this-&gt;header[] = $headerLine; &#125; // 此方法负责写主体信息 protected function setBody()&#123; &#125; // 连接URL 建立与服务器的连接 public function conn($url)&#123; $this-&gt;url = parse_url($url); // 解析URL // 设置默认端口 if (!isset($this-&gt;url[&#x27;port&#x27;])) &#123; // 如果没分析出端口 $this-&gt;url[&#x27;port&#x27;] = 80; // HTTP 请求的默认端口号 &#125; // 建立网络连接 $this-&gt;fh = fsockopen($this-&gt;url[&#x27;host&#x27;], $this-&gt;url[&#x27;port&#x27;],$this-&gt;errno, $whis-&gt;errstr, 30); // 如果连接成功，返回一个文件句柄（file handle），这个句柄可以用来发送和接收数据 // 如果连接失败 if (!$this-&gt;fh) &#123; die(&quot;无法连接到服务器: $errstr ($errno)&quot;); &#125; &#125; // 构造 GET 请求的数据 public function get()&#123; $this-&gt;setLine(&#x27;GET&#x27;); // 设置请求行 (请求头信息已经在构造函数中设置) $this-&gt;request(); return $this-&gt;response; &#125; // 构造 POST 请求的数据 public function post()&#123; &#125; // 请求 public function request()&#123; // 把 请求行、头信息、实体信息 合并到一个数组里，便于拼接 $req = array_merge($this-&gt;line,$this-&gt;header,array(&#x27;&#x27;),$this-&gt;body,array(&#x27;&#x27;)); // print_r($req); $req = implode(self::CRLF, $req); // 拼接 // echo $req; fwrite($this-&gt;fh,$req); while (!feof($this-&gt;fh)) &#123; $this-&gt;response .= fread($this-&gt;fh, 1024); &#125; $this-&gt;close(); // 关闭连接 // return $this-&gt;response; &#125; // 关闭连接 public function close()&#123; &#125; &#125;// -----------------------------------// (三) 脚本执行$url = &#x27;http://hcl.baidu.com/&#x27;;$http = new Http($url); // 创建了应该http对象// print_r($http); // 打印对象的属性 以验证请求是否成功echo $http-&gt;get();?&gt; (2)socket编码发送POST请求在命令行中使用 telnet 命令连接到 http://mc.iproute.cn:16849/index.php telnet mc.iproute.cn 16849 POST &#x2F;index.php HTTP&#x2F;1.1 Host: localhost Content-type: application&#x2F;x-www-form-urlencodedContent-length: 71空行datatable1_length&#x3D;10&amp;username&#x3D;aj&amp;content&#x3D;aaaa&amp;submit&#x3D;%E6%8F%90%E4%BA%A4 代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148&lt;?php// (一) 接口声明// http 请求类的接口 包含四个方法 interface Proto&#123; function conn($url); // 连接 URL function get(); // 发送 GET 查询 function post(); // 发送 POST 查询 function close(); // 关闭连接&#125;// -----------------------------------//(二) 类实现 Http类 实现 Proto接口class Http implements Proto&#123; const CRLF = &quot;\\r\\n&quot;; // Carriage return Line feed 回车换行 protected $errno = -1; // 如果发生错误，将存储错误编号 protected $errstr = &#x27;&#x27;; // 如果发生错误，将存储错误描述 protected $response = &#x27;&#x27;; // 响应内容 protected $url= null; // URL 解析后的信息 protected $version = &#x27;HTTP/1.1&#x27;; // 协议版本 protected $fh = null; // 文件句柄(file handle)，用于与服务器进行通信 protected $line = array(); // 请求行 protected $header = array(); // 头信息 protected $body = array(); // 主体信息 // 公共的构造函数——初始化连接 public function __construct($url)&#123; $this-&gt;conn($url); $this-&gt;setHeader(&#x27;Host: &#x27; . $this-&gt;url[&#x27;host&#x27;]); // 请求头部信息都差不多 直接写在构造函数里 &#125; // 此方法负责写请求行 protected function setLine($method)&#123; $this-&gt;line[0] = $method . &#x27; &#x27; . $this-&gt;url[&#x27;path&#x27;] . &#x27; &#x27; . $this-&gt;version; &#125; // 此方法负责写头信息 protected function setHeader($headerLine)&#123; $this-&gt;header[] = $headerLine; &#125; // 此方法负责写主体信息 protected function setBody($body)&#123; $this-&gt;body[] = http_build_query($body); &#125; // 连接URL 建立与服务器的连接 public function conn($url)&#123; $this-&gt;url = parse_url($url); // 解析URL // 设置默认端口 if (!isset($this-&gt;url[&#x27;port&#x27;])) &#123; // 如果没分析出端口 $this-&gt;url[&#x27;port&#x27;] = 80; // HTTP 请求的默认端口号 &#125; // 建立网络连接 $this-&gt;fh = fsockopen($this-&gt;url[&#x27;host&#x27;], $this-&gt;url[&#x27;port&#x27;],$this-&gt;errno, $whis-&gt;errstr, 30); // 如果连接成功，返回一个文件句柄（file handle），这个句柄可以用来发送和接收数据 // 如果连接失败 if (!$this-&gt;fh) &#123; die(&quot;无法连接到服务器: $errstr ($errno)&quot;); &#125; &#125; // 构造 GET 请求的数据 public function get()&#123; $this-&gt;setLine(&#x27;GET&#x27;); // 设置请求行 (请求头信息已经在构造函数中设置) $this-&gt;request(); return $this-&gt;response; &#125; // 构造 POST 请求的数据 public function post($body = array())&#123; $this-&gt;setLine(&#x27;POST&#x27;); // 设置请求行 (请求头信息已经在构造函数中设置) // 设置 Content-type $this-&gt;setHeader(&#x27;Content-type: application/x-www-form-urlencoded&#x27;); // 先设置主体信息 (与GET不同) $this-&gt;setBody($body); // 然后计算 Content-length $this-&gt;setHeader(&#x27;Content-length: &#x27; . strlen($this-&gt;body[0])); $this-&gt;request(); &#125; // 请求 public function request()&#123; // 把 请求行、头信息、实体信息 合并到一个数组里，便于拼接 $req = array_merge($this-&gt;line,$this-&gt;header,array(&#x27;&#x27;), $this-&gt;body, array(&#x27;&#x27;)); // print_r($req); $req = implode(self::CRLF, $req); // 拼接 // echo $req; exit; // 调试是否拼接成功 fwrite($this-&gt;fh,$req); while (!feof($this-&gt;fh)) &#123; $this-&gt;response .= fread($this-&gt;fh, 1024); &#125; $this-&gt;close(); // 关闭连接 &#125; // 关闭连接 public function close()&#123; fclose($this-&gt;fh); &#125; &#125;// -----------------------------------// (三) 脚本执行set_time_limit(0);$url = &#x27;http://mc.iproute.cn:16849/index.php&#x27;;for($i=1; $i&lt;10; $i++)&#123; // 随机 $str = str_shuffle(&#x27;abcdefghijklmnopqrst0123456789&#x27;); $username = substr($str, 0, 5); $content = substr($str, 6, 8); $http = new Http($url); // 创建了应该http对象 $http-&gt;post(array(&#x27;datatable1_length&#x27;=&gt;strlen($username . $content ),&#x27;username&#x27;=&gt;$username,&#x27;content&#x27;=&gt;$content ,&#x27;submit&#x27;=&gt;&#x27;%E6%8F%90%E4%BA%A4&#x27;)); echo $username, &#x27;&lt;br /&gt;&#x27;, $content; usleep(2000);&#125;?&gt; 6.3HTTP协议模拟登录发帖 HTTP协议为无状态协议，每个HTTP请求都是独立的，服务器不会保存任何关于客户端之前请求的信息。这种设计简化了协议，但无法维持状态(通常用cookie和session技术在客户端和服务器间维护状态信息)。 验证码识别，得暴力破解，属于“图像识别的范畴” 总结一下 抓包 模拟 (二) Referer e.g. 站外引用图片 网站统计用户来源 Referer: 网页的来源，即上一页的地址如果是在浏览器输入地址回车进入网站，则无referer头 (1) 配置 Apache服务器，实现图片防盗链 实现： URL重写：在 Web 服务器层面，根据 HTTP 协议的 Referer 头信息来判断，将来自站外的网站统一写到一个很小的防盗链提醒图片上的 具体步骤： 打开 Apache ,重写模块——去除 mod_rewrite 前的 ‘#’,并重启 Apache 在需要防盗的网站或目录下，写 .htaccess 文件，并指定防盗规则 何种情况重写： jpeg&#x2F;jpg&#x2F;gif&#x2F;png图片时 referer头与localhost不匹配时 怎么重写？ - 统一 rewrite 到防盗链图片 实操 重写模块 写 .htaccess 文件 并指定防盗规则 效果 html源码 localhost访问 站外访问(例中是通过本机IP) 6.4(2) 突破防盗链盗图 php源码 12345678910111213141516 &lt;?php require(&#x27;./http.class.php&#x27;); // $http = new Http(&#x27;http://192.168.10.100/0603/a.png&#x27;); $http = new Http(&#x27;http://localhost/0603/a.png&#x27;); $http-&gt;setHeader(&#x27;Referer: http://localhost&#x27;); //伪造Referer 突破防盗链 $res = $http-&gt;get();// HTTP 响应中提取出所&gt; 盗 图片，并将其保存到本地文件 c.png 中 file_put_contents(&#x27;./c.png&#x27;,substr(strstr($res,&quot;\\r\\n\\r\\n&quot;),4)); // 待完善：判断路径或 response 的 mime头信息，确定图片类型 ?&gt; 直接盗图 伪造Referer 突破防盗链 &nbsp; 六、 优化(一) 缓存控制 下载图片时第1次请求 200 OK第2次请求 304 NOT Modified 未修改状态 6.4 HTTP缓存控制是Web性能优化的重要手段，它通过减少服务器负载和加快内容传输速度来提升用户体验HTTP协议通过几种不同的头部字段来实现缓存控制 Last-Modified&#x2F;If-Modified-Since: Last-Modified是服务器响应头，指明了资源的最后修改时间。浏览器可以在后续的请求中带上If-Modified-Since头部，将最后修改时间发送给服务器，服务器根据这个时间决定是否返回新的内容，如果资源没有改变，服务器会返回一个304 Not Modified状态码，告知浏览器使用其缓存中的资源。 ETag&#x2F;If-None-Match: ETag是服务器响应头，包含了资源的版本标识符。浏览器可以在后续的请求中带上If-None-Match头部，服务器会对比这个标识符和资源的当前标识符，如果相同，则返回304状态码，表示资源未改变。 拓展(1)： 问：网站较大，有多台缓存服务器，那么这多台缓存服务器如何处理主服务器上的文件？ 是否缓存？ 缓存多久？ 答：在主服务器打开 Apache 的 Expires 拓展，利用该拓展来控制来图片、css、html等文件的缓存与否及缓存生命周期 Cache-Control: 是HTTP1.1中引入的头部，它提供了更细粒度的缓存控制 Expires：这是HTTP1.0中使用的头部，它指定了一个日期&#x2F;时间，在此时间之前，缓存被认为是有效的。如果浏览器访问一个带有Expires头部的资源，并且当前时间在Expires指定的时间之前，浏览器将会使用缓存中的资源，而不是重新从服务器获取 示例： .htaccess 配置文件 12ExpiresActive OnExpiresByType image/jpeg &quot;access plus 30 days&quot; 效果 拓展(2)： 情景：有些资源，如个人信息，不允许缓存服务器缓存，必须到主服务器请求 示例： .htaccess 配置文件 1234567ExpiresActive OnExpiresByType image/jpeg &quot;access plus 30 days&quot;&lt;FilesMatch &quot;\\.(gif)$&quot;&gt;header set Cache-Control &quot;no-store,must-revalidate&quot;&lt;/FilesMatch&gt; 配置使得JPEG图片可以被缓存30天，而GIF图片则不会被缓存，每次请求都需要从服务器重新加载 - 效果 ![](../images/060503.png) &nbsp; (二) 内容压缩概述： 引入 HTTP内容压缩是一种优化网络传输的技术，它通过减少服务器响应的大小来提高网页加载速度。通常是通过在服务器和客户端之间传输数据之前，使用某种算法来压缩数据来实现的。 以下是一些常见的HTTP内容压缩方法： GZIP Deflate Brotli 原理：服务器返回压缩内容，客服端接收压缩文件，解压缩，再渲染页面。而Content-Length是压缩后的长度。 实操： 在 Apache 启用压缩功能： 开启 Deflate 模块 配置 conf 文件 (写入下列代码)123456789101112131415&lt;ifmodule mod_deflate.c&gt;DeflateCompressionLevel 6 # 压缩等级1~9 推荐6AddOutputFilterByType DEFLATE text/plainAddOutputFilterByType DEFLATE text/htmlAddOutputFilterByType DEFLATE text/xmlAddOutputFilterByType DEFLATE text/cssAddOutputFilterByType DEFLATE text/javascriptAddOutputFilterByType DEFLATE application/xhtml+xmlAddOutputFilterByType DEFLATE application/xmlAddOutputFilterByType DEFLATE application/rss+xmlAddOutputFilterByType DEFLATE application/atom xmlAddOutputFilterByType DEFLATE application/x-javascriptAddOutputFilterByType DEFLATE application/x-httpd-phpAddOutputFilterByType DEFLATE image/svg+xml&lt;/ifmodule&gt; 服务器怎么知道我们的服务器支持 gzip 或其他压缩方式？ 小技巧：做采集时，不发送 Accept-Encoding 信息，这样采集的是源码。而用 gzip 采集以提高速度，再用 PHP 解压 gzip 的内容。 &nbsp; (三) 反向Ajax HTTP协议与持久链接 + 分块传输 ——&gt; 反向Ajax (comet, server push, 服务器推技术) 应用场景：即使聊天 持久连接（Persistent Connections）： 也称为HTTP keep-alive，允许客户端和服务器在多次请求&#x2F;响应之间保持连接打开，减少了建立和关闭连接的开销。在HTTP&#x2F;1.1中，所有连接默认是持久的，除非显式地指定它们应该关闭。 分块传输编码（Chunked Transfer Encoding）： 允许服务器发送不确定长度的响应，即服务器可以分块发送数据，而无需事先知道整个响应的数据大小。每个数据块都会带有长度值，客户端会根据这些长度值来接收数据块，直到遇到一个零长度的块，表示传输完成。将持久连接和分块传输编码结合使用，服务器可以在一个响应中发送多个数据块，而连接保持开放状态。服务器可以在任何时间点发送新的数据块，而不需要客户端发起新的请求。这种方式允许服务器主动推送数据到客户端，从而实现了反向Ajax的效果。 例如，长轮询（Long Polling） 就是利用了持久连接和分块传输编码的一种技术。客户端发起一个请求到服务器，服务器保持这个请求打开，直到有新数据可发送。服务器发送数据后，关闭这个请求，客户端处理完数据后再立即发起一个新的请求。这样，服务器可以在数据可用时立即将其推送到客户端，实现了类似反向Ajax的功能。","content":"<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考:\"></a>参考:</h3><p><a href=\"https://www.bilibili.com/video/BV1js411g7Fw\">https://www.bilibili.com/video/BV1js411g7Fw</a></p>\n<hr>\n<h1 id=\"5-23\"><a href=\"#5-23\" class=\"headerlink\" title=\"5.23\"></a>5.23</h1><h2 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h2><blockquote>\n<ul>\n<li><strong>重要性</strong><ul>\n<li>webservice &#x3D; HTTP协议 + XML</li>\n<li>Rest &#x3D; HTTP协议 + ison</li>\n<li>各种API一般也是用 HTTP协议 + XML&#x2F;json 来实现的</li>\n<li>此外，做采集、小偷站，也需要对HTP协议有一定的了解；也有助于学习Ajax</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>\n<p>&nbsp;</p>\n<h2 id=\"二、索引\"><a href=\"#二、索引\" class=\"headerlink\" title=\"二、索引\"></a>二、索引</h2><blockquote>\n<ul>\n<li><strong>原理</strong><ul>\n<li>形象理解原理</li>\n<li>请求信息和响应信息的格式</li>\n<li>请求方法 状态码</li>\n</ul>\n</li>\n<li><strong>实战</strong><ul>\n<li>PHP + socket编程 发送http请求</li>\n<li>PHP 批量发帖</li>\n<li>HTTP协议 防盗</li>\n</ul>\n</li>\n<li><strong>优化</strong><ul>\n<li>HTTP协议 与 缓存控制</li>\n<li>HTTP协议 与 COOKIE</li>\n<li>分块传输 与 反向Ajax</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<!-- more -->\n\n<hr>\n<h1 id=\"5-24\"><a href=\"#5-24\" class=\"headerlink\" title=\"5.24\"></a>5.24</h1><blockquote>\n<ul>\n<li><em><strong>repostiry</strong></em> 仓库</li>\n</ul>\n</blockquote>\n<h2 id=\"三、原理\"><a href=\"#三、原理\" class=\"headerlink\" title=\"三、原理\"></a>三、原理</h2><blockquote>\n<ul>\n<li><strong>协议：</strong> 一式双份&#x2F;多份，双方&#x2F;多方都遵从的一个规范。<ul>\n<li><strong>e.g.</strong>   ftp http pop tcp&#x2F;ip</li>\n</ul>\n</li>\n<li><strong>HTTP协议：</strong> 客户端按照一定规则向服务器发送请求、索要数据，服务器按照一定规则响应请求、返回数据<br><img src=\"/../images/HTTP-workflow.png\" alt=\"HTTP工作流程\"></li>\n</ul>\n</blockquote>\n<hr>\n<h1 id=\"5-25\"><a href=\"#5-25\" class=\"headerlink\" title=\"5.25\"></a>5.25</h1><blockquote>\n<p><strong>config</strong> (计算机系统)配置</p>\n</blockquote>\n<h2 id=\"四、-HTTP请求信息和响应信息的格式\"><a href=\"#四、-HTTP请求信息和响应信息的格式\" class=\"headerlink\" title=\"四、 HTTP请求信息和响应信息的格式\"></a>四、 <em><strong>HTTP请求信息和响应信息的格式</strong></em></h2><blockquote>\n<h3 id=\"1-请求信息格式\"><a href=\"#1-请求信息格式\" class=\"headerlink\" title=\"1)请求信息格式\"></a>1)请求信息格式</h3><ul>\n<li><strong>请求行  (格式：请求方法 路径 协议)</strong><ul>\n<li><p>请求方法 </p>\n<ul>\n<li>GET</li>\n<li>POST</li>\n<li>HEAD</li>\n<li>PUT</li>\n<li>DELETE</li>\n<li>TRACE</li>\n<li>OPTIONS</li>\n</ul>\n</li>\n<li><p>请求路径：URL的一部分</p>\n</li>\n<li><p>所用协议：目前一般是 “<strong>HTTP&#x2F;1.1</strong>“,0.9和1.0基本上已经不用</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<ul>\n<li><strong>请求头信息 (格式：key value)</strong></li>\n</ul>\n<p><strong>头信息结束后，和主体信息之间要空一行</strong></p>\n<ul>\n<li><strong>请求主体信息 (可选) (发送内容)</strong><blockquote>\n<ul>\n<li>e.g.<br><strong>POST &#x2F;03.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br><strong>Conten-type: application&#x2F;x-www-form-urlencode</strong><br><strong>Content-length: 24</strong><br>空行<br><strong>username&#x3D;zhangsan&amp;age&#x3D;18</strong><br><img src=\"/../images/Example-GET-Method.png\" alt=\"e.g.\"></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>&nbsp;</p>\n</blockquote>\n<blockquote>\n<h3 id=\"2-响应信息格式\"><a href=\"#2-响应信息格式\" class=\"headerlink\" title=\"2)响应信息格式\"></a>2)响应信息格式</h3><ul>\n<li><strong>响应行  (格式：请求方法 状态码 状态文字)</strong><ul>\n<li><p><strong>状态码：</strong> 反应服务器的响应情况 (e.g. <strong>200 OK</strong> <strong>404 NOT FOUND</strong> )</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>定义</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1XX</td>\n<td>信息</td>\n<td>接收到请求，继续处理(HTTP预留待拓展)</td>\n</tr>\n<tr>\n<td>2XX</td>\n<td>成功</td>\n<td>操作成功地收到，理解和接受</td>\n</tr>\n<tr>\n<td>3XX</td>\n<td>重定向</td>\n<td>为了完成请求，必须采取进一步措施</td>\n</tr>\n<tr>\n<td>4XX</td>\n<td>客户端错误</td>\n<td>请求的语法有错误或不能完全被满足。</td>\n</tr>\n<tr>\n<td>5XX</td>\n<td>服务器错误</td>\n<td>服务器无法完成明显有效的请求。</td>\n</tr>\n</tbody></table>\n</blockquote>\n</li>\n<li><p><strong>状态文字:</strong> 描述状态码，便于人观察</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<ul>\n<li><strong>响应头信息 (格式：key value)</strong></li>\n</ul>\n<p><strong>头信息结束后，和主体信息之间要空一行</strong></p>\n<ul>\n<li><p><strong>请求主体信息 (可选)</strong></p>\n</li>\n<li><p><strong>请求主体信息 (可选) (发送内容)</strong></p>\n<blockquote>\n<ul>\n<li>e.g.<br><strong>HTTP&#x2F;1.1 OK 200</strong><br><strong>Content-tyoe: text&#x2F;html</strong><br><strong>Content-length: 5</strong><br>空行<br><strong>Hello</strong><br><img src=\"/../images/Example-POST-Method.png\" alt=\"e.g.\"><br>&nbsp;</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"实操：\"><a href=\"#实操：\" class=\"headerlink\" title=\"实操：\"></a>实操：</h3><h4 id=\"一-前置工作\"><a href=\"#一-前置工作\" class=\"headerlink\" title=\"(一) 前置工作\"></a>(一) 前置工作</h4><blockquote>\n<p><em><strong>安装HTTP服务器</strong></em></p>\n<ul>\n<li><strong>IIS</strong> (Internet Information Services) Windows的内置Web服务器<ul>\n<li><strong>控制面板</strong>——<strong>程序</strong>——<strong>程序和功能</strong>——<strong>打开或关闭Windows功能</strong>——勾选”<strong>Internet Information Services</strong>“</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><em><strong>在windows操作系统上使用telnet指令</strong></em></p>\n<ul>\n<li><strong>控制面板</strong>——<strong>程序</strong>——<strong>程序和功能</strong>——<strong>打开或关闭Windows功能</strong>——勾选”<strong>telnet client</strong>“</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><em><strong>搭建平台，在浏览器中实现运行php代码</strong></em></p>\n<ul>\n<li><strong>操作步骤</strong></li>\n</ul>\n<ol>\n<li>到 <a href=\"https://www.xp.cn/download.html\" title=\"phpStudy官网\">phpStudy官网</a> 下载 <strong>phpStudy</strong><br>  安装路径不能包含”中文”或”空格”，否则会报错</li>\n<li>配置Apache环境<br>  “启动” <strong>Apache2.4.39</strong>，点击”配置”，可以看到网站目录”E:&#x2F;phpstudy_pro&#x2F;WWW”</li>\n<li>把要浏览的.php文件放在www目录下面</li>\n<li>浏览器输入访问路径：”<a href=\"http://localhost/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84\">http://localhost/文件路径</a>“ 就可在浏览器上打开、运行php文件</li>\n</ol>\n<ul>\n<li><strong>参考</strong><ul>\n<li><a href=\"https://blog.csdn.net/qq_44381873/article/details/104761158\">https://blog.csdn.net/qq_44381873/article/details/104761158</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"二-请求\"><a href=\"#二-请求\" class=\"headerlink\" title=\"(二) 请求\"></a>(二) 请求</h4><blockquote>\n<p>测试 HTTP 协议</p>\n<ol>\n<li>打开命令行<br>  <strong>Win</strong> + <strong>R</strong> ——&gt; <strong>cmd</strong> + <strong>ENTER</strong> </li>\n<li>输入<strong>ipconfig</strong>查看IP地址<br>  <strong>IPV4: xxx.xxx.xxx.xxx</strong></li>\n<li>与指定 IP 地址的端口 80 建立一个 telnet 连接<br>  (telnet 是一种网络协议，它提供了一种在两台计算机之间进行交互式文本通信的方法。使用 telnet 命令加上一个 IP 地址和端口号，可以尝试与目标 IP 地址的指定端口建立文本通信连接。端口号 80 是互联网上用于未加密的 HTTP（超文本传输协议）通信的标准端口。HTTP 是网页传输的基础协&gt;议，所以这个操作通常用于测试网络上的 HTTP 服务器是否可达。)<br><strong>telnet</strong> <strong>IP地址</strong> <strong>80</strong> + <strong>ENTER</strong>  (80为默认情况下HTTP指定端口)</li>\n<li>打开回显，使得能看到输入的东西，便于调试<br><strong>CTRL</strong> + <strong>]</strong> + <strong>ENTER</strong></li>\n</ol>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><em><strong>(1)GET方法请求</strong></em></p>\n<blockquote>\n<p><strong>GET &#x2F;01.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br> <img src=\"/../images/GET-Method.png\" alt=\"GET方法做HTTP请求\"></p>\n</blockquote>\n<p><em><strong>(2)POST方法请求</strong></em></p>\n<blockquote>\n<p><strong>POST &#x2F;02.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br><strong>Content-type: application&#x2F;x-www-form-urlencoded</strong><br><strong>Content-length: 23</strong></p>\n<p><strong>name&#x3D;John&amp;age&#x3D;30</strong></p>\n<p> <img src=\"/../images/Head-Method.png\" alt=\"POST方法做HTTP请求\"></p>\n</blockquote>\n<h1 id=\"5-26\"><a href=\"#5-26\" class=\"headerlink\" title=\"5.26\"></a>5.26</h1><p><em><strong>(3)HEAD方法请求</strong></em></p>\n<blockquote>\n<p>功能：与GET方法基本一致，只是不返回内容。例如，只是想确认一个内容(e.g.照片)是否还正常存在，不需要返回照片内容。</p>\n<p><strong>GET &#x2F;01.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br> <img src=\"/../images/Head-Method.png\" alt=\"HEAD方法做HTTP请求\"></p>\n</blockquote>\n<p><em><strong>(4)注：</strong></em> </p>\n<blockquote>\n<p>这些方法虽然是HTTP协议规定的，但 <strong>WEB</strong> <strong>SERVER</strong> 未必全部允许或支持，一般前三个，即 <strong>GET</strong> <strong>POST</strong> <strong>HEAD</strong> 都支持。</p>\n<p><strong>telnet news.163.com 80</strong><br><strong>TRACE &#x2F; HTTP&#x2F;1.1</strong><br><strong>Host: news.163.com</strong></p>\n<p> <img src=\"/../images/405-Methon-Not-Allowed.png\" alt=\"不支持该方法\"></p>\n</blockquote>\n<p><em><strong>(5)OPTIONS方法</strong></em> </p>\n<blockquote>\n<p>功能：返回服务器支持的请求方法</p>\n<p><strong>OPTIONS &#x2F; HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong></p>\n<ul>\n<li><img src=\"/../images/OPTIONS-Methond.png\" alt=\"OPTIONS方法做HTTP请求\"></li>\n</ul>\n</blockquote>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"常用状态码-及状态文字\"><a href=\"#常用状态码-及状态文字\" class=\"headerlink\" title=\"常用状态码(及状态文字)\"></a>常用状态码(及状态文字)</h4><blockquote>\n<p><strong>200：</strong> 服务器成功返回网页<br><strong>301&#x2F;302：</strong> 永久&#x2F;临时重定向</p>\n<ul>\n<li>分类<ul>\n<li><img src=\"/../images/302.png\" alt=\"默认302重定向\"></li>\n<li><img src=\"/../images/301.png\" alt=\"指定301重定向\"></li>\n</ul>\n</li>\n<li>问题<ul>\n<li>描述：一篇新闻，对于<strong>GET</strong>请求，重定向影响不大，能看到原来的内容即可。但对于<strong>POST</strong>请求，可能造成<strong>数据丢失</strong>。</li>\n<li>解决： <strong>307：</strong> <em><strong>重定向中保护原有的请求数据</strong></em><ul>\n<li>服务器上的资源暂时移动到了另一个URI，但是客户端应该继续使用原来的请求方法来访问新的URI。这个状态码与301和302重定向类似，但主要区别在于它不会改变客户端的请求方法（GET、POST等）。换言之，301和302重定向会改变客户端的请求方法。</li>\n<li><img src=\"/../images/302-Found.png\" alt=\"302 Found\"></li>\n<li><img src=\"/../images/301-Moved-Permanently.png\" alt=\"301 Moved Permanently\"></li>\n<li><img src=\"/../images/307-Temporary-Redirect.png\" alt=\"307 Temporary Redirect\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><em><strong>304 NOT MODIFIED：</strong></em> 未修改 </p>\n<ul>\n<li>例如一张图片(一般长期不变)：客户端第一次请求服务器获得这个图片后，之后的每次请求，服务器会告诉客户端我有这张图片，并告诉服务器自己对该图片的时间编号(<strong>ETag</strong>)，让服务器判断过期没，如果过期了，服务器再重新返回新的图片，否则客户端直接取缓存，节省连接，实现<strong>优化</strong>。</li>\n</ul>\n<p>失败状态码<br><strong>404 NOT FOUND：</strong> 请求的网页不存在</p>\n<ul>\n<li><img src=\"/../images/404-Not-Found.png\" alt=\"404 Not Found\"></li>\n</ul>\n<p><strong>503：</strong> 服务器暂时不可用<br><strong>500：</strong> 服务器内部问题</p>\n</blockquote>\n<h1 id=\"5-27\"><a href=\"#5-27\" class=\"headerlink\" title=\"5.27\"></a>5.27</h1><blockquote>\n<p><strong>PHP</strong> 是一种服务器端脚本语言，用于创建动态网页和应用程序。PHP文件通常包含HTML和PHP代码，可以由服务器解释并生成动态内容。PHP文件通常具有.php扩展名.</p>\n</blockquote>\n<h2 id=\"五、实战\"><a href=\"#五、实战\" class=\"headerlink\" title=\"五、实战\"></a>五、实战</h2><h3 id=\"一-PHP-socket编码-发送-HTTP请求\"><a href=\"#一-PHP-socket编码-发送-HTTP请求\" class=\"headerlink\" title=\"(一) PHP + socket编码 发送 HTTP请求\"></a>(一) PHP + socket编码 发送 HTTP请求</h3><blockquote>\n<p>要求：模拟 <strong>下载</strong>、<strong>注册</strong>、<strong>登陆</strong>、<strong>批量发帖</strong></p>\n<ul>\n<li>socket操作远程文件和读写本地的文件原理类型，可以理解为，本地文件通过硬件传输，而远程文件通过网线传输。</li>\n</ul>\n</blockquote>\n<h1 id=\"5-28\"><a href=\"#5-28\" class=\"headerlink\" title=\"5.28\"></a>5.28</h1><h4 id=\"1-socket编码发送GET请求\"><a href=\"#1-socket编码发送GET请求\" class=\"headerlink\" title=\"(1)socket编码发送GET请求\"></a>(1)socket编码发送GET请求</h4><blockquote>\n<ul>\n<li>PHP 中的 $ 符号用于声明变量，但变量的数据类型是在赋值时动态确定的</li>\n<li>$this 是一个特殊变量，它代表当前类的实例。当您在类的方法内部使用 $this-&gt; 时，它允许您访问类的私有（private）和受保护（protected）属性以及公共（public）属性</li>\n<li>在 PHP 中，接口（Interface）是一种特殊的类，它定义了一组方法签名，但不包含这些方法的具体实现。接口类似于 C++ 中的抽象基类（Abstract Base Class），它们都用于定义一组规范，使得实现这些接口的类必须提供这些方法的具体实现。</li>\n<li>在 PHP 中，类的构造函数通常以 __construct 命名，这是一个约定俗成的命名规则，而不是一个严格的语法规则</li>\n<li>array() 是一个函数，它用于创建一个数组。数组是一种数据结构，可以存储一系列键值对</li>\n<li>fsockopen() 函数。用于创建一个网络套接字(socket)，并通过它与远程服务器进行通信</li>\n<li>print_r 是一个函数，用于以易于理解的方式打印关于变量结构的信息。这个函数主要用于调试目的，它输出变量的类型和值，并且如果变量是数组或对象，还会输出它们的键和属性</li>\n</ul>\n</blockquote>\n<h1 id=\"5-29\"><a href=\"#5-29\" class=\"headerlink\" title=\"5.29\"></a>5.29</h1><blockquote>\n<p><em><strong>换行：</strong></em></p>\n<ul>\n<li>Linux   ‘\\n’</li>\n<li>macOS   ‘\\r’</li>\n<li>Windows ‘\\r\\n&#39;</li>\n<li>HTTP协议 <strong>‘\\r\\n’</strong></li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>Carriage Return（CR）回车</li>\n<li>Line Feed（LF）换行</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>在PHP中，<strong>fsockopen</strong>函数用于打开一个网络连接。这个函数允许你通过TCP或UDP协议与远程服务器进行通信</p>\n<p>基本语法：</p>\n<ul>\n<li>resource fsockopen ( string $hostname , int$port [, int $errno [, string$errstr [, float $timeout ]]]] )<ul>\n<li>hostname：要连接的服务器的域名或IP地址。</li>\n<li>port：要连接的服务器的端口号。</li>\n<li>errno：如果发生错误，将存储错误编号。</li>\n<li>errstr：如果发生错误，将存储错误描述。</li>\n<li>timeout：设置超时时间（以秒为单位）。如果设置为0，则函数会立即返回，不管连接是否成功。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>在PHP中，**”.&#x3D;”**（或 **”. +&#x3D;”**）是用于字符串的扩展赋值运算符。这个运算符用于将一个字符串追加到另一个字符串的末尾</p>\n</blockquote>\n<p>&nbsp;<br>&nbsp;<br><em><strong>代码：</strong></em></p>\n<blockquote>\n<p>定义了一个名为Http的类，该类实现了Proto接口。创建了一个Http对象，并调用其get方法来获取指定的URL的响应内容，并将其输出</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// (一) 接口声明</span></span><br><span class=\"line\"><span class=\"comment\">// http 请求类的接口 包含四个方法 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Proto</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">conn</span>(<span class=\"params\"><span class=\"variable\">$url</span></span>)</span>; <span class=\"comment\">// 连接 URL</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\"></span>)</span>; <span class=\"comment\">// 发送 GET 查询</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\"></span>)</span>; <span class=\"comment\">// 发送 POST 查询</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span>; <span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// -----------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//(二) 类实现 Http类 实现 Proto接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Http</span> <span class=\"keyword\">implements</span> <span class=\"title\">Proto</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"variable constant_\">CRLF</span> = <span class=\"string\">&quot;\\r\\n&quot;</span>; <span class=\"comment\">// Carriage return Line feed 回车换行</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$errno</span> = -<span class=\"number\">1</span>; <span class=\"comment\">// 如果发生错误，将存储错误编号</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$errstr</span> = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">// 如果发生错误，将存储错误描述</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$response</span> = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">// 响应内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$url</span>= <span class=\"literal\">null</span>; <span class=\"comment\">// URL 解析后的信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$version</span> = <span class=\"string\">&#x27;HTTP/1.1&#x27;</span>; <span class=\"comment\">// 协议版本</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$fh</span> = <span class=\"literal\">null</span>; <span class=\"comment\">// 文件句柄(file handle)，用于与服务器进行通信</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$line</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 请求行</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$header</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 头信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$body</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 主体信息</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 公共的构造函数——初始化连接</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$url</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">conn</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setHeader</span>(<span class=\"string\">&#x27;Host: &#x27;</span> . <span class=\"variable\">$this</span>-&gt;url[<span class=\"string\">&#x27;host&#x27;</span>]); <span class=\"comment\">// 请求头部信息都差不多 直接写在构造函数里</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此方法负责写请求行</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setLine</span>(<span class=\"params\"><span class=\"variable\">$method</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;line[<span class=\"number\">0</span>] = <span class=\"variable\">$method</span> . <span class=\"string\">&#x27; &#x27;</span> . <span class=\"variable language_\">$this</span>-&gt;url[<span class=\"string\">&#x27;path&#x27;</span>] . <span class=\"string\">&#x27; &#x27;</span> . <span class=\"variable language_\">$this</span>-&gt;version;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此方法负责写头信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setHeader</span>(<span class=\"params\"><span class=\"variable\">$headerLine</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;header[] = <span class=\"variable\">$headerLine</span>; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此方法负责写主体信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setBody</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 连接URL 建立与服务器的连接</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">conn</span>(<span class=\"params\"><span class=\"variable\">$url</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;url = <span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>); <span class=\"comment\">// 解析URL</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 设置默认端口</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;url[<span class=\"string\">&#x27;port&#x27;</span>])) &#123; <span class=\"comment\">// 如果没分析出端口</span></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;url[<span class=\"string\">&#x27;port&#x27;</span>] = <span class=\"number\">80</span>; <span class=\"comment\">// HTTP 请求的默认端口号</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">// 建立网络连接</span></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;fh = <span class=\"title function_ invoke__\">fsockopen</span>(<span class=\"variable\">$this</span>-&gt;url[<span class=\"string\">&#x27;host&#x27;</span>], <span class=\"variable\">$this</span>-&gt;url[<span class=\"string\">&#x27;port&#x27;</span>],<span class=\"variable\">$this</span>-&gt;errno, <span class=\"variable\">$whis</span>-&gt;errstr, <span class=\"number\">30</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果连接成功，返回一个文件句柄（file handle），这个句柄可以用来发送和接收数据</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 如果连接失败</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;fh) &#123; </span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;无法连接到服务器: <span class=\"subst\">$errstr</span> (<span class=\"subst\">$errno</span>)&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 构造 GET 请求的数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setLine</span>(<span class=\"string\">&#x27;GET&#x27;</span>); <span class=\"comment\">// 设置请求行 (请求头信息已经在构造函数中设置)</span></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">request</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;response;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 构造 POST 请求的数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 请求</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 把 请求行、头信息、实体信息 合并到一个数组里，便于拼接</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$req</span> = <span class=\"title function_ invoke__\">array_merge</span>(<span class=\"variable\">$this</span>-&gt;line,<span class=\"variable\">$this</span>-&gt;header,<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;&#x27;</span>),<span class=\"variable language_\">$this</span>-&gt;body,<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">// print_r($req); </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$req</span> = <span class=\"title function_ invoke__\">implode</span>(<span class=\"built_in\">self</span>::<span class=\"variable constant_\">CRLF</span>, <span class=\"variable\">$req</span>); <span class=\"comment\">// 拼接</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// echo $req; </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"title function_ invoke__\">fwrite</span>(<span class=\"variable\">$this</span>-&gt;fh,<span class=\"variable\">$req</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (!<span class=\"title function_ invoke__\">feof</span>(<span class=\"variable\">$this</span>-&gt;fh)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">$this</span>-&gt;response .= <span class=\"title function_ invoke__\">fread</span>(<span class=\"variable\">$this</span>-&gt;fh, <span class=\"number\">1024</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">close</span>(); <span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t <span class=\"comment\">// return $this-&gt;response;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -----------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// (三) 脚本执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$url</span> = <span class=\"string\">&#x27;http://hcl.baidu.com/&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$http</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Http</span>(<span class=\"variable\">$url</span>); <span class=\"comment\">// 创建了应该http对象</span></span><br><span class=\"line\"><span class=\"comment\">// print_r($http); // 打印对象的属性 以验证请求是否成功</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$http</span>-&gt;<span class=\"title function_ invoke__\">get</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/0529.png\" alt=\"响应内容\"></p>\n<h4 id=\"2-socket编码发送POST请求\"><a href=\"#2-socket编码发送POST请求\" class=\"headerlink\" title=\"(2)socket编码发送POST请求\"></a>(2)socket编码发送POST请求</h4><p>在命令行中使用 telnet 命令连接到 <a href=\"http://mc.iproute.cn:16849/index.php\">http://mc.iproute.cn:16849/index.php</a></p>\n<blockquote>\n<ul>\n<li>telnet mc.iproute.cn 16849</li>\n<li>POST &#x2F;index.php HTTP&#x2F;1.1<br>   Host: localhost<br>  Content-type: application&#x2F;x-www-form-urlencoded<br>Content-length: 71<br>空行<br>datatable1_length&#x3D;10&amp;username&#x3D;aj&amp;content&#x3D;aaaa&amp;submit&#x3D;%E6%8F%90%E4%BA%A4</li>\n</ul>\n</blockquote>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// (一) 接口声明</span></span><br><span class=\"line\"><span class=\"comment\">// http 请求类的接口 包含四个方法 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Proto</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">conn</span>(<span class=\"params\"><span class=\"variable\">$url</span></span>)</span>; <span class=\"comment\">// 连接 URL</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\"></span>)</span>; <span class=\"comment\">// 发送 GET 查询</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\"></span>)</span>; <span class=\"comment\">// 发送 POST 查询</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span>; <span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// -----------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//(二) 类实现 Http类 实现 Proto接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Http</span> <span class=\"keyword\">implements</span> <span class=\"title\">Proto</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"variable constant_\">CRLF</span> = <span class=\"string\">&quot;\\r\\n&quot;</span>; <span class=\"comment\">// Carriage return Line feed 回车换行</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$errno</span> = -<span class=\"number\">1</span>; <span class=\"comment\">// 如果发生错误，将存储错误编号</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$errstr</span> = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">// 如果发生错误，将存储错误描述</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$response</span> = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">// 响应内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$url</span>= <span class=\"literal\">null</span>; <span class=\"comment\">// URL 解析后的信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$version</span> = <span class=\"string\">&#x27;HTTP/1.1&#x27;</span>; <span class=\"comment\">// 协议版本</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$fh</span> = <span class=\"literal\">null</span>; <span class=\"comment\">// 文件句柄(file handle)，用于与服务器进行通信</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$line</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 请求行</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$header</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 头信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$body</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 主体信息</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 公共的构造函数——初始化连接</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$url</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">conn</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setHeader</span>(<span class=\"string\">&#x27;Host: &#x27;</span> . <span class=\"variable\">$this</span>-&gt;url[<span class=\"string\">&#x27;host&#x27;</span>]); <span class=\"comment\">// 请求头部信息都差不多 直接写在构造函数里</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此方法负责写请求行</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setLine</span>(<span class=\"params\"><span class=\"variable\">$method</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;line[<span class=\"number\">0</span>] = <span class=\"variable\">$method</span> . <span class=\"string\">&#x27; &#x27;</span> . <span class=\"variable language_\">$this</span>-&gt;url[<span class=\"string\">&#x27;path&#x27;</span>] . <span class=\"string\">&#x27; &#x27;</span> . <span class=\"variable language_\">$this</span>-&gt;version;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此方法负责写头信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setHeader</span>(<span class=\"params\"><span class=\"variable\">$headerLine</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;header[] = <span class=\"variable\">$headerLine</span>; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此方法负责写主体信息</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setBody</span>(<span class=\"params\"><span class=\"variable\">$body</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;body[] = <span class=\"title function_ invoke__\">http_build_query</span>(<span class=\"variable\">$body</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 连接URL 建立与服务器的连接</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">conn</span>(<span class=\"params\"><span class=\"variable\">$url</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;url = <span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>); <span class=\"comment\">// 解析URL</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 设置默认端口</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;url[<span class=\"string\">&#x27;port&#x27;</span>])) &#123; <span class=\"comment\">// 如果没分析出端口</span></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;url[<span class=\"string\">&#x27;port&#x27;</span>] = <span class=\"number\">80</span>; <span class=\"comment\">// HTTP 请求的默认端口号</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">// 建立网络连接</span></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;fh = <span class=\"title function_ invoke__\">fsockopen</span>(<span class=\"variable\">$this</span>-&gt;url[<span class=\"string\">&#x27;host&#x27;</span>], <span class=\"variable\">$this</span>-&gt;url[<span class=\"string\">&#x27;port&#x27;</span>],<span class=\"variable\">$this</span>-&gt;errno, <span class=\"variable\">$whis</span>-&gt;errstr, <span class=\"number\">30</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果连接成功，返回一个文件句柄（file handle），这个句柄可以用来发送和接收数据</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 如果连接失败</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;fh) &#123; </span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;无法连接到服务器: <span class=\"subst\">$errstr</span> (<span class=\"subst\">$errno</span>)&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 构造 GET 请求的数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setLine</span>(<span class=\"string\">&#x27;GET&#x27;</span>); <span class=\"comment\">// 设置请求行 (请求头信息已经在构造函数中设置)</span></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">request</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;response;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 构造 POST 请求的数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\"><span class=\"variable\">$body</span> = <span class=\"keyword\">array</span>(<span class=\"params\"></span>)</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setLine</span>(<span class=\"string\">&#x27;POST&#x27;</span>); <span class=\"comment\">// 设置请求行 (请求头信息已经在构造函数中设置)</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置 Content-type</span></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setHeader</span>(<span class=\"string\">&#x27;Content-type: application/x-www-form-urlencoded&#x27;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 先设置主体信息 (与GET不同)</span></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setBody</span>(<span class=\"variable\">$body</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 然后计算 Content-length</span></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">setHeader</span>(<span class=\"string\">&#x27;Content-length: &#x27;</span> . <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$this</span>-&gt;body[<span class=\"number\">0</span>])); </span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">request</span>();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 请求</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 把 请求行、头信息、实体信息 合并到一个数组里，便于拼接</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$req</span> = <span class=\"title function_ invoke__\">array_merge</span>(<span class=\"variable\">$this</span>-&gt;line,<span class=\"variable\">$this</span>-&gt;header,<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;&#x27;</span>), <span class=\"variable language_\">$this</span>-&gt;body, <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">// print_r($req); </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$req</span> = <span class=\"title function_ invoke__\">implode</span>(<span class=\"built_in\">self</span>::<span class=\"variable constant_\">CRLF</span>, <span class=\"variable\">$req</span>); <span class=\"comment\">// 拼接</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// echo $req; exit; // 调试是否拼接成功</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"title function_ invoke__\">fwrite</span>(<span class=\"variable\">$this</span>-&gt;fh,<span class=\"variable\">$req</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (!<span class=\"title function_ invoke__\">feof</span>(<span class=\"variable\">$this</span>-&gt;fh)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">$this</span>-&gt;response .= <span class=\"title function_ invoke__\">fread</span>(<span class=\"variable\">$this</span>-&gt;fh, <span class=\"number\">1024</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">close</span>(); <span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"title function_ invoke__\">fclose</span>(<span class=\"variable\">$this</span>-&gt;fh);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -----------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">// (三) 脚本执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_time_limit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$url</span> = <span class=\"string\">&#x27;http://mc.iproute.cn:16849/index.php&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>; <span class=\"variable\">$i</span>&lt;<span class=\"number\">10</span>; <span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 随机</span></span><br><span class=\"line\">\t<span class=\"variable\">$str</span> = <span class=\"title function_ invoke__\">str_shuffle</span>(<span class=\"string\">&#x27;abcdefghijklmnopqrst0123456789&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$username</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$str</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$content</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$str</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable\">$http</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Http</span>(<span class=\"variable\">$url</span>); <span class=\"comment\">// 创建了应该http对象</span></span><br><span class=\"line\">\t<span class=\"variable\">$http</span>-&gt;<span class=\"title function_ invoke__\">post</span>(<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;datatable1_length&#x27;</span>=&gt;<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$username</span> . <span class=\"variable\">$content</span> ),<span class=\"string\">&#x27;username&#x27;</span>=&gt;<span class=\"variable\">$username</span>,<span class=\"string\">&#x27;content&#x27;</span>=&gt;<span class=\"variable\">$content</span> ,<span class=\"string\">&#x27;submit&#x27;</span>=&gt;<span class=\"string\">&#x27;%E6%8F%90%E4%BA%A4&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"variable\">$username</span>, <span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>, <span class=\"variable\">$content</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">usleep</span>(<span class=\"number\">2000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/../images/052900.png\"></p>\n<h1 id=\"6-3\"><a href=\"#6-3\" class=\"headerlink\" title=\"6.3\"></a>6.3</h1><h3 id=\"HTTP协议模拟登录发帖\"><a href=\"#HTTP协议模拟登录发帖\" class=\"headerlink\" title=\"HTTP协议模拟登录发帖\"></a>HTTP协议模拟登录发帖</h3><blockquote>\n<p>HTTP协议为无状态协议，每个HTTP请求都是独立的，服务器不会保存任何关于客户端之前请求的信息。这种设计简化了协议，但无法维持状态(通常用cookie和session技术在客户端和服务器间维护状态信息)。</p>\n</blockquote>\n<blockquote>\n<p>验证码识别，得暴力破解，属于“图像识别的范畴”</p>\n</blockquote>\n<p><em><strong>总结一下</strong></em></p>\n<ul>\n<li><strong>抓包 模拟</strong></li>\n</ul>\n<h3 id=\"二-Referer\"><a href=\"#二-Referer\" class=\"headerlink\" title=\"(二) Referer\"></a>(二) Referer</h3><blockquote>\n<p><strong>e.g.</strong></p>\n<ul>\n<li>站外引用图片</li>\n<li>网站统计用户来源</li>\n</ul>\n</blockquote>\n<p><em><strong>Referer:</strong></em> 网页的来源，即上一页的地址<br>如果是在浏览器输入地址回车进入网站，则无referer头</p>\n<h4 id=\"1-配置-Apache服务器，实现图片防盗链\"><a href=\"#1-配置-Apache服务器，实现图片防盗链\" class=\"headerlink\" title=\"(1) 配置 Apache服务器，实现图片防盗链\"></a>(1) 配置 Apache服务器，实现图片防盗链</h4><blockquote>\n<p>实现：</p>\n<ul>\n<li>URL重写：在 Web 服务器层面，根据 HTTP 协议的 Referer 头信息来判断，将来自站外的网站统一写到一个很小的防盗链提醒图片上的</li>\n<li>具体步骤：<ol>\n<li>打开 Apache ,重写模块——去除 mod_rewrite 前的 ‘#’,并重启 Apache</li>\n<li>在需要防盗的网站或目录下，写 .htaccess 文件，并<strong>指定防盗规则</strong></li>\n</ol>\n<ul>\n<li>何种情况重写：<ul>\n<li>jpeg&#x2F;jpg&#x2F;gif&#x2F;png图片时<ul>\n<li>referer头与localhost不匹配时</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>怎么重写？<br>  - 统一 rewrite 到防盗链图片</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>实操</p>\n<ul>\n<li>重写模块</li>\n<li><img src=\"/../images/060301.png\"></li>\n<li>写 .htaccess 文件 并指定防盗规则</li>\n<li><img src=\"/../images/060304.png\"></li>\n<li>效果<ul>\n<li>html源码</li>\n<li><img src=\"/../images/060305.png\"></li>\n</ul>\n</li>\n<li>localhost访问<ul>\n<li><img src=\"/../images/060303.png\"></li>\n</ul>\n</li>\n<li>站外访问(例中是通过本机IP)<ul>\n<li><img src=\"/../images/060302.png\"></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"6-4\"><a href=\"#6-4\" class=\"headerlink\" title=\"6.4\"></a>6.4</h1><h4 id=\"2-突破防盗链盗图\"><a href=\"#2-突破防盗链盗图\" class=\"headerlink\" title=\"(2) 突破防盗链盗图\"></a>(2) 突破防盗链盗图</h4><blockquote>\n<p>php源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t<span class=\"keyword\">require</span>(<span class=\"string\">&#x27;./http.class.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// $http = new Http(&#x27;http://192.168.10.100/0603/a.png&#x27;);</span></span><br><span class=\"line\">\t<span class=\"variable\">$http</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Http</span>(<span class=\"string\">&#x27;http://localhost/0603/a.png&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable\">$http</span>-&gt;<span class=\"title function_ invoke__\">setHeader</span>(<span class=\"string\">&#x27;Referer: http://localhost&#x27;</span>); <span class=\"comment\">//伪造Referer 突破防盗链</span></span><br><span class=\"line\">\t<span class=\"variable\">$res</span> = <span class=\"variable\">$http</span>-&gt;<span class=\"title function_ invoke__\">get</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  HTTP 响应中提取出所&gt; 盗 图片，并将其保存到本地文件 c.png 中</span></span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&#x27;./c.png&#x27;</span>,<span class=\"title function_ invoke__\">substr</span>(<span class=\"title function_ invoke__\">strstr</span>(<span class=\"variable\">$res</span>,<span class=\"string\">&quot;\\r\\n\\r\\n&quot;</span>),<span class=\"number\">4</span>)); </span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 待完善：判断路径或 response 的 mime头信息，确定图片类型</span></span><br><span class=\"line\">\t<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>直接盗图<ul>\n<li><img src=\"/../images/060402.png\"></li>\n</ul>\n</li>\n<li>伪造Referer 突破防盗链<ul>\n<li><img src=\"/../images/060403.png\"></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"六、-优化\"><a href=\"#六、-优化\" class=\"headerlink\" title=\"六、 优化\"></a>六、 优化</h2><h3 id=\"一-缓存控制\"><a href=\"#一-缓存控制\" class=\"headerlink\" title=\"(一) 缓存控制\"></a>(一) 缓存控制</h3><blockquote>\n<p>下载图片时<br>第1次请求 <strong>200 OK</strong><br>第2次请求 <strong>304 NOT Modified</strong> 未修改状态</p>\n</blockquote>\n<h1 id=\"6-4-1\"><a href=\"#6-4-1\" class=\"headerlink\" title=\"6.4\"></a>6.4</h1><blockquote>\n<p>HTTP缓存控制是Web性能优化的重要手段，它通过减少服务器负载和加快内容传输速度来提升用户体验<br>HTTP协议通过几种不同的头部字段来实现缓存控制</p>\n<ul>\n<li><p><strong>Last-Modified&#x2F;If-Modified-Since</strong>: Last-Modified是服务器响应头，指明了资源的最后修改时间。浏览器可以在后续的请求中带上If-Modified-Since头部，将最后修改时间发送给服务器，服务器根据这个时间决定是否返回新的内容，如果资源没有改变，服务器会返回一个304 Not Modified状态码，告知浏览器使用其缓存中的资源。</p>\n</li>\n<li><p><strong>ETag&#x2F;If-None-Match</strong>: ETag是服务器响应头，包含了资源的版本标识符。浏览器可以在后续的请求中带上If-None-Match头部，服务器会对比这个标识符和资源的当前标识符，如果相同，则返回304状态码，表示资源未改变。</p>\n<ul>\n<li><img src=\"/../images/060501.jpg\"></li>\n<li><img src=\"/../images/060502.jpg\"></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<h4 id=\"拓展-1-：\"><a href=\"#拓展-1-：\" class=\"headerlink\" title=\"拓展(1)：\"></a>拓展(1)：</h4><ul>\n<li><p>问：网站较大，有多台缓存服务器，那么这多台缓存服务器如何处理主服务器上的文件？</p>\n<ul>\n<li>是否缓存？</li>\n<li>缓存多久？</li>\n</ul>\n</li>\n<li><p>答：在主服务器打开 Apache 的 Expires 拓展，利用该拓展来控制来图片、css、html等文件的缓存与否及缓存生命周期</p>\n<ul>\n<li><strong>Cache-Control</strong>: 是HTTP1.1中引入的头部，它提供了更细粒度的缓存控制</li>\n<li><strong>Expires</strong>：这是HTTP1.0中使用的头部，它指定了一个日期&#x2F;时间，在此时间之前，缓存被认为是有效的。如果浏览器访问一个带有Expires头部的资源，并且当前时间在Expires指定的时间之前，浏览器将会使用缓存中的资源，而不是重新从服务器获取</li>\n</ul>\n</li>\n<li><p>示例： \t</p>\n<ul>\n<li><p><strong>.htaccess</strong> 配置文件</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExpiresActive On</span><br><span class=\"line\">ExpiresByType image/jpeg &quot;access plus 30 days&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>效果 <img src=\"/../images/060500.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"拓展-2-：\"><a href=\"#拓展-2-：\" class=\"headerlink\" title=\"拓展(2)：\"></a>拓展(2)：</h4><ul>\n<li><p>情景：有些资源，如个人信息，不允许缓存服务器缓存，必须到主服务器请求</p>\n</li>\n<li><p>示例： \t</p>\n<ul>\n<li><strong>.htaccess</strong> 配置文件</li>\n</ul>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExpiresActive On</span><br><span class=\"line\">ExpiresByType image/jpeg &quot;access plus 30 days&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;FilesMatch &quot;\\.(gif)$&quot;&gt;</span><br><span class=\"line\">header set Cache-Control &quot;no-store,must-revalidate&quot;</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>配置使得JPEG图片可以被缓存30天，而GIF图片则不会被缓存，每次请求都需要从服务器重新加载</p>\n<pre><code>- 效果 ![](../images/060503.png)\n</code></pre>\n</blockquote>\n<p>&nbsp;</p>\n<h3 id=\"二-内容压缩\"><a href=\"#二-内容压缩\" class=\"headerlink\" title=\"(二) 内容压缩\"></a>(二) 内容压缩</h3><h4 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a>概述：</h4><blockquote>\n<ul>\n<li>引入 </li>\n<li><img src=\"/../images/060504.png\"></li>\n<li>HTTP内容压缩是一种优化网络传输的技术，它通过减少服务器响应的大小来提高网页加载速度。通常是通过在服务器和客户端之间传输数据之前，使用某种算法来压缩数据来实现的。</li>\n<li>以下是一些常见的HTTP内容压缩方法：<ul>\n<li><strong>GZIP</strong></li>\n<li><strong>Deflate</strong></li>\n<li><strong>Brotli</strong></li>\n</ul>\n</li>\n<li>原理：服务器返回压缩内容，客服端接收压缩文件，解压缩，再渲染页面。而Content-Length是压缩后的长度。</li>\n</ul>\n</blockquote>\n<h4 id=\"实操：-1\"><a href=\"#实操：-1\" class=\"headerlink\" title=\"实操：\"></a>实操：</h4><blockquote>\n<p>在 Apache 启用压缩功能：</p>\n<ol>\n<li>开启 Deflate 模块</li>\n<li>配置 conf 文件 (写入下列代码)<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ifmodule mod_deflate.c&gt;</span><br><span class=\"line\">DeflateCompressionLevel 6 \t\t\t\t# 压缩等级1~9 推荐6</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/plain</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/html</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/css</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/javascript</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/xhtml+xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/rss+xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/atom xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/x-javascript</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/x-httpd-php</span><br><span class=\"line\">AddOutputFilterByType DEFLATE image/svg+xml</span><br><span class=\"line\">&lt;/ifmodule&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</blockquote>\n<blockquote>\n<p>服务器怎么知道我们的服务器支持 gzip 或其他压缩方式？<br><img src=\"/../images/060505.png\"></p>\n</blockquote>\n<blockquote>\n<p>小技巧：<br>做采集时，不发送 Accept-Encoding 信息，这样采集的是源码。而用 gzip 采集以提高速度，再用 PHP 解压 gzip 的内容。</p>\n</blockquote>\n<p>&nbsp;</p>\n<h3 id=\"三-反向Ajax\"><a href=\"#三-反向Ajax\" class=\"headerlink\" title=\"(三) 反向Ajax\"></a>(三) 反向Ajax</h3><blockquote>\n<p>HTTP协议与持久链接 + 分块传输 ——&gt; 反向Ajax (comet, server push, 服务器推技术)</p>\n<p>应用场景：即使聊天</p>\n<ul>\n<li><strong>持久连接（Persistent Connections）</strong>： 也称为HTTP keep-alive，允许客户端和服务器在多次请求&#x2F;响应之间保持连接打开，减少了建立和关闭连接的开销。在HTTP&#x2F;1.1中，所有连接默认是持久的，除非显式地指定它们应该关闭。</li>\n<li><strong>分块传输编码（Chunked Transfer Encoding）</strong>： 允许服务器发送不确定长度的响应，即服务器可以分块发送数据，而无需事先知道整个响应的数据大小。每个数据块都会带有长度值，客户端会根据这些长度值来接收数据块，直到遇到一个零长度的块，表示传输完成。<br>将持久连接和分块传输编码结合使用，服务器可以在一个响应中发送多个数据块，而连接保持开放状态。服务器可以在任何时间点发送新的数据块，而不需要客户端发起新的请求。这种方式允许服务器主动推送数据到客户端，从而实现了反向Ajax的效果。</li>\n</ul>\n<p>例如，<strong>长轮询（Long Polling）</strong> 就是利用了持久连接和分块传输编码的一种技术。客户端发起一个请求到服务器，服务器保持这个请求打开，直到有新数据可发送。服务器发送数据后，关闭这个请求，客户端处理完数据后再立即发起一个新的请求。这样，服务器可以在数据可用时立即将其推送到客户端，实现了类似反向Ajax的功能。</p>\n</blockquote>\n","categories":[],"tags":[{"name":"网络知识","slug":"网络知识","permalink":"http://example.com/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"}]},{"title":"Windows cmd指令","date":"2024-05-23T09:58:08.000Z","path":"2024/05/23/windows_cmd指令/","text":"查看当前路径 cd 进入指定路径 cd path 返回上一层路径 cd .. 返回上两层路径 cd ..&#x2F;.. 查看当前路径下的目录 dir","content":"<blockquote>\n<ul>\n<li>查看当前路径<ul>\n<li>cd</li>\n</ul>\n</li>\n<li>进入指定路径<ul>\n<li>cd path</li>\n</ul>\n</li>\n<li>返回上一层路径<ul>\n<li>cd ..</li>\n</ul>\n</li>\n<li>返回上两层路径<ul>\n<li>cd ..&#x2F;..</li>\n</ul>\n</li>\n<li>查看当前路径下的目录<ul>\n<li>dir<br/></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>","categories":[],"tags":[{"name":"语法","slug":"语法","permalink":"http://example.com/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"Markdown语法","date":"2024-05-23T04:46:38.000Z","path":"2024/05/23/Markdown语法学习 5.13/","text":"一、基本语法二、标题语法 分类 #一级标题#二级标题… 注意事项“#” 与 标题间用一个空格分隔 plus: plus:一级标题 plus:二级标题 三、段落语法 用制表符缩进段落 AAA BBB sada das dsadsa 四、换行语法末尾空两个或多个空格 / 用HTML的&lt;br&gt;标签 五、强调语法 粗体前后添加2个 星号 或 下划线 斜体前后添加1个 星号 或 下划线 斜粗体前后添加3个 星号 或 下划线 六、引用语法 创建块引用 在段落前加 多段落引用——段落之间的空表添加一个“***&gt;***” 嵌套块引用——在要嵌套的段落前添加一个“***&gt;&gt;***” 包含其他元素的引用 七、列表语法 有序列表 列表前添加数字并紧跟英文句点 数字不必按顺序，但列表以数字1起始 First item Second item Third item A B C a b Fourth item 无序列表 列表前加破折号(-),星号(*)或加号(+) 缩进创建嵌套列表 A B a b 嵌套其他元素 create a project input the following codes 12#inculde &lt;iostream&gt;using namespace std; ... s 八、代码语法 用反引号(&#96;)包裹想表示为单词或短语的代码 e.g. usingnamespace 代码中包含一个或多个反引号 用双反引号(&#96;&#96;)包裹 e.g. using namespace `std` 将代码块的每行至少缩进一个制表符或四个空格 在代码块前后使用三个反引号(&#96;&#96;&#96;)或三个波浪号(~~~) 高亮——指定语言 #include &lt;iostream&gt; using namespace std; int main() &#123; cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; endl; return 0; &#125; 九、分割线语法单独的一行使用三个或多个星号(*)、破折号(-)或下划线(_)a b 十、链接语法 链接文本放在括号内，链接地址放在后面的括号中，链接title可选 语法 [超链接显示名](超链接地址 &quot;超链接title&quot;) e.g. 这是一个链接百度 网址和Email地址 用尖括号(&lt;&gt;)可以把URL或email地址变成可点击的链接https://www.baidu.com/&#109;&#x61;&#105;&#108;&#x40;&#113;&#113;&#46;&#x63;&#x6f;&#109; 带格式化的链接 强调链接，在链接语法前后加星号 百度 将链接表示为代码，在方括号内加反引号 See the section on thie code 引用类型链接分为两部分：与文本保持内联的部分 和 存储在文件中其他位置的部分，使文本易于阅读 语法 第一部分 [显示为链接的文本] [标签] (标签指向存储在文档其他位置的链接) - 第二部分[标签]: &lt;链接的URL &quot;可选title&quot;&gt;(标签后紧跟一个冒号和至少一个空格) - 注： 链接的第二部分可放在文档的任何位置(出现的段落之后 或 文档的末尾(例如尾注或脚注)) - e.g. &gt; 文本中出现的 [引用内容][1] &gt; 参考引用： &gt; [1]: https://www.baidu.com/ s [显示文本] [1][1]: https://www.baidu.com/em 不支持好像 十一、图片语法 语法 ![替代文本](图片链接 &quot;可选标题&quot;) 十二、转义字符 要显示原本由于格式化的字符，在字符前添加反斜杠 十三、内嵌HTML标签 e.g.This word is bold.This word is italic. &nbsp; 边用边学换行 (1) &amp;nbsp;&nbsp; (2) &lt;br&#x2F;&gt; &nbsp; 插入图片 基本语法： ![图片描述 可省略](图片地址：URL连接或者本地链接) &nbsp; 表格 (1)使用竖线 ‘|’ 来分隔列，并使用连字符 ‘-‘ 来分隔表头和表行(表头和表行之间的分隔线至少要有三个连字符 -) 基本示例：| 标题 1 | 标题 2 | 标题 3 ||——-|——-|——-|| 单元格 1 | 单元格 2 | 单元格 3 || 单元格 4 | 单元格 5 | 单元格 6 | 将产生如下表格： 标题 1 标题 2 标题 3 单元格 1 单元格 2 单元格 3 单元格 4 单元格 5 单元格 6 (2)表格对齐在分隔线中添加冒号 ‘:’。 冒号放在分隔线的左侧将左对齐该列，放在右侧将右对齐该列，同时放在两侧将居中对齐该列 基本示例：| 左对齐 | 居中对齐 | 右对齐 ||:——|:——: |——: || 单元格 1 | 单元格 2 | 单元格 3 || 单元格 4 | 单元格 5 | 单元格 6 | 将产生如下单元格 左对齐 居中对齐 右对齐 单元格 1 单元格 2 单元格 3 单元格 4 单元格 5 单元格 6","content":"<h1 id=\"一、基本语法\"><a href=\"#一、基本语法\" class=\"headerlink\" title=\"一、基本语法\"></a>一、基本语法</h1><h1 id=\"二、标题语法\"><a href=\"#二、标题语法\" class=\"headerlink\" title=\"二、标题语法\"></a>二、标题语法</h1><blockquote>\n<ul>\n<li><p>分类</p>\n<p>#一级标题<br>#二级标题<br>…</p>\n</li>\n<li><p>注意事项<br>“#” 与 标题间用一个空格分隔</p>\n</li>\n</ul>\n<p>plus:</p>\n<ul>\n<li><h1 id=\"plus-一级标题\"><a href=\"#plus-一级标题\" class=\"headerlink\" title=\"plus:一级标题\"></a>plus:一级标题</h1></li>\n<li><h2 id=\"plus-二级标题\"><a href=\"#plus-二级标题\" class=\"headerlink\" title=\"plus:二级标题\"></a>plus:二级标题</h2></li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>\n\n<h1 id=\"三、段落语法\"><a href=\"#三、段落语法\" class=\"headerlink\" title=\"三、段落语法\"></a>三、段落语法</h1><blockquote>\n<p>用制表符缩进段落</p>\n</blockquote>\n<pre><code>AAA\nBBB\nsada das\ndsadsa\n</code></pre>\n<h1 id=\"四、换行语法\"><a href=\"#四、换行语法\" class=\"headerlink\" title=\"四、换行语法\"></a>四、换行语法</h1><pre><code>末尾空两个或多个空格 / 用HTML的&lt;br&gt;标签\n</code></pre>\n<h1 id=\"五、强调语法\"><a href=\"#五、强调语法\" class=\"headerlink\" title=\"五、强调语法\"></a>五、强调语法</h1><blockquote>\n<ul>\n<li><p><strong>粗体</strong><br>前后添加2个 <strong>星号</strong> 或 <strong>下划线</strong></p>\n</li>\n<li><p><em>斜体</em><br>前后添加1个 <em>星号</em> 或 <em>下划线</em></p>\n</li>\n<li><p><em><strong>斜粗体</strong></em><br>前后添加3个 <em><strong>星号</strong></em> 或 <em><strong>下划线</strong></em></p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"六、引用语法\"><a href=\"#六、引用语法\" class=\"headerlink\" title=\"六、引用语法\"></a>六、引用语法</h1><blockquote>\n<p>创建块引用 在段落前加 </p>\n<ul>\n<li><p>多段落引用——段落之间的空表添加一个“***&gt;***”</p>\n</li>\n<li><p>嵌套块引用——在要嵌套的段落前添加一个“***&gt;&gt;***”</p>\n</li>\n<li><p>包含其他元素的引用</p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"七、列表语法\"><a href=\"#七、列表语法\" class=\"headerlink\" title=\"七、列表语法\"></a>七、列表语法</h1><blockquote>\n<p><em><strong>有序列表</strong></em></p>\n<ul>\n<li>列表前添加数字并紧跟英文句点</li>\n<li>数字不必按顺序，但列表以数字1起始</li>\n</ul>\n</blockquote>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item<ol>\n<li>A</li>\n<li>B</li>\n<li>C<ol>\n<li>a</li>\n<li>b</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>Fourth item</li>\n</ol>\n<blockquote>\n<p><em><strong>无序列表</strong></em></p>\n<ul>\n<li>列表前加破折号(-),星号(*)或加号(+)</li>\n<li>缩进创建嵌套列表</li>\n</ul>\n</blockquote>\n<ul>\n<li>A</li>\n</ul>\n<ul>\n<li>B<ul>\n<li>a<ul>\n<li>b</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><em><strong>嵌套其他元素</strong></em></p>\n</blockquote>\n<ol>\n<li>create a project</li>\n<li>input the following codes <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#inculde <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br></pre></td></tr></table></figure>\n<pre><code> ...\n</code></pre>\n</li>\n<li>s</li>\n</ol>\n<h1 id=\"八、代码语法\"><a href=\"#八、代码语法\" class=\"headerlink\" title=\"八、代码语法\"></a>八、代码语法</h1><ul>\n<li>用反引号(&#96;)包裹想表示为单词或短语的代码<ul>\n<li>e.g.<br>  <code>usingnamespace</code></li>\n</ul>\n</li>\n<li>代码中包含一个或多个反引号 用双反引号(&#96;&#96;)包裹<ul>\n<li>e.g.<br>  <code>using namespace `std`</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>将代码块的每行至少缩进一个制表符或四个空格</li>\n<li>在代码块前后使用三个反引号(&#96;&#96;&#96;)或三个波浪号(~~~)</li>\n<li>高亮——指定语言</li>\n</ul>\n</blockquote>\n<pre><code class=\"C++\">#include &lt;iostream&gt;\nusing namespace std;\nint main()\n&#123;\n    cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; endl;\n    return 0;\n&#125;\n</code></pre>\n<ul>\n<li></li>\n</ul>\n<h1 id=\"九、分割线语法\"><a href=\"#九、分割线语法\" class=\"headerlink\" title=\"九、分割线语法\"></a>九、分割线语法</h1><p>单独的一行使用三个或多个星号(*)、破折号(-)或下划线(_)<br>a</p>\n<hr>\n<p>b</p>\n<hr>\n<h1 id=\"十、链接语法\"><a href=\"#十、链接语法\" class=\"headerlink\" title=\"十、链接语法\"></a>十、链接语法</h1><ul>\n<li><p>链接文本放在括号内，链接地址放在后面的括号中，链接title可选</p>\n<ul>\n<li>语法<br>  <code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code><ul>\n<li>e.g. 这是一个链接<a href=\"https://www.baidu.com/\" title=\"中国最大的搜索引擎\">百度</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>网址和Email地址</p>\n<ul>\n<li>用尖括号(&lt;&gt;)可以把URL或email地址变成可点击的链接<br><a href=\"https://www.baidu.com/\">https://www.baidu.com/</a><br><a href=\"mailto:&#109;&#x61;&#105;&#108;&#x40;&#113;&#113;&#46;&#x63;&#x6f;&#109;\">&#109;&#x61;&#105;&#108;&#x40;&#113;&#113;&#46;&#x63;&#x6f;&#109;</a></li>\n</ul>\n</li>\n<li><p>带格式化的链接</p>\n<ul>\n<li>强调链接，在链接语法前后加星号<ul>\n<li><em><strong><a href=\"https://www.baidu.com/\">百度</a></strong></em></li>\n</ul>\n</li>\n<li>将链接表示为代码，在方括号内加反引号<ul>\n<li>See the section on thie <a href=\"#code\"><code>code</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>引用类型链接<br>分为两部分：与文本保持内联的部分 和 存储在文件中其他位置的部分，使文本易于阅读</p>\n<ul>\n<li>语法<ul>\n<li>第一部分</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><code>[显示为链接的文本] [标签]</code> (标签指向存储在文档其他位置的链接)<br>        - 第二部分<br><code>[标签]: &lt;链接的URL &quot;可选title&quot;&gt;</code><br>(标签后紧跟一个冒号和至少一个空格)<br>        - 注： 链接的第二部分可放在文档的任何位置(出现的段落之后 或 文档的末尾(例如尾注或脚注))<br>    - e.g.<br>        &gt; 文本中出现的 [引用内容][1]<br>        &gt; 参考引用：<br>        &gt; [1]: <a href=\"https://www.baidu.com/\">https://www.baidu.com/</a></p>\n<p>s [显示文本] [1]<br>[1]: <a href=\"https://www.baidu.com/\">https://www.baidu.com/</a><br>em 不支持好像</p>\n<h1 id=\"十一、图片语法\"><a href=\"#十一、图片语法\" class=\"headerlink\" title=\"十一、图片语法\"></a>十一、图片语法</h1><ul>\n<li>语法</li>\n</ul>\n<p><code>![替代文本](图片链接 &quot;可选标题&quot;)</code></p>\n<h1 id=\"十二、转义字符\"><a href=\"#十二、转义字符\" class=\"headerlink\" title=\"十二、转义字符\"></a>十二、转义字符</h1><ul>\n<li>要显示原本由于格式化的字符，在字符前添加反斜杠</li>\n</ul>\n<h1 id=\"十三、内嵌HTML标签\"><a href=\"#十三、内嵌HTML标签\" class=\"headerlink\" title=\"十三、内嵌HTML标签\"></a>十三、内嵌HTML标签</h1><ul>\n<li>e.g.<br>This <strong>word</strong> is bold.<br>This <em>word</em> is italic.</li>\n</ul>\n<p>&nbsp;</p>\n<h1 id=\"边用边学\"><a href=\"#边用边学\" class=\"headerlink\" title=\"边用边学\"></a>边用边学</h1><h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><blockquote>\n<ul>\n<li><strong>(1)</strong> &amp;nbsp;<br>&nbsp; </li>\n<li><strong>(2)</strong> &lt;br&#x2F;&gt;<br/></li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h4><blockquote>\n<ul>\n<li>基本语法：<ul>\n<li>![图片描述 可省略](图片地址：URL连接或者本地链接)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h4><blockquote>\n<p><strong>(1)使用竖线 <strong>‘|’</strong> 来分隔列，并使用连字符 <strong>‘-‘</strong> 来分隔表头和表行(表头和表行之间的分隔线至少要有三个连字符 -)</strong></p>\n<p>基本示例：<br><strong>| 标题 1 | 标题 2 | 标题 3 |</strong><br><strong>|——-|——-|——-|</strong><br><strong>| 单元格 1 | 单元格 2 | 单元格 3 |</strong><br><strong>| 单元格 4 | 单元格 5 | 单元格 6 |</strong></p>\n<p>  将产生如下表格：</p>\n<table>\n<thead>\n<tr>\n<th>标题 1</th>\n<th>标题 2</th>\n<th>标题 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格 1</td>\n<td>单元格 2</td>\n<td>单元格 3</td>\n</tr>\n<tr>\n<td>单元格 4</td>\n<td>单元格 5</td>\n<td>单元格 6</td>\n</tr>\n</tbody></table>\n<p><strong>(2)表格对齐</strong><br>在分隔线中添加冒号 <strong>‘:’</strong>。 冒号放在分隔线的左侧将左对齐该列，放在右侧将右对齐该列，同时放在两侧将居中对齐该列</p>\n<p>基本示例：<br><strong>| 左对齐 | 居中对齐 | 右对齐 |</strong><br><strong>|:——|:——: |——: |</strong><br><strong>| 单元格 1 | 单元格 2 | 单元格 3 |</strong><br><strong>| 单元格 4 | 单元格 5 | 单元格 6 |</strong></p>\n<p>将产生如下单元格</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th align=\"center\">居中对齐</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格 1</td>\n<td align=\"center\">单元格 2</td>\n<td align=\"right\">单元格 3</td>\n</tr>\n<tr>\n<td align=\"left\">单元格 4</td>\n<td align=\"center\">单元格 5</td>\n<td align=\"right\">单元格 6</td>\n</tr>\n</tbody></table>\n</blockquote>\n","categories":[],"tags":[{"name":"语法","slug":"语法","permalink":"http://example.com/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"网络工作原理","date":"2024-05-23T04:46:38.000Z","path":"2024/05/23/Network-working-principle/","text":"ISP： 即互联网服务提供商（例如国内各大运营商），搭建、维护相关设施，提供互联网服务。需要投入大量成本，故ISP是有偿提供网络接入，所以宽带要限速、计费 &nbsp; NAT、端口映射 NAT： 网络地址转换，局域网内设备的IP地址被网关映射为统一地址，接入网络，但存在无法精准传送数据的问题。 端口映射： 在IP地址后面增加一串端口号，网关以不同的端口与外网交互，把端口号映射给局域网内的各个设备.传输数据时，映射IP地址和端口号，来实现以共同的IP精准传送数据。 &nbsp; 局域网： 若能互联的干台设备组成的网络 广域网： 设备数量庞大的局域网 IP地址： 每台设备都有一个的独自的数字虚拟地址，以联网时辨别、区分于其他设备 分类 公有IP &#x2F; 私有IP： 网关拥有的可以直接在广域网上交互数据的IP地址 &#x2F; 只能局域网内有效使用（能区分于其他设备）的IP地址 IPV4 &#x2F; IPV6： IPV4和IPV6是两个不同协议，不能直接互通，需要借助其他设备做转换和映射，导致短时间内IPV6无法完全取代IPV4，但IPV6是大势所趋。 &nbsp; - IPV4： 32位二进制构成，理论上能提供 2^32(约42.28亿) 个地址。为方便记忆、输入，将每8位二进制分为1组，转换为十进制，转化成4个0~255的数字。但一些地址特殊用途，保留下来不提供给大众使用，真正可用的IP地址只有36.47亿个，而当今世界约有80亿人，很多人都有接入互联网的需求，且每个人的设备不止一台(PC,laptop,iPad,mobile phone)，自2011年底，IPV4已经面临枯竭。&nbsp; - IPV6： 由8组四位十六进制组合而成，理论上能 3.4*10^38 个IP地址，足够为地球上每一个沙子发一个独立IP。 &nbsp; 域名： 每个IP地址对应一个域名，以便于记忆和输入. DNS服务器： 用于查询域名对应的IP地址。电脑自动或许宽带运营商DNS服务器的IP地址，或到指定的公共DNS服务器上查询。若能查到，DNS服务器会返回对于的IP地址，否则，这台DNS服务器会问根域名 服务器， &nbsp; 参考(1)https://www.bilibili.com/video/BV1DD4y127r4/?spm_id_from=trigger_reload&amp;vd_source=df38266eedfef61aa7370319919d94d7&nbsp;(2)https://www.bilibili.com/video/BV1VE41187N7/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=df38266eedfef61aa7370319919d94d7","content":"<blockquote>\n<ul>\n<li><em><strong>ISP：</strong></em> 即互联网服务提供商（例如国内各大运营商），搭建、维护相关设施，提供互联网服务。需要投入大量成本，故ISP是有偿提供网络接入，所以宽带要限速、计费</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<ul>\n<li><em><strong>NAT、端口映射</strong></em><ul>\n<li><strong>NAT：</strong> 网络地址转换，局域网内设备的IP地址被网关映射为统一地址，接入网络，但存在无法精准传送数据的问题。</li>\n<li><strong>端口映射：</strong> 在IP地址后面增加一串端口号，网关以不同的端口与外网交互，把端口号映射给局域网内的各个设备.传输数据时，映射IP地址和端口号，来实现以共同的IP精准传送数据。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>\n<p>&nbsp;</p>\n<blockquote>\n<ul>\n<li><em><strong>局域网：</strong></em> 若能互联的干台设备组成的网络<ul>\n<li><strong>广域网：</strong> 设备数量庞大的局域网</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<br/>\n\n<blockquote>\n<ul>\n<li><em><strong>IP地址：</strong></em> 每台设备都有一个的独自的数字虚拟地址，以联网时辨别、区分于其他设备<ul>\n<li><strong>分类</strong><ul>\n<li><strong>公有IP &#x2F; 私有IP：</strong> 网关拥有的可以直接在广域网上交互数据的IP地址 &#x2F; 只能局域网内有效使用（能区分于其他设备）的IP地址</li>\n<li><strong>IPV4 &#x2F; IPV6：</strong> IPV4和IPV6是两个不同协议，不能直接互通，需要借助其他设备做转换和映射，导致短时间内IPV6无法完全取代IPV4，但IPV6是大势所趋。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;<br>     - <strong>IPV4：</strong> 32位二进制构成，理论上能提供 2^32(约42.28亿) 个地址。为方便记忆、输入，将每8位二进制分为1组，转换为十进制，转化成4个0~255的数字。但一些地址特殊用途，保留下来不提供给大众使用，真正可用的IP地址只有36.47亿个，而当今世界约有80亿人，很多人都有接入互联网的需求，且每个人的设备不止一台(PC,laptop,iPad,mobile phone)，自2011年底，IPV4已经面临枯竭。<br>&nbsp;<br>     - <strong>IPV6：</strong> 由8组四位十六进制组合而成，理论上能 3.4*10^38 个IP地址，足够为地球上每一个沙子发一个独立IP。</p>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<ul>\n<li><em><strong>域名：</strong></em> 每个IP地址对应一个域名，以便于记忆和输入.</li>\n<li><em><strong>DNS服务器：</strong></em> 用于查询域名对应的IP地址。电脑自动或许宽带运营商DNS服务器的IP地址，或到指定的公共DNS服务器上查询。若能查到，DNS服务器会返回对于的IP地址，否则，这台DNS服务器会问根域名 服务器，</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<hr>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><strong>(1)</strong><br><a href=\"https://www.bilibili.com/video/BV1DD4y127r4/?spm_id_from=trigger_reload&amp;vd_source=df38266eedfef61aa7370319919d94d7\">https://www.bilibili.com/video/BV1DD4y127r4/?spm_id_from=trigger_reload&amp;vd_source=df38266eedfef61aa7370319919d94d7</a><br>&nbsp;<br><strong>(2)</strong><br><a href=\"https://www.bilibili.com/video/BV1VE41187N7/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=df38266eedfef61aa7370319919d94d7\">https://www.bilibili.com/video/BV1VE41187N7/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=df38266eedfef61aa7370319919d94d7</a></p>\n","categories":[],"tags":[{"name":"网络知识","slug":"网络知识","permalink":"http://example.com/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"}]},{"title":"Hexo 博客","date":"2024-05-23T04:44:52.000Z","path":"2024/05/23/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]}]