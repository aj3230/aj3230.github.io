[{"title":"Test","date":"2024-05-26T09:10:46.000Z","path":"2024/05/26/Test/","text":"Hello","content":"<p>Hello</p>\n","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"看个晚会放松一下","date":"2024-05-24T16:00:00.000Z","path":"2024/05/25/看个晚会放松一下/","text":"时间有限，水一篇随笔，这两天睡得都挺晚的，这可不成。 这次是这个动漫社18年周年庆的晚会，感觉蛮不错的，会感觉说，活着真好，能体验很多没体验过的东西。 现场的氛围超顶，看着哥哥们这么crazy，果然我还不是一个合格的二次元，尤其是接触到之前不知道的东西。比如说 “宅舞” 和 “Wota艺”. 宅舞： ACGN文化有关的舞蹈活动，是一个仅在中国大陆地区使用的名词，，一般用来指代使用了与ACGN文化有关的音乐作为伴奏所编排的舞蹈作品或舞蹈活动。 Wota艺： 荧光棒舞蹈、观众应援方式。 放几张图 比较遗憾的是，正好旁边的操场有校园十佳歌手的决赛来着，也挺想看的，但是两个是同时举办的，最终还是选择去看晚会了，等到晚会临近结束的时候，十佳歌手的比赛也接近尾声了。而且去的比较晚，也没混上晚会的票，没留个纪念品，也没参与抽奖，不过遗憾可能印象更深一些","content":"<p>时间有限，水一篇随笔，这两天睡得都挺晚的，这可不成。</p>\n<p>这次是这个动漫社18年周年庆的晚会，感觉蛮不错的，会感觉说，活着真好，能体验很多没体验过的东西。</p>\n<p>现场的氛围超顶，看着哥哥们这么crazy，果然我还不是一个合格的二次元，尤其是接触到之前不知道的东西。比如说 <strong>“宅舞”</strong> 和 <strong>“Wota艺”</strong>.</p>\n<blockquote>\n<p><strong>宅舞：</strong> ACGN文化有关的舞蹈活动，是一个仅在中国大陆地区使用的名词，，一般用来指代使用了与ACGN文化有关的音乐作为伴奏所编排的舞蹈作品或舞蹈活动。</p>\n<p><strong>Wota艺：</strong> 荧光棒舞蹈、观众应援方式。</p>\n</blockquote>\n<p>放几张图<br><img src=\"/../images/B6995FC7A34AD001FD093FF7C23CB163.jpg\"><br><img src=\"/../images/BC398C21FA20F2B4FA8DB04DED40E853.jpg\"><br><img src=\"/../images/B0E4F5FE88445377A1517D71436D57CB.jpg\"></p>\n<p>比较遗憾的是，正好旁边的操场有校园十佳歌手的决赛来着，也挺想看的，但是两个是同时举办的，最终还是选择去看晚会了，等到晚会临近结束的时候，十佳歌手的比赛也接近尾声了。而且去的比较晚，也没混上晚会的票，没留个纪念品，也没参与抽奖，不过遗憾可能印象更深一些<br><img src=\"/../images/6C9E10EEDA8F3D633B524EF77DFFA71E.jpg\"></p>\n","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"Hexo Blog Update Log","date":"2024-05-24T14:55:44.000Z","path":"2024/05/24/Hexo-Blog-Update-Log/","text":"5.23 创建blog并使用 Yilia 主题，可以通过 https://aj3230.github.io/ 实现远端访问访问 5.24 在 blog\\source 目录下创建了 images 文件夹，用于存储markdown里插入的图片(通过相对路径实现) 安装 hexo-auto-excerpt 插件，为 Yilia 主题添加自动摘要功能 创建了 “Hexo-Blog-Updata-log” ，以记录博客更新日志 5.25 更新了 “HTTP协议“博客 安装 Hexo 的一个插件 hexo-generator-json-content，并将其添加到博客项目的依赖列表中.并在 Hexo 的配置文件 _config.yml 中添加一个 jsonContent 部分配置该插件，以在博客中生成 JSON 内容，实现 标签、日期、索引 等功能。 在 Yilia 的配置文件里 _config.yml 更改了 “随笔” 链接的指向位置，实现快速跳转到所有”随笔”标签的博客。 创建了 “看个晚会放松一下” 随笔 5.26 更新了 “HTTP协议“ 博客 重命名 blog\\source\\images 中的图片，便于管理 更新了博客的 头像 “友情链接” 子导航链接 “关于我” 引入 Gitment，实现 评论 功能， 出现bug，取消了评论功能 上传了 Markdown语法、 Windows指令 两篇博客 规范博客的 title date tags 格式","content":"<blockquote>\n<h2 id=\"5-23\"><a href=\"#5-23\" class=\"headerlink\" title=\"5.23\"></a>5.23</h2><ol>\n<li>创建blog并使用 <strong>Yilia</strong> 主题，可以通过 <a href=\"https://aj3230.github.io/\">https://aj3230.github.io/</a> 实现远端访问访问</li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-24\"><a href=\"#5-24\" class=\"headerlink\" title=\"5.24\"></a>5.24</h2><ol>\n<li>在 blog\\source 目录下创建了 <strong>images</strong> 文件夹，用于存储markdown里插入的<strong>图片</strong>(通过相对路径实现)</li>\n<li>安装 <strong>hexo-auto-excerpt</strong> 插件，为 Yilia 主题添加<strong>自动摘要</strong>功能</li>\n<li>创建了 <strong>“Hexo-Blog-Updata-log”</strong> ，以记录<strong>博客更新日志</strong></li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-25\"><a href=\"#5-25\" class=\"headerlink\" title=\"5.25\"></a>5.25</h2><ol>\n<li>更新了 “<strong>HTTP协议</strong>“博客</li>\n<li>安装 Hexo 的一个插件 <strong>hexo-generator-json-content</strong>，并将其添加到博客项目的依赖列表中.并在 Hexo 的配置文件 <strong>_config.yml</strong> 中添加一个 <strong>jsonContent</strong> 部分配置该插件，以在博客中生成 JSON 内容，实现 <strong>标签、日期、索引</strong> 等功能。</li>\n<li>在 <strong>Yilia</strong> 的配置文件里 <strong>_config.yml</strong> 更改了 <strong>“随笔”</strong> 链接的指向位置，实现快速跳转到所有”随笔”标签的博客。</li>\n<li>创建了 <strong>“看个晚会放松一下”</strong> <strong>随笔</strong></li>\n</ol>\n</blockquote>\n<blockquote>\n<h2 id=\"5-26\"><a href=\"#5-26\" class=\"headerlink\" title=\"5.26\"></a>5.26</h2><ol>\n<li>更新了 “<strong>HTTP协议</strong>“ 博客</li>\n<li>重命名 <strong>blog\\source\\images</strong> 中的图片，便于管理</li>\n<li>更新了博客的 <strong>头像</strong> <strong>“友情链接”</strong> <strong>子导航链接</strong> <strong>“关于我”</strong></li>\n<li>引入 <strong>Gitment</strong>，实现 <strong>评论</strong> 功能， 出现bug，取消了评论功能</li>\n<li>上传了 <strong>Markdown语法、</strong> <strong>Windows指令</strong> 两篇博客</li>\n<li>规范博客的 <strong>title</strong> <strong>date</strong> <strong>tags</strong> 格式</li>\n</ol>\n</blockquote>\n","categories":[],"tags":[{"name":"更新日志","slug":"更新日志","permalink":"http://example.com/tags/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/"}]},{"title":"HTTP协议","date":"2024-05-23T13:18:34.000Z","path":"2024/05/23/HTTP-protocol/","text":"5.23一、前言 重要性 webservice &#x3D; HTTP协议 + XML Rest &#x3D; HTTP协议 + ison 各种API一般也是用 HTTP协议 + XML&#x2F;json 来实现的 此外，做采集、小偷站，也需要对HTP协议有一定的了解；也有助于学习Ajax 二、索引 原理 形象理解原理 请求信息和响应信息的格式 请求方法 状态码 实战 PHP + socket编程 发送http请求 PHP 批量发帖 HTTP协议 防盗 优化 HTTP协议 与 缓存控制 HTTP协议 与 COOKIE 持久链接 5.24 repostiry 仓库 三、原理 协议： 一式双份&#x2F;多份，双方&#x2F;多方都遵从的一个规范。 e.g. ftp http pop tcp&#x2F;ip HTTP协议： 客户端按照一定规则向服务器发送请求、索要数据，服务器按照一定规则响应请求、返回数据 5.25 config (计算机系统)配置 四、 HTTP请求信息和响应信息的格式 1)请求信息格式 请求行 (格式：请求方法 路径 协议) 请求方法 GET POST HEAD PUT DELETE TRACE OPTIONS 请求路径：URL的一部分 所用协议：目前一般是 “HTTP&#x2F;1.1“,0.9和1.0基本上已经不用 请求头信息 (格式：key value) 头信息结束后，和主体信息之间要空一行 请求主体信息 (可选) (发送内容) e.g.POST &#x2F;03.php HTTP&#x2F;1.1Host: localhostConten-type: application&#x2F;x-www-form-urlencodeContent-length: 24空行username&#x3D;zhangsan&amp;age&#x3D;18 &nbsp; 2)响应信息格式 响应行 (格式：请求方法 状态码 状态文字) 状态码： 反应服务器的响应情况 (e.g. 200 OK 404 NOT FOUND ) 状态码 定义 说明 1XX 信息 接收到请求，继续处理(HTTP预留待拓展) 2XX 成功 操作成功地收到，理解和接受 3XX 重定向 为了完成请求，必须采取进一步措施 4XX 客户端错误 请求的语法有错误或不能完全被满足。 5XX 服务器错误 服务器无法完成明显有效的请求。 状态文字: 描述状态码，便于人观察 响应头信息 (格式：key value) 头信息结束后，和主体信息之间要空一行 请求主体信息 (可选) 请求主体信息 (可选) (发送内容) e.g.HTTP&#x2F;1.1 OK 200Content-tyoe: text&#x2F;htmlContent-length: 5空行Hello&nbsp; 实操：(一) 前置工作 安装HTTP服务器 IIS (Internet Information Services) Windows的内置Web服务器 控制面板——程序——程序和功能——打开或关闭Windows功能——勾选”Internet Information Services“ 在windows操作系统上使用telnet指令 控制面板——程序——程序和功能——打开或关闭Windows功能——勾选”telnet client“ 搭建平台，在浏览器中实现运行php代码 操作步骤 到 phpStudy官网 下载 phpStudy 安装路径不能包含”中文”或”空格”，否则会报错 配置Apache环境 “启动” Apache2.4.39，点击”配置”，可以看到网站目录”E:&#x2F;phpstudy_pro&#x2F;WWW” 把要浏览的.php文件放在www目录下面 浏览器输入访问路径：”http://localhost/文件路径“ 就可在浏览器上打开、运行php文件 参考 https://blog.csdn.net/qq_44381873/article/details/104761158 &nbsp; (二) 请求 测试 HTTP 协议 打开命令行 Win + R ——&gt; cmd + ENTER 输入ipconfig查看IP地址 IPV4: xxx.xxx.xxx.xxx 与指定 IP 地址的端口 80 建立一个 telnet 连接 (telnet 是一种网络协议，它提供了一种在两台计算机之间进行交互式文本通信的方法。使用 telnet 命令加上一个 IP 地址和端口号，可以尝试与目标 IP 地址的指定端口建立文本通信连接。端口号 80 是互联网上用于未加密的 HTTP（超文本传输协议）通信的标准端口。HTTP 是网页传输的基础协&gt;议，所以这个操作通常用于测试网络上的 HTTP 服务器是否可达。)telnet IP地址 80 + ENTER (80为默认情况下HTTP指定端口) 打开回显，使得能看到输入的东西，便于调试CTRL + ] + ENTER &nbsp; (1)GET方法请求 GET &#x2F;01.php HTTP&#x2F;1.1Host: localhost (2)POST方法请求 POST &#x2F;02.php HTTP&#x2F;1.1Host: localhostContent-type: application&#x2F;x-www-form-urlencodedContent-length: 23 name&#x3D;John&amp;age&#x3D;30 5.26(3)HEAD方法请求 功能：与GET方法基本一致，只是不返回内容。例如，只是想确认一个内容(e.g.照片)是否还正常存在，不需要返回照片内容。 GET &#x2F;01.php HTTP&#x2F;1.1Host: localhost (4)注： 这些方法虽然是HTTP协议规定的，但 WEB SERVER 未必全部允许或支持，一般前三个，即 GET POST HEAD 都支持。 telnet news.163.com 80TRACE &#x2F; HTTP&#x2F;1.1Host: news.163.com (5)OPTIONS方法 功能：返回服务器支持的请求方法 OPTIONS &#x2F; HTTP&#x2F;1.1Host: localhost &nbsp; 常用状态码(及状态文字) 200： 服务器成功返回网页301&#x2F;302： 永久&#x2F;临时重定向 分类 问题 描述：一篇新闻，对于GET请求，重定向影响不大，能看到原来的内容即可。但对于POST请求，可能造成数据丢失。 解决： 307： 重定向中保护原有的请求数据 服务器上的资源暂时移动到了另一个URI，但是客户端应该继续使用原来的请求方法来访问新的URI。这个状态码与301和302重定向类似，但主要区别在于它不会改变客户端的请求方法（GET、POST等）。换言之，301和302重定向会改变客户端的请求方法。 304 NOT MODIFIED： 未修改 例如一张图片(一般长期不变)：客户端第一次请求服务器获得这个图片后，之后的每次请求，服务器会告诉客户端我有这张图片，并告诉服务器自己对该图片的时间编号(ETag)，让服务器判断过期没，如果过期了，服务器再重新返回新的图片，否则客户端直接取缓存，节省连接，实现优化。 失败状态码404 NOT FOUND： 请求的网页不存在 503： 服务器暂时不可用500： 服务器内部问题","content":"<hr>\n<h1 id=\"5-23\"><a href=\"#5-23\" class=\"headerlink\" title=\"5.23\"></a>5.23</h1><h2 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h2><blockquote>\n<ul>\n<li><strong>重要性</strong><ul>\n<li>webservice &#x3D; HTTP协议 + XML</li>\n<li>Rest &#x3D; HTTP协议 + ison</li>\n<li>各种API一般也是用 HTTP协议 + XML&#x2F;json 来实现的</li>\n<li>此外，做采集、小偷站，也需要对HTP协议有一定的了解；也有助于学习Ajax</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"二、索引\"><a href=\"#二、索引\" class=\"headerlink\" title=\"二、索引\"></a>二、索引</h2><blockquote>\n<ul>\n<li><strong>原理</strong><ul>\n<li>形象理解原理</li>\n<li>请求信息和响应信息的格式</li>\n<li>请求方法 状态码</li>\n</ul>\n</li>\n<li><strong>实战</strong><ul>\n<li>PHP + socket编程 发送http请求</li>\n<li>PHP 批量发帖</li>\n<li>HTTP协议 防盗</li>\n</ul>\n</li>\n<li><strong>优化</strong><ul>\n<li>HTTP协议 与 缓存控制</li>\n<li>HTTP协议 与 COOKIE</li>\n<li>持久链接</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>\n\n<hr>\n<h1 id=\"5-24\"><a href=\"#5-24\" class=\"headerlink\" title=\"5.24\"></a>5.24</h1><blockquote>\n<ul>\n<li><em><strong>repostiry</strong></em> 仓库</li>\n</ul>\n</blockquote>\n<h2 id=\"三、原理\"><a href=\"#三、原理\" class=\"headerlink\" title=\"三、原理\"></a>三、原理</h2><blockquote>\n<ul>\n<li><strong>协议：</strong> 一式双份&#x2F;多份，双方&#x2F;多方都遵从的一个规范。<ul>\n<li><strong>e.g.</strong>   ftp http pop tcp&#x2F;ip</li>\n</ul>\n</li>\n<li><strong>HTTP协议：</strong> 客户端按照一定规则向服务器发送请求、索要数据，服务器按照一定规则响应请求、返回数据<br><img src=\"/../images/HTTP-workflow.png\" alt=\"HTTP工作流程\"></li>\n</ul>\n</blockquote>\n<hr>\n<h1 id=\"5-25\"><a href=\"#5-25\" class=\"headerlink\" title=\"5.25\"></a>5.25</h1><blockquote>\n<p><strong>config</strong> (计算机系统)配置</p>\n</blockquote>\n<h2 id=\"四、-HTTP请求信息和响应信息的格式\"><a href=\"#四、-HTTP请求信息和响应信息的格式\" class=\"headerlink\" title=\"四、 HTTP请求信息和响应信息的格式\"></a>四、 <em><strong>HTTP请求信息和响应信息的格式</strong></em></h2><blockquote>\n<h3 id=\"1-请求信息格式\"><a href=\"#1-请求信息格式\" class=\"headerlink\" title=\"1)请求信息格式\"></a>1)请求信息格式</h3><ul>\n<li><strong>请求行  (格式：请求方法 路径 协议)</strong><ul>\n<li><p>请求方法 </p>\n<ul>\n<li>GET</li>\n<li>POST</li>\n<li>HEAD</li>\n<li>PUT</li>\n<li>DELETE</li>\n<li>TRACE</li>\n<li>OPTIONS</li>\n</ul>\n</li>\n<li><p>请求路径：URL的一部分</p>\n</li>\n<li><p>所用协议：目前一般是 “<strong>HTTP&#x2F;1.1</strong>“,0.9和1.0基本上已经不用</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<ul>\n<li><strong>请求头信息 (格式：key value)</strong></li>\n</ul>\n<p><strong>头信息结束后，和主体信息之间要空一行</strong></p>\n<ul>\n<li><strong>请求主体信息 (可选) (发送内容)</strong><blockquote>\n<ul>\n<li>e.g.<br><strong>POST &#x2F;03.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br><strong>Conten-type: application&#x2F;x-www-form-urlencode</strong><br><strong>Content-length: 24</strong><br>空行<br><strong>username&#x3D;zhangsan&amp;age&#x3D;18</strong><br><img src=\"/../images/Example-GET-Method.png\" alt=\"e.g.\"></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>&nbsp;</p>\n</blockquote>\n<blockquote>\n<h3 id=\"2-响应信息格式\"><a href=\"#2-响应信息格式\" class=\"headerlink\" title=\"2)响应信息格式\"></a>2)响应信息格式</h3><ul>\n<li><strong>响应行  (格式：请求方法 状态码 状态文字)</strong><ul>\n<li><p><strong>状态码：</strong> 反应服务器的响应情况 (e.g. <strong>200 OK</strong> <strong>404 NOT FOUND</strong> )</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>定义</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1XX</td>\n<td>信息</td>\n<td>接收到请求，继续处理(HTTP预留待拓展)</td>\n</tr>\n<tr>\n<td>2XX</td>\n<td>成功</td>\n<td>操作成功地收到，理解和接受</td>\n</tr>\n<tr>\n<td>3XX</td>\n<td>重定向</td>\n<td>为了完成请求，必须采取进一步措施</td>\n</tr>\n<tr>\n<td>4XX</td>\n<td>客户端错误</td>\n<td>请求的语法有错误或不能完全被满足。</td>\n</tr>\n<tr>\n<td>5XX</td>\n<td>服务器错误</td>\n<td>服务器无法完成明显有效的请求。</td>\n</tr>\n</tbody></table>\n</blockquote>\n</li>\n<li><p><strong>状态文字:</strong> 描述状态码，便于人观察</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<ul>\n<li><strong>响应头信息 (格式：key value)</strong></li>\n</ul>\n<p><strong>头信息结束后，和主体信息之间要空一行</strong></p>\n<ul>\n<li><p><strong>请求主体信息 (可选)</strong></p>\n</li>\n<li><p><strong>请求主体信息 (可选) (发送内容)</strong></p>\n<blockquote>\n<ul>\n<li>e.g.<br><strong>HTTP&#x2F;1.1 OK 200</strong><br><strong>Content-tyoe: text&#x2F;html</strong><br><strong>Content-length: 5</strong><br>空行<br><strong>Hello</strong><br><img src=\"/../images/Example-POST-Method.png\" alt=\"e.g.\"><br>&nbsp;</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"实操：\"><a href=\"#实操：\" class=\"headerlink\" title=\"实操：\"></a>实操：</h3><h4 id=\"一-前置工作\"><a href=\"#一-前置工作\" class=\"headerlink\" title=\"(一) 前置工作\"></a>(一) 前置工作</h4><blockquote>\n<p><em><strong>安装HTTP服务器</strong></em></p>\n<ul>\n<li><strong>IIS</strong> (Internet Information Services) Windows的内置Web服务器<ul>\n<li><strong>控制面板</strong>——<strong>程序</strong>——<strong>程序和功能</strong>——<strong>打开或关闭Windows功能</strong>——勾选”<strong>Internet Information Services</strong>“</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><em><strong>在windows操作系统上使用telnet指令</strong></em></p>\n<ul>\n<li><strong>控制面板</strong>——<strong>程序</strong>——<strong>程序和功能</strong>——<strong>打开或关闭Windows功能</strong>——勾选”<strong>telnet client</strong>“</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><em><strong>搭建平台，在浏览器中实现运行php代码</strong></em></p>\n<ul>\n<li><strong>操作步骤</strong></li>\n</ul>\n<ol>\n<li>到 <a href=\"https://www.xp.cn/download.html\" title=\"phpStudy官网\">phpStudy官网</a> 下载 <strong>phpStudy</strong><br>  安装路径不能包含”中文”或”空格”，否则会报错</li>\n<li>配置Apache环境<br>  “启动” <strong>Apache2.4.39</strong>，点击”配置”，可以看到网站目录”E:&#x2F;phpstudy_pro&#x2F;WWW”</li>\n<li>把要浏览的.php文件放在www目录下面</li>\n<li>浏览器输入访问路径：”<a href=\"http://localhost/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84\">http://localhost/文件路径</a>“ 就可在浏览器上打开、运行php文件</li>\n</ol>\n<ul>\n<li><strong>参考</strong><ul>\n<li><a href=\"https://blog.csdn.net/qq_44381873/article/details/104761158\">https://blog.csdn.net/qq_44381873/article/details/104761158</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"二-请求\"><a href=\"#二-请求\" class=\"headerlink\" title=\"(二) 请求\"></a>(二) 请求</h4><blockquote>\n<p>测试 HTTP 协议</p>\n<ol>\n<li>打开命令行<br>  <strong>Win</strong> + <strong>R</strong> ——&gt; <strong>cmd</strong> + <strong>ENTER</strong> </li>\n<li>输入<strong>ipconfig</strong>查看IP地址<br>  <strong>IPV4: xxx.xxx.xxx.xxx</strong></li>\n<li>与指定 IP 地址的端口 80 建立一个 telnet 连接<br>  (telnet 是一种网络协议，它提供了一种在两台计算机之间进行交互式文本通信的方法。使用 telnet 命令加上一个 IP 地址和端口号，可以尝试与目标 IP 地址的指定端口建立文本通信连接。端口号 80 是互联网上用于未加密的 HTTP（超文本传输协议）通信的标准端口。HTTP 是网页传输的基础协&gt;议，所以这个操作通常用于测试网络上的 HTTP 服务器是否可达。)<br><strong>telnet</strong> <strong>IP地址</strong> <strong>80</strong> + <strong>ENTER</strong>  (80为默认情况下HTTP指定端口)</li>\n<li>打开回显，使得能看到输入的东西，便于调试<br><strong>CTRL</strong> + <strong>]</strong> + <strong>ENTER</strong></li>\n</ol>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><em><strong>(1)GET方法请求</strong></em></p>\n<blockquote>\n<p><strong>GET &#x2F;01.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br> <img src=\"/../images/GET-Method.png\" alt=\"GET方法做HTTP请求\"></p>\n</blockquote>\n<p><em><strong>(2)POST方法请求</strong></em></p>\n<blockquote>\n<p><strong>POST &#x2F;02.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br><strong>Content-type: application&#x2F;x-www-form-urlencoded</strong><br><strong>Content-length: 23</strong></p>\n<p><strong>name&#x3D;John&amp;age&#x3D;30</strong></p>\n<p> <img src=\"/../images/Head-Method.png\" alt=\"POST方法做HTTP请求\"></p>\n</blockquote>\n<h1 id=\"5-26\"><a href=\"#5-26\" class=\"headerlink\" title=\"5.26\"></a>5.26</h1><p><em><strong>(3)HEAD方法请求</strong></em></p>\n<blockquote>\n<p>功能：与GET方法基本一致，只是不返回内容。例如，只是想确认一个内容(e.g.照片)是否还正常存在，不需要返回照片内容。</p>\n<p><strong>GET &#x2F;01.php HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong><br> <img src=\"/../images/Head-Method.png\" alt=\"HEAD方法做HTTP请求\"></p>\n</blockquote>\n<p><em><strong>(4)注：</strong></em> </p>\n<blockquote>\n<p>这些方法虽然是HTTP协议规定的，但 <strong>WEB</strong> <strong>SERVER</strong> 未必全部允许或支持，一般前三个，即 <strong>GET</strong> <strong>POST</strong> <strong>HEAD</strong> 都支持。</p>\n<p><strong>telnet news.163.com 80</strong><br><strong>TRACE &#x2F; HTTP&#x2F;1.1</strong><br><strong>Host: news.163.com</strong></p>\n<p> <img src=\"/../images/405-Methon-Not-Allowed.png\" alt=\"不支持该方法\"></p>\n</blockquote>\n<p><em><strong>(5)OPTIONS方法</strong></em> </p>\n<blockquote>\n<p>功能：返回服务器支持的请求方法</p>\n<p><strong>OPTIONS &#x2F; HTTP&#x2F;1.1</strong><br><strong>Host: localhost</strong></p>\n<ul>\n<li><img src=\"/../images/OPTIONS-Methond.png\" alt=\"OPTIONS方法做HTTP请求\"></li>\n</ul>\n</blockquote>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"常用状态码-及状态文字\"><a href=\"#常用状态码-及状态文字\" class=\"headerlink\" title=\"常用状态码(及状态文字)\"></a>常用状态码(及状态文字)</h4><blockquote>\n<p><strong>200：</strong> 服务器成功返回网页<br><strong>301&#x2F;302：</strong> 永久&#x2F;临时重定向</p>\n<ul>\n<li>分类<ul>\n<li><img src=\"/../images/302.png\" alt=\"默认302重定向\"></li>\n<li><img src=\"/../images/301.png\" alt=\"指定301重定向\"></li>\n</ul>\n</li>\n<li>问题<ul>\n<li>描述：一篇新闻，对于<strong>GET</strong>请求，重定向影响不大，能看到原来的内容即可。但对于<strong>POST</strong>请求，可能造成<strong>数据丢失</strong>。</li>\n<li>解决： <strong>307：</strong> <em><strong>重定向中保护原有的请求数据</strong></em><ul>\n<li>服务器上的资源暂时移动到了另一个URI，但是客户端应该继续使用原来的请求方法来访问新的URI。这个状态码与301和302重定向类似，但主要区别在于它不会改变客户端的请求方法（GET、POST等）。换言之，301和302重定向会改变客户端的请求方法。</li>\n<li><img src=\"/../images/302-Found.png\" alt=\"302 Found\"></li>\n<li><img src=\"/../images/301-Moved-Permanently.png\" alt=\"301 Moved Permanently\"></li>\n<li><img src=\"/../images/307-Temporary-Redirect.png\" alt=\"307 Temporary Redirect\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><em><strong>304 NOT MODIFIED：</strong></em> 未修改 </p>\n<ul>\n<li>例如一张图片(一般长期不变)：客户端第一次请求服务器获得这个图片后，之后的每次请求，服务器会告诉客户端我有这张图片，并告诉服务器自己对该图片的时间编号(<strong>ETag</strong>)，让服务器判断过期没，如果过期了，服务器再重新返回新的图片，否则客户端直接取缓存，节省连接，实现<strong>优化</strong>。</li>\n</ul>\n<p>失败状态码<br><strong>404 NOT FOUND：</strong> 请求的网页不存在</p>\n<ul>\n<li><img src=\"/../images/404-Not-Found.png\" alt=\"404 Not Found\"></li>\n</ul>\n<p><strong>503：</strong> 服务器暂时不可用<br><strong>500：</strong> 服务器内部问题</p>\n</blockquote>\n","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"http://example.com/tags/%E6%8A%80%E6%9C%AF/"}]},{"title":"Windows cmd指令","date":"2024-05-23T09:58:08.000Z","path":"2024/05/23/windows_cmd指令/","text":"查看当前路径 cd 进入指定路径 cd path 返回上一层路径 cd .. 返回上两层路径 cd ..&#x2F;.. 查看当前路径下的目录 dir","content":"<blockquote>\n<ul>\n<li>查看当前路径<ul>\n<li>cd</li>\n</ul>\n</li>\n<li>进入指定路径<ul>\n<li>cd path</li>\n</ul>\n</li>\n<li>返回上一层路径<ul>\n<li>cd ..</li>\n</ul>\n</li>\n<li>返回上两层路径<ul>\n<li>cd ..&#x2F;..</li>\n</ul>\n</li>\n<li>查看当前路径下的目录<ul>\n<li>dir<br/></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n","categories":[],"tags":[{"name":"语法","slug":"语法","permalink":"http://example.com/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"网络工作原理","date":"2024-05-23T04:46:38.000Z","path":"2024/05/23/Network-working-principle/","text":"内容 ISP： 即互联网服务提供商（例如国内各大运营商），搭建、维护相关设施，提供互联网服务。需要投入大量成本，故ISP是有偿提供网络接入，所以宽带要限速、计费 &nbsp; NAT、端口映射 NAT： 网络地址转换，局域网内设备的IP地址被网关映射为统一地址，接入网络，但存在无法精准传送数据的问题。 端口映射： 在IP地址后面增加一串端口号，网关以不同的端口与外网交互，把端口号映射给局域网内的各个设备.传输数据时，映射IP地址和端口号，来实现以共同的IP精准传送数据。 &nbsp; 局域网： 若能互联的干台设备组成的网络 广域网： 设备数量庞大的局域网 IP地址： 每台设备都有一个的独自的数字虚拟地址，以联网时辨别、区分于其他设备 分类 公有IP &#x2F; 私有IP： 网关拥有的可以直接在广域网上交互数据的IP地址 &#x2F; 只能局域网内有效使用（能区分于其他设备）的IP地址 IPV4 &#x2F; IPV6： IPV4和IPV6是两个不同协议，不能直接互通，需要借助其他设备做转换和映射，导致短时间内IPV6无法完全取代IPV4，但IPV6是大势所趋。 &nbsp; - IPV4： 32位二进制构成，理论上能提供 2^32(约42.28亿) 个地址。为方便记忆、输入，将每8位二进制分为1组，转换为十进制，转化成4个0~255的数字。但一些地址特殊用途，保留下来不提供给大众使用，真正可用的IP地址只有36.47亿个，而当今世界约有80亿人，很多人都有接入互联网的需求，且每个人的设备不止一台(PC,laptop,iPad,mobile phone)，自2011年底，IPV4已经面临枯竭。&nbsp; - IPV6： 由8组四位十六进制组合而成，理论上能 3.4*10^38 个IP地址，足够为地球上每一个沙子发一个独立IP。 &nbsp; 域名： 每个IP地址对应一个域名，以便于记忆和输入. DNS服务器： 用于查询域名对应的IP地址。电脑自动或许宽带运营商DNS服务器的IP地址，或到指定的公共DNS服务器上查询。若能查到，DNS服务器会返回对于的IP地址，否则，这台DNS服务器会问根域名 服务器， 参考文献(1)https://www.bilibili.com/video/BV1DD4y127r4/?spm_id_from=trigger_reload&amp;vd_source=df38266eedfef61aa7370319919d94d7&nbsp;(2)https://www.bilibili.com/video/BV1VE41187N7/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=df38266eedfef61aa7370319919d94d7","content":"<h2 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h2><blockquote>\n<ul>\n<li><em><strong>ISP：</strong></em> 即互联网服务提供商（例如国内各大运营商），搭建、维护相关设施，提供互联网服务。需要投入大量成本，故ISP是有偿提供网络接入，所以宽带要限速、计费</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<ul>\n<li><em><strong>NAT、端口映射</strong></em><ul>\n<li><strong>NAT：</strong> 网络地址转换，局域网内设备的IP地址被网关映射为统一地址，接入网络，但存在无法精准传送数据的问题。</li>\n<li><strong>端口映射：</strong> 在IP地址后面增加一串端口号，网关以不同的端口与外网交互，把端口号映射给局域网内的各个设备.传输数据时，映射IP地址和端口号，来实现以共同的IP精准传送数据。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<ul>\n<li><em><strong>局域网：</strong></em> 若能互联的干台设备组成的网络<ul>\n<li><strong>广域网：</strong> 设备数量庞大的局域网</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<br/>\n\n<blockquote>\n<ul>\n<li><em><strong>IP地址：</strong></em> 每台设备都有一个的独自的数字虚拟地址，以联网时辨别、区分于其他设备<ul>\n<li><strong>分类</strong><ul>\n<li><strong>公有IP &#x2F; 私有IP：</strong> 网关拥有的可以直接在广域网上交互数据的IP地址 &#x2F; 只能局域网内有效使用（能区分于其他设备）的IP地址</li>\n<li><strong>IPV4 &#x2F; IPV6：</strong> IPV4和IPV6是两个不同协议，不能直接互通，需要借助其他设备做转换和映射，导致短时间内IPV6无法完全取代IPV4，但IPV6是大势所趋。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&nbsp;<br>     - <strong>IPV4：</strong> 32位二进制构成，理论上能提供 2^32(约42.28亿) 个地址。为方便记忆、输入，将每8位二进制分为1组，转换为十进制，转化成4个0~255的数字。但一些地址特殊用途，保留下来不提供给大众使用，真正可用的IP地址只有36.47亿个，而当今世界约有80亿人，很多人都有接入互联网的需求，且每个人的设备不止一台(PC,laptop,iPad,mobile phone)，自2011年底，IPV4已经面临枯竭。<br>&nbsp;<br>     - <strong>IPV6：</strong> 由8组四位十六进制组合而成，理论上能 3.4*10^38 个IP地址，足够为地球上每一个沙子发一个独立IP。</p>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<ul>\n<li><em><strong>域名：</strong></em> 每个IP地址对应一个域名，以便于记忆和输入.</li>\n<li><em><strong>DNS服务器：</strong></em> 用于查询域名对应的IP地址。电脑自动或许宽带运营商DNS服务器的IP地址，或到指定的公共DNS服务器上查询。若能查到，DNS服务器会返回对于的IP地址，否则，这台DNS服务器会问根域名 服务器，</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p><strong>(1)</strong><br><a href=\"https://www.bilibili.com/video/BV1DD4y127r4/?spm_id_from=trigger_reload&amp;vd_source=df38266eedfef61aa7370319919d94d7\">https://www.bilibili.com/video/BV1DD4y127r4/?spm_id_from=trigger_reload&amp;vd_source=df38266eedfef61aa7370319919d94d7</a><br>&nbsp;<br><strong>(2)</strong><br><a href=\"https://www.bilibili.com/video/BV1VE41187N7/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=df38266eedfef61aa7370319919d94d7\">https://www.bilibili.com/video/BV1VE41187N7/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=df38266eedfef61aa7370319919d94d7</a></p>\n<hr>\n","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"http://example.com/tags/%E6%8A%80%E6%9C%AF/"}]},{"title":"Markdown语法","date":"2024-05-23T04:46:38.000Z","path":"2024/05/23/Markdown语法学习 5.13/","text":"一、基本语法二、标题语法 分类 #一级标题#二级标题… 注意事项“#” 与 标题间用一个空格分隔 plus: plus:一级标题 plus:二级标题 三、段落语法 用制表符缩进段落 AAA BBB sada das dsadsa 四、换行语法末尾空两个或多个空格 / 用HTML的&lt;br&gt;标签 五、强调语法 粗体前后添加2个 星号 或 下划线 斜体前后添加1个 星号 或 下划线 斜粗体前后添加3个 星号 或 下划线 六、引用语法 创建块引用 在段落前加 多段落引用——段落之间的空表添加一个“***&gt;***” 嵌套块引用——在要嵌套的段落前添加一个“***&gt;&gt;***” 包含其他元素的引用 七、列表语法 有序列表 列表前添加数字并紧跟英文句点 数字不必按顺序，但列表以数字1起始 First item Second item Third item A B C a b Fourth item 无序列表 列表前加破折号(-),星号(*)或加号(+) 缩进创建嵌套列表 A B a b 嵌套其他元素 create a project input the following codes 12#inculde &lt;iostream&gt;using namespace std; ... s 八、代码语法 用反引号(&#96;)包裹想表示为单词或短语的代码 e.g. usingnamespace 代码中包含一个或多个反引号 用双反引号(&#96;&#96;)包裹 e.g. using namespace `std` 将代码块的每行至少缩进一个制表符或四个空格 在代码块前后使用三个反引号(&#96;&#96;&#96;)或三个波浪号(~~~) 高亮——指定语言 #include &lt;iostream&gt; using namespace std; int main() &#123; cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; endl; return 0; &#125; 九、分割线语法单独的一行使用三个或多个星号(*)、破折号(-)或下划线(_)a b 十、链接语法 链接文本放在括号内，链接地址放在后面的括号中，链接title可选 语法 [超链接显示名](超链接地址 &quot;超链接title&quot;) e.g. 这是一个链接百度 网址和Email地址 用尖括号(&lt;&gt;)可以把URL或email地址变成可点击的链接https://www.baidu.com/&#109;&#x61;&#x69;&#108;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#x6d; 带格式化的链接 强调链接，在链接语法前后加星号 百度 将链接表示为代码，在方括号内加反引号 See the section on thie code 引用类型链接分为两部分：与文本保持内联的部分 和 存储在文件中其他位置的部分，使文本易于阅读 语法 第一部分 [显示为链接的文本] [标签] (标签指向存储在文档其他位置的链接) - 第二部分[标签]: &lt;链接的URL &quot;可选title&quot;&gt;(标签后紧跟一个冒号和至少一个空格) - 注： 链接的第二部分可放在文档的任何位置(出现的段落之后 或 文档的末尾(例如尾注或脚注)) - e.g. &gt; 文本中出现的 [引用内容][1] &gt; 参考引用： &gt; [1]: https://www.baidu.com/ s [显示文本] [1][1]: https://www.baidu.com/em 不支持好像 十一、图片语法 语法 ![替代文本](图片链接 &quot;可选标题&quot;) 十二、转义字符 要显示原本由于格式化的字符，在字符前添加反斜杠 十三、内嵌HTML标签 e.g.This word is bold.This word is italic. &nbsp; 边用边学换行 (1) &amp;nbsp;&nbsp; (2) &lt;br&#x2F;&gt; &nbsp; 插入图片 基本语法： ![图片描述 可省略](图片地址：URL连接或者本地链接) &nbsp; 表格 (1)使用竖线 ‘|’ 来分隔列，并使用连字符 ‘-‘ 来分隔表头和表行(表头和表行之间的分隔线至少要有三个连字符 -) 基本示例：| 标题 1 | 标题 2 | 标题 3 ||——-|——-|——-|| 单元格 1 | 单元格 2 | 单元格 3 || 单元格 4 | 单元格 5 | 单元格 6 | 将产生如下表格： 标题 1 标题 2 标题 3 单元格 1 单元格 2 单元格 3 单元格 4 单元格 5 单元格 6 (2)表格对齐在分隔线中添加冒号 ‘:’。 冒号放在分隔线的左侧将左对齐该列，放在右侧将右对齐该列，同时放在两侧将居中对齐该列 基本示例：| 左对齐 | 居中对齐 | 右对齐 ||:——|:——: |——: || 单元格 1 | 单元格 2 | 单元格 3 || 单元格 4 | 单元格 5 | 单元格 6 | 将产生如下单元格 左对齐 居中对齐 右对齐 单元格 1 单元格 2 单元格 3 单元格 4 单元格 5 单元格 6","content":"<h1 id=\"一、基本语法\"><a href=\"#一、基本语法\" class=\"headerlink\" title=\"一、基本语法\"></a>一、基本语法</h1><h1 id=\"二、标题语法\"><a href=\"#二、标题语法\" class=\"headerlink\" title=\"二、标题语法\"></a>二、标题语法</h1><blockquote>\n<ul>\n<li><p>分类</p>\n<p>#一级标题<br>#二级标题<br>…</p>\n</li>\n<li><p>注意事项<br>“#” 与 标题间用一个空格分隔</p>\n</li>\n</ul>\n<p>plus:</p>\n<ul>\n<li><h1 id=\"plus-一级标题\"><a href=\"#plus-一级标题\" class=\"headerlink\" title=\"plus:一级标题\"></a>plus:一级标题</h1></li>\n<li><h2 id=\"plus-二级标题\"><a href=\"#plus-二级标题\" class=\"headerlink\" title=\"plus:二级标题\"></a>plus:二级标题</h2></li>\n</ul>\n</blockquote>\n<h1 id=\"三、段落语法\"><a href=\"#三、段落语法\" class=\"headerlink\" title=\"三、段落语法\"></a>三、段落语法</h1><blockquote>\n<p>用制表符缩进段落</p>\n</blockquote>\n<pre><code>AAA\nBBB\nsada das\ndsadsa\n</code></pre>\n<h1 id=\"四、换行语法\"><a href=\"#四、换行语法\" class=\"headerlink\" title=\"四、换行语法\"></a>四、换行语法</h1><pre><code>末尾空两个或多个空格 / 用HTML的&lt;br&gt;标签\n</code></pre>\n<h1 id=\"五、强调语法\"><a href=\"#五、强调语法\" class=\"headerlink\" title=\"五、强调语法\"></a>五、强调语法</h1><blockquote>\n<ul>\n<li><p><strong>粗体</strong><br>前后添加2个 <strong>星号</strong> 或 <strong>下划线</strong></p>\n</li>\n<li><p><em>斜体</em><br>前后添加1个 <em>星号</em> 或 <em>下划线</em></p>\n</li>\n<li><p><em><strong>斜粗体</strong></em><br>前后添加3个 <em><strong>星号</strong></em> 或 <em><strong>下划线</strong></em></p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"六、引用语法\"><a href=\"#六、引用语法\" class=\"headerlink\" title=\"六、引用语法\"></a>六、引用语法</h1><blockquote>\n<p>创建块引用 在段落前加 </p>\n<ul>\n<li><p>多段落引用——段落之间的空表添加一个“***&gt;***”</p>\n</li>\n<li><p>嵌套块引用——在要嵌套的段落前添加一个“***&gt;&gt;***”</p>\n</li>\n<li><p>包含其他元素的引用</p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"七、列表语法\"><a href=\"#七、列表语法\" class=\"headerlink\" title=\"七、列表语法\"></a>七、列表语法</h1><blockquote>\n<p><em><strong>有序列表</strong></em></p>\n<ul>\n<li>列表前添加数字并紧跟英文句点</li>\n<li>数字不必按顺序，但列表以数字1起始</li>\n</ul>\n</blockquote>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item<ol>\n<li>A</li>\n<li>B</li>\n<li>C<ol>\n<li>a</li>\n<li>b</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>Fourth item</li>\n</ol>\n<blockquote>\n<p><em><strong>无序列表</strong></em></p>\n<ul>\n<li>列表前加破折号(-),星号(*)或加号(+)</li>\n<li>缩进创建嵌套列表</li>\n</ul>\n</blockquote>\n<ul>\n<li>A</li>\n</ul>\n<ul>\n<li>B<ul>\n<li>a<ul>\n<li>b</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><em><strong>嵌套其他元素</strong></em></p>\n</blockquote>\n<ol>\n<li>create a project</li>\n<li>input the following codes <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#inculde <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br></pre></td></tr></table></figure>\n<pre><code> ...\n</code></pre>\n</li>\n<li>s</li>\n</ol>\n<h1 id=\"八、代码语法\"><a href=\"#八、代码语法\" class=\"headerlink\" title=\"八、代码语法\"></a>八、代码语法</h1><ul>\n<li>用反引号(&#96;)包裹想表示为单词或短语的代码<ul>\n<li>e.g.<br>  <code>usingnamespace</code></li>\n</ul>\n</li>\n<li>代码中包含一个或多个反引号 用双反引号(&#96;&#96;)包裹<ul>\n<li>e.g.<br>  <code>using namespace `std`</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>将代码块的每行至少缩进一个制表符或四个空格</li>\n<li>在代码块前后使用三个反引号(&#96;&#96;&#96;)或三个波浪号(~~~)</li>\n<li>高亮——指定语言</li>\n</ul>\n</blockquote>\n<pre><code class=\"C++\">#include &lt;iostream&gt;\nusing namespace std;\nint main()\n&#123;\n    cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; endl;\n    return 0;\n&#125;\n</code></pre>\n<ul>\n<li></li>\n</ul>\n<h1 id=\"九、分割线语法\"><a href=\"#九、分割线语法\" class=\"headerlink\" title=\"九、分割线语法\"></a>九、分割线语法</h1><p>单独的一行使用三个或多个星号(*)、破折号(-)或下划线(_)<br>a</p>\n<hr>\n<p>b</p>\n<hr>\n<h1 id=\"十、链接语法\"><a href=\"#十、链接语法\" class=\"headerlink\" title=\"十、链接语法\"></a>十、链接语法</h1><ul>\n<li><p>链接文本放在括号内，链接地址放在后面的括号中，链接title可选</p>\n<ul>\n<li>语法<br>  <code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code><ul>\n<li>e.g. 这是一个链接<a href=\"https://www.baidu.com/\" title=\"中国最大的搜索引擎\">百度</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>网址和Email地址</p>\n<ul>\n<li>用尖括号(&lt;&gt;)可以把URL或email地址变成可点击的链接<br><a href=\"https://www.baidu.com/\">https://www.baidu.com/</a><br><a href=\"mailto:&#109;&#x61;&#x69;&#108;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#x6d;\">&#109;&#x61;&#x69;&#108;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#x6d;</a></li>\n</ul>\n</li>\n<li><p>带格式化的链接</p>\n<ul>\n<li>强调链接，在链接语法前后加星号<ul>\n<li><em><strong><a href=\"https://www.baidu.com/\">百度</a></strong></em></li>\n</ul>\n</li>\n<li>将链接表示为代码，在方括号内加反引号<ul>\n<li>See the section on thie <a href=\"#code\"><code>code</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>引用类型链接<br>分为两部分：与文本保持内联的部分 和 存储在文件中其他位置的部分，使文本易于阅读</p>\n<ul>\n<li>语法<ul>\n<li>第一部分</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><code>[显示为链接的文本] [标签]</code> (标签指向存储在文档其他位置的链接)<br>        - 第二部分<br><code>[标签]: &lt;链接的URL &quot;可选title&quot;&gt;</code><br>(标签后紧跟一个冒号和至少一个空格)<br>        - 注： 链接的第二部分可放在文档的任何位置(出现的段落之后 或 文档的末尾(例如尾注或脚注))<br>    - e.g.<br>        &gt; 文本中出现的 [引用内容][1]<br>        &gt; 参考引用：<br>        &gt; [1]: <a href=\"https://www.baidu.com/\">https://www.baidu.com/</a></p>\n<p>s [显示文本] [1]<br>[1]: <a href=\"https://www.baidu.com/\">https://www.baidu.com/</a><br>em 不支持好像</p>\n<h1 id=\"十一、图片语法\"><a href=\"#十一、图片语法\" class=\"headerlink\" title=\"十一、图片语法\"></a>十一、图片语法</h1><ul>\n<li>语法</li>\n</ul>\n<p><code>![替代文本](图片链接 &quot;可选标题&quot;)</code></p>\n<h1 id=\"十二、转义字符\"><a href=\"#十二、转义字符\" class=\"headerlink\" title=\"十二、转义字符\"></a>十二、转义字符</h1><ul>\n<li>要显示原本由于格式化的字符，在字符前添加反斜杠</li>\n</ul>\n<h1 id=\"十三、内嵌HTML标签\"><a href=\"#十三、内嵌HTML标签\" class=\"headerlink\" title=\"十三、内嵌HTML标签\"></a>十三、内嵌HTML标签</h1><ul>\n<li>e.g.<br>This <strong>word</strong> is bold.<br>This <em>word</em> is italic.</li>\n</ul>\n<p>&nbsp;</p>\n<h1 id=\"边用边学\"><a href=\"#边用边学\" class=\"headerlink\" title=\"边用边学\"></a>边用边学</h1><h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><blockquote>\n<ul>\n<li><strong>(1)</strong> &amp;nbsp;<br>&nbsp; </li>\n<li><strong>(2)</strong> &lt;br&#x2F;&gt;<br/></li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h4><blockquote>\n<ul>\n<li>基本语法：<ul>\n<li>![图片描述 可省略](图片地址：URL连接或者本地链接)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>&nbsp;</p>\n<h4 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h4><blockquote>\n<p><strong>(1)使用竖线 <strong>‘|’</strong> 来分隔列，并使用连字符 <strong>‘-‘</strong> 来分隔表头和表行(表头和表行之间的分隔线至少要有三个连字符 -)</strong></p>\n<p>基本示例：<br><strong>| 标题 1 | 标题 2 | 标题 3 |</strong><br><strong>|——-|——-|——-|</strong><br><strong>| 单元格 1 | 单元格 2 | 单元格 3 |</strong><br><strong>| 单元格 4 | 单元格 5 | 单元格 6 |</strong></p>\n<p>  将产生如下表格：</p>\n<table>\n<thead>\n<tr>\n<th>标题 1</th>\n<th>标题 2</th>\n<th>标题 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格 1</td>\n<td>单元格 2</td>\n<td>单元格 3</td>\n</tr>\n<tr>\n<td>单元格 4</td>\n<td>单元格 5</td>\n<td>单元格 6</td>\n</tr>\n</tbody></table>\n<p><strong>(2)表格对齐</strong><br>在分隔线中添加冒号 <strong>‘:’</strong>。 冒号放在分隔线的左侧将左对齐该列，放在右侧将右对齐该列，同时放在两侧将居中对齐该列</p>\n<p>基本示例：<br><strong>| 左对齐 | 居中对齐 | 右对齐 |</strong><br><strong>|:——|:——: |——: |</strong><br><strong>| 单元格 1 | 单元格 2 | 单元格 3 |</strong><br><strong>| 单元格 4 | 单元格 5 | 单元格 6 |</strong></p>\n<p>将产生如下单元格</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th align=\"center\">居中对齐</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格 1</td>\n<td align=\"center\">单元格 2</td>\n<td align=\"right\">单元格 3</td>\n</tr>\n<tr>\n<td align=\"left\">单元格 4</td>\n<td align=\"center\">单元格 5</td>\n<td align=\"right\">单元格 6</td>\n</tr>\n</tbody></table>\n</blockquote>\n","categories":[],"tags":[{"name":"语法","slug":"语法","permalink":"http://example.com/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"Hello World","date":"2024-05-23T04:44:52.000Z","path":"2024/05/23/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]}]